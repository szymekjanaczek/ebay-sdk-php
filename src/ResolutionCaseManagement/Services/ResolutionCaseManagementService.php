<?php

/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\ResolutionCaseManagement\Services;

use DTS\eBaySDK\ResolutionCaseManagement\Types\GetVersionRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\GetVersionResponse;
use GuzzleHttp\Promise\PromiseInterface;
use DTS\eBaySDK\ResolutionCaseManagement\Types\GetUserCasesRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\GetUserCasesResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\GetEBPCaseDetailRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\GetEBPCaseDetailResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\GetActivityOptionsRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\GetActivityOptionsResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\IssueFullRefundRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\IssueFullRefundResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideTrackingInfoRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideTrackingInfoResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\OfferOtherSolutionRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\OfferOtherSolutionResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\EscalateToCustomerSupportRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\EscalateToCustomerSupportResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\AppealToCustomerSupportRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\AppealToCustomerSupportResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\OfferPartialRefundRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\OfferPartialRefundResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\IssuePartialRefundRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\IssuePartialRefundResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideShippingInfoRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideShippingInfoResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideReturnInfoRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideReturnInfoResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideRefundInfoRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideRefundInfoResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\UploadDocumentsRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\UploadDocumentsResponse;
use DTS\eBaySDK\ResolutionCaseManagement\Types\OfferRefundUponReturnRequest;
use DTS\eBaySDK\ResolutionCaseManagement\Types\OfferRefundUponReturnResponse;

class ResolutionCaseManagementService extends ResolutionCaseManagementBaseService
{
    const API_VERSION = '1.3.0';

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param GetVersionRequest $request
     * @return GetVersionResponse
     */
    public function getVersion(GetVersionRequest $request)
    {
        return $this->getVersionAsync($request)->wait();
    }

    /**
     * @param GetVersionRequest $request
     * @return PromiseInterface
     */
    public function getVersionAsync(GetVersionRequest $request)
    {
        return $this->callOperationAsync(
            'getVersion',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\GetVersionResponse'
        );
    }

    /**
     * @param GetUserCasesRequest $request
     * @return GetUserCasesResponse
     */
    public function getUserCases(GetUserCasesRequest $request)
    {
        return $this->getUserCasesAsync($request)->wait();
    }

    /**
     * @param GetUserCasesRequest $request
     * @return PromiseInterface
     */
    public function getUserCasesAsync(GetUserCasesRequest $request)
    {
        return $this->callOperationAsync(
            'getUserCases',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\GetUserCasesResponse'
        );
    }

    /**
     * @param GetEBPCaseDetailRequest $request
     * @return GetEBPCaseDetailResponse
     */
    public function getEBPCaseDetail(GetEBPCaseDetailRequest $request)
    {
        return $this->getEBPCaseDetailAsync($request)->wait();
    }

    /**
     * @param GetEBPCaseDetailRequest $request
     * @return PromiseInterface
     */
    public function getEBPCaseDetailAsync(GetEBPCaseDetailRequest $request)
    {
        return $this->callOperationAsync(
            'getEBPCaseDetail',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\GetEBPCaseDetailResponse'
        );
    }

    /**
     * @param GetActivityOptionsRequest $request
     * @return GetActivityOptionsResponse
     */
    public function getActivityOptions(GetActivityOptionsRequest $request)
    {
        return $this->getActivityOptionsAsync($request)->wait();
    }

    /**
     * @param GetActivityOptionsRequest $request
     * @return PromiseInterface
     */
    public function getActivityOptionsAsync(GetActivityOptionsRequest $request)
    {
        return $this->callOperationAsync(
            'getActivityOptions',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\GetActivityOptionsResponse'
        );
    }

    /**
     * @param IssueFullRefundRequest $request
     * @return IssueFullRefundResponse
     */
    public function issueFullRefund(IssueFullRefundRequest $request)
    {
        return $this->issueFullRefundAsync($request)->wait();
    }

    /**
     * @param IssueFullRefundRequest $request
     * @return PromiseInterface
     */
    public function issueFullRefundAsync(IssueFullRefundRequest $request)
    {
        return $this->callOperationAsync(
            'issueFullRefund',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\IssueFullRefundResponse'
        );
    }

    /**
     * @param ProvideTrackingInfoRequest $request
     * @return ProvideTrackingInfoResponse
     */
    public function provideTrackingInfo(ProvideTrackingInfoRequest $request)
    {
        return $this->provideTrackingInfoAsync($request)->wait();
    }

    /**
     * @param ProvideTrackingInfoRequest $request
     * @return PromiseInterface
     */
    public function provideTrackingInfoAsync(ProvideTrackingInfoRequest $request)
    {
        return $this->callOperationAsync(
            'provideTrackingInfo',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideTrackingInfoResponse'
        );
    }

    /**
     * @param OfferOtherSolutionRequest $request
     * @return OfferOtherSolutionResponse
     */
    public function offerOtherSolution(OfferOtherSolutionRequest $request)
    {
        return $this->offerOtherSolutionAsync($request)->wait();
    }

    /**
     * @param OfferOtherSolutionRequest $request
     * @return PromiseInterface
     */
    public function offerOtherSolutionAsync(OfferOtherSolutionRequest $request)
    {
        return $this->callOperationAsync(
            'offerOtherSolution',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\OfferOtherSolutionResponse'
        );
    }

    /**
     * @param EscalateToCustomerSupportRequest $request
     * @return EscalateToCustomerSupportResponse
     */
    public function escalateToCustomerSupport(EscalateToCustomerSupportRequest $request)
    {
        return $this->escalateToCustomerSupportAsync($request)->wait();
    }

    /**
     * @param EscalateToCustomerSupportRequest $request
     * @return PromiseInterface
     */
    public function escalateToCustomerSupportAsync(EscalateToCustomerSupportRequest $request)
    {
        return $this->callOperationAsync(
            'escalateToCustomerSupport',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\EscalateToCustomerSupportResponse'
        );
    }

    /**
     * @param AppealToCustomerSupportRequest $request
     * @return AppealToCustomerSupportResponse
     */
    public function appealToCustomerSupport(AppealToCustomerSupportRequest $request)
    {
        return $this->appealToCustomerSupportAsync($request)->wait();
    }

    /**
     * @param AppealToCustomerSupportRequest $request
     * @return PromiseInterface
     */
    public function appealToCustomerSupportAsync(AppealToCustomerSupportRequest $request)
    {
        return $this->callOperationAsync(
            'appealToCustomerSupport',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\AppealToCustomerSupportResponse'
        );
    }

    /**
     * @param OfferPartialRefundRequest $request
     * @return OfferPartialRefundResponse
     */
    public function offerPartialRefund(OfferPartialRefundRequest $request)
    {
        return $this->offerPartialRefundAsync($request)->wait();
    }

    /**
     * @param OfferPartialRefundRequest $request
     * @return PromiseInterface
     */
    public function offerPartialRefundAsync(OfferPartialRefundRequest $request)
    {
        return $this->callOperationAsync(
            'offerPartialRefund',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\OfferPartialRefundResponse'
        );
    }

    /**
     * @param IssuePartialRefundRequest $request
     * @return IssuePartialRefundResponse
     */
    public function issuePartialRefund(IssuePartialRefundRequest $request)
    {
        return $this->issuePartialRefundAsync($request)->wait();
    }

    /**
     * @param IssuePartialRefundRequest $request
     * @return PromiseInterface
     */
    public function issuePartialRefundAsync(IssuePartialRefundRequest $request)
    {
        return $this->callOperationAsync(
            'issuePartialRefund',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\IssuePartialRefundResponse'
        );
    }

    /**
     * @param ProvideShippingInfoRequest $request
     * @return ProvideShippingInfoResponse
     */
    public function provideShippingInfo(ProvideShippingInfoRequest $request)
    {
        return $this->provideShippingInfoAsync($request)->wait();
    }

    /**
     * @param ProvideShippingInfoRequest $request
     * @return PromiseInterface
     */
    public function provideShippingInfoAsync(ProvideShippingInfoRequest $request)
    {
        return $this->callOperationAsync(
            'provideShippingInfo',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideShippingInfoResponse'
        );
    }

    /**
     * @param ProvideReturnInfoRequest $request
     * @return ProvideReturnInfoResponse
     */
    public function provideReturnInfo(ProvideReturnInfoRequest $request)
    {
        return $this->provideReturnInfoAsync($request)->wait();
    }

    /**
     * @param ProvideReturnInfoRequest $request
     * @return PromiseInterface
     */
    public function provideReturnInfoAsync(ProvideReturnInfoRequest $request)
    {
        return $this->callOperationAsync(
            'provideReturnInfo',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideReturnInfoResponse'
        );
    }

    /**
     * @param ProvideRefundInfoRequest $request
     * @return ProvideRefundInfoResponse
     */
    public function provideRefundInfo(ProvideRefundInfoRequest $request)
    {
        return $this->provideRefundInfoAsync($request)->wait();
    }

    /**
     * @param ProvideRefundInfoRequest $request
     * @return PromiseInterface
     */
    public function provideRefundInfoAsync(ProvideRefundInfoRequest $request)
    {
        return $this->callOperationAsync(
            'provideRefundInfo',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\ProvideRefundInfoResponse'
        );
    }

    /**
     * @param UploadDocumentsRequest $request
     * @return UploadDocumentsResponse
     */
    public function uploadDocuments(UploadDocumentsRequest $request)
    {
        return $this->uploadDocumentsAsync($request)->wait();
    }

    /**
     * @param UploadDocumentsRequest $request
     * @return PromiseInterface
     */
    public function uploadDocumentsAsync(UploadDocumentsRequest $request)
    {
        return $this->callOperationAsync(
            'uploadDocuments',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\UploadDocumentsResponse'
        );
    }

    /**
     * @param OfferRefundUponReturnRequest $request
     * @return OfferRefundUponReturnResponse
     */
    public function offerRefundUponReturn(OfferRefundUponReturnRequest $request)
    {
        return $this->offerRefundUponReturnAsync($request)->wait();
    }

    /**
     * @param OfferRefundUponReturnRequest $request
     * @return PromiseInterface
     */
    public function offerRefundUponReturnAsync(OfferRefundUponReturnRequest $request)
    {
        return $this->callOperationAsync(
            'offerRefundUponReturn',
            $request,
            '\DTS\eBaySDK\ResolutionCaseManagement\Types\OfferRefundUponReturnResponse'
        );
    }
}
