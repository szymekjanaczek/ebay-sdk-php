<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\BulkDataExchange\Services;

use DTS\eBaySDK\BulkDataExchange\Types\CreateUploadJobRequest;
use DTS\eBaySDK\BulkDataExchange\Types\CreateUploadJobResponse;
use GuzzleHttp\Promise\PromiseInterface;
use DTS\eBaySDK\BulkDataExchange\Types\StartUploadJobRequest;
use DTS\eBaySDK\BulkDataExchange\Types\StartUploadJobResponse;
use DTS\eBaySDK\BulkDataExchange\Types\AbortJobRequest;
use DTS\eBaySDK\BulkDataExchange\Types\AbortJobResponse;
use DTS\eBaySDK\BulkDataExchange\Types\GetJobsRequest;
use DTS\eBaySDK\BulkDataExchange\Types\GetJobsResponse;
use DTS\eBaySDK\BulkDataExchange\Types\GetJobStatusRequest;
use DTS\eBaySDK\BulkDataExchange\Types\GetJobStatusResponse;
use DTS\eBaySDK\BulkDataExchange\Types\StartDownloadJobRequest;
use DTS\eBaySDK\BulkDataExchange\Types\StartDownloadJobResponse;
use DTS\eBaySDK\BulkDataExchange\Types\CreateRecurringJobRequest;
use DTS\eBaySDK\BulkDataExchange\Types\CreateRecurringJobResponse;
use DTS\eBaySDK\BulkDataExchange\Types\DeleteRecurringJobRequest;
use DTS\eBaySDK\BulkDataExchange\Types\DeleteRecurringJobResponse;
use DTS\eBaySDK\BulkDataExchange\Types\GetRecurringJobsRequest;
use DTS\eBaySDK\BulkDataExchange\Types\GetRecurringJobsResponse;
use DTS\eBaySDK\BulkDataExchange\Types\GetRecurringJobExecutionStatusRequest;
use DTS\eBaySDK\BulkDataExchange\Types\GetRecurringJobExecutionStatusResponse;
use DTS\eBaySDK\BulkDataExchange\Types\GetRecurringJobExecutionHistoryRequest;
use DTS\eBaySDK\BulkDataExchange\Types\GetRecurringJobExecutionHistoryResponse;
use DTS\eBaySDK\BulkDataExchange\Types\ActivateRecurringJobRequest;
use DTS\eBaySDK\BulkDataExchange\Types\ActivateRecurringJobResponse;
use DTS\eBaySDK\BulkDataExchange\Types\SuspendRecurringJobRequest;
use DTS\eBaySDK\BulkDataExchange\Types\SuspendRecurringJobResponse;
use DTS\eBaySDK\BulkDataExchange\Types\AbortRecurringJobExecutionRequest;
use DTS\eBaySDK\BulkDataExchange\Types\AbortRecurringJobExecutionResponse;
class BulkDataExchangeService extends BulkDataExchangeBaseService
{
    const API_VERSION = '1.5.0';

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param CreateUploadJobRequest $request
     * @return CreateUploadJobResponse
     */
    public function createUploadJob(CreateUploadJobRequest $request)
    {
        return $this->createUploadJobAsync($request)->wait();
    }

    /**
     * @param CreateUploadJobRequest $request
     * @return PromiseInterface
     */
    public function createUploadJobAsync(CreateUploadJobRequest $request)
    {
        return $this->callOperationAsync(
            'createUploadJob',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\CreateUploadJobResponse'
        );
    }

    /**
     * @param StartUploadJobRequest $request
     * @return StartUploadJobResponse
     */
    public function startUploadJob(StartUploadJobRequest $request)
    {
        return $this->startUploadJobAsync($request)->wait();
    }

    /**
     * @param StartUploadJobRequest $request
     * @return PromiseInterface
     */
    public function startUploadJobAsync(StartUploadJobRequest $request)
    {
        return $this->callOperationAsync(
            'startUploadJob',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\StartUploadJobResponse'
        );
    }

    /**
     * @param AbortJobRequest $request
     * @return AbortJobResponse
     */
    public function abortJob(AbortJobRequest $request)
    {
        return $this->abortJobAsync($request)->wait();
    }

    /**
     * @param AbortJobRequest $request
     * @return PromiseInterface
     */
    public function abortJobAsync(AbortJobRequest $request)
    {
        return $this->callOperationAsync(
            'abortJob',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\AbortJobResponse'
        );
    }

    /**
     * @param GetJobsRequest $request
     * @return GetJobsResponse
     */
    public function getJobs(GetJobsRequest $request)
    {
        return $this->getJobsAsync($request)->wait();
    }

    /**
     * @param GetJobsRequest $request
     * @return PromiseInterface
     */
    public function getJobsAsync(GetJobsRequest $request)
    {
        return $this->callOperationAsync(
            'getJobs',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\GetJobsResponse'
        );
    }

    /**
     * @param GetJobStatusRequest $request
     * @return GetJobStatusResponse
     */
    public function getJobStatus(GetJobStatusRequest $request)
    {
        return $this->getJobStatusAsync($request)->wait();
    }

    /**
     * @param GetJobStatusRequest $request
     * @return PromiseInterface
     */
    public function getJobStatusAsync(GetJobStatusRequest $request)
    {
        return $this->callOperationAsync(
            'getJobStatus',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\GetJobStatusResponse'
        );
    }

    /**
     * @param StartDownloadJobRequest $request
     * @return StartDownloadJobResponse
     */
    public function startDownloadJob(StartDownloadJobRequest $request)
    {
        return $this->startDownloadJobAsync($request)->wait();
    }

    /**
     * @param StartDownloadJobRequest $request
     * @return PromiseInterface
     */
    public function startDownloadJobAsync(StartDownloadJobRequest $request)
    {
        return $this->callOperationAsync(
            'startDownloadJob',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\StartDownloadJobResponse'
        );
    }

    /**
     * @param CreateRecurringJobRequest $request
     * @return CreateRecurringJobResponse
     */
    public function createRecurringJob(CreateRecurringJobRequest $request)
    {
        return $this->createRecurringJobAsync($request)->wait();
    }

    /**
     * @param CreateRecurringJobRequest $request
     * @return PromiseInterface
     */
    public function createRecurringJobAsync(CreateRecurringJobRequest $request)
    {
        return $this->callOperationAsync(
            'createRecurringJob',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\CreateRecurringJobResponse'
        );
    }

    /**
     * @param DeleteRecurringJobRequest $request
     * @return DeleteRecurringJobResponse
     */
    public function deleteRecurringJob(DeleteRecurringJobRequest $request)
    {
        return $this->deleteRecurringJobAsync($request)->wait();
    }

    /**
     * @param DeleteRecurringJobRequest $request
     * @return PromiseInterface
     */
    public function deleteRecurringJobAsync(DeleteRecurringJobRequest $request)
    {
        return $this->callOperationAsync(
            'deleteRecurringJob',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\DeleteRecurringJobResponse'
        );
    }

    /**
     * @param GetRecurringJobsRequest $request
     * @return GetRecurringJobsResponse
     */
    public function getRecurringJobs(GetRecurringJobsRequest $request)
    {
        return $this->getRecurringJobsAsync($request)->wait();
    }

    /**
     * @param GetRecurringJobsRequest $request
     * @return PromiseInterface
     */
    public function getRecurringJobsAsync(GetRecurringJobsRequest $request)
    {
        return $this->callOperationAsync(
            'getRecurringJobs',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\GetRecurringJobsResponse'
        );
    }

    /**
     * @param GetRecurringJobExecutionStatusRequest $request
     * @return GetRecurringJobExecutionStatusResponse
     */
    public function getRecurringJobExecutionStatus(GetRecurringJobExecutionStatusRequest $request)
    {
        return $this->getRecurringJobExecutionStatusAsync($request)->wait();
    }

    /**
     * @param GetRecurringJobExecutionStatusRequest $request
     * @return PromiseInterface
     */
    public function getRecurringJobExecutionStatusAsync(GetRecurringJobExecutionStatusRequest $request)
    {
        return $this->callOperationAsync(
            'getRecurringJobExecutionStatus',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\GetRecurringJobExecutionStatusResponse'
        );
    }

    /**
     * @param GetRecurringJobExecutionHistoryRequest $request
     * @return GetRecurringJobExecutionHistoryResponse
     */
    public function getRecurringJobExecutionHistory(GetRecurringJobExecutionHistoryRequest $request)
    {
        return $this->getRecurringJobExecutionHistoryAsync($request)->wait();
    }

    /**
     * @param GetRecurringJobExecutionHistoryRequest $request
     * @return PromiseInterface
     */
    public function getRecurringJobExecutionHistoryAsync(GetRecurringJobExecutionHistoryRequest $request)
    {
        return $this->callOperationAsync(
            'getRecurringJobExecutionHistory',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\GetRecurringJobExecutionHistoryResponse'
        );
    }

    /**
     * @param ActivateRecurringJobRequest $request
     * @return ActivateRecurringJobResponse
     */
    public function activateRecurringJob(ActivateRecurringJobRequest $request)
    {
        return $this->activateRecurringJobAsync($request)->wait();
    }

    /**
     * @param ActivateRecurringJobRequest $request
     * @return PromiseInterface
     */
    public function activateRecurringJobAsync(ActivateRecurringJobRequest $request)
    {
        return $this->callOperationAsync(
            'activateRecurringJob',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\ActivateRecurringJobResponse'
        );
    }

    /**
     * @param SuspendRecurringJobRequest $request
     * @return SuspendRecurringJobResponse
     */
    public function suspendRecurringJob(SuspendRecurringJobRequest $request)
    {
        return $this->suspendRecurringJobAsync($request)->wait();
    }

    /**
     * @param SuspendRecurringJobRequest $request
     * @return PromiseInterface
     */
    public function suspendRecurringJobAsync(SuspendRecurringJobRequest $request)
    {
        return $this->callOperationAsync(
            'suspendRecurringJob',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\SuspendRecurringJobResponse'
        );
    }

    /**
     * @param AbortRecurringJobExecutionRequest $request
     * @return AbortRecurringJobExecutionResponse
     */
    public function abortRecurringJobExecution(AbortRecurringJobExecutionRequest $request)
    {
        return $this->abortRecurringJobExecutionAsync($request)->wait();
    }

    /**
     * @param AbortRecurringJobExecutionRequest $request
     * @return PromiseInterface
     */
    public function abortRecurringJobExecutionAsync(AbortRecurringJobExecutionRequest $request)
    {
        return $this->callOperationAsync(
            'abortRecurringJobExecution',
            $request,
            '\DTS\eBaySDK\BulkDataExchange\Types\AbortRecurringJobExecutionResponse'
        );
    }
}
