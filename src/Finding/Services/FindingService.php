<?php

/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\Finding\Services;

use DTS\eBaySDK\Finding\Types\GetSearchKeywordsRecommendationRequest;
use DTS\eBaySDK\Finding\Types\GetSearchKeywordsRecommendationResponse;
use GuzzleHttp\Promise\PromiseInterface;
use DTS\eBaySDK\Finding\Types\FindItemsByKeywordsRequest;
use DTS\eBaySDK\Finding\Types\FindItemsByKeywordsResponse;
use DTS\eBaySDK\Finding\Types\FindItemsByCategoryRequest;
use DTS\eBaySDK\Finding\Types\FindItemsByCategoryResponse;
use DTS\eBaySDK\Finding\Types\FindItemsAdvancedRequest;
use DTS\eBaySDK\Finding\Types\FindItemsAdvancedResponse;
use DTS\eBaySDK\Finding\Types\FindItemsByProductRequest;
use DTS\eBaySDK\Finding\Types\FindItemsByProductResponse;
use DTS\eBaySDK\Finding\Types\FindItemsIneBayStoresRequest;
use DTS\eBaySDK\Finding\Types\FindItemsIneBayStoresResponse;
use DTS\eBaySDK\Finding\Types\FindItemsByImageRequest;
use DTS\eBaySDK\Finding\Types\FindItemsByImageResponse;
use DTS\eBaySDK\Finding\Types\GetHistogramsRequest;
use DTS\eBaySDK\Finding\Types\GetHistogramsResponse;
use DTS\eBaySDK\Finding\Types\GetVersionRequest;
use DTS\eBaySDK\Finding\Types\GetVersionResponse;
use DTS\eBaySDK\Finding\Types\FindItemsForFavoriteSearchRequest;
use DTS\eBaySDK\Finding\Types\FindItemsForFavoriteSearchResponse;
use DTS\eBaySDK\Finding\Types\FindCompletedItemsRequest;
use DTS\eBaySDK\Finding\Types\FindCompletedItemsResponse;

class FindingService extends FindingBaseService
{
    const API_VERSION = '1.13.0';

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param GetSearchKeywordsRecommendationRequest $request
     * @return GetSearchKeywordsRecommendationResponse
     */
    public function getSearchKeywordsRecommendation(GetSearchKeywordsRecommendationRequest $request)
    {
        return $this->getSearchKeywordsRecommendationAsync($request)->wait();
    }

    /**
     * @param GetSearchKeywordsRecommendationRequest $request
     * @return PromiseInterface
     */
    public function getSearchKeywordsRecommendationAsync(GetSearchKeywordsRecommendationRequest $request)
    {
        return $this->callOperationAsync(
            'getSearchKeywordsRecommendation',
            $request,
            '\DTS\eBaySDK\Finding\Types\GetSearchKeywordsRecommendationResponse'
        );
    }

    /**
     * @param FindItemsByKeywordsRequest $request
     * @return FindItemsByKeywordsResponse
     */
    public function findItemsByKeywords(FindItemsByKeywordsRequest $request)
    {
        return $this->findItemsByKeywordsAsync($request)->wait();
    }

    /**
     * @param FindItemsByKeywordsRequest $request
     * @return PromiseInterface
     */
    public function findItemsByKeywordsAsync(FindItemsByKeywordsRequest $request)
    {
        return $this->callOperationAsync(
            'findItemsByKeywords',
            $request,
            '\DTS\eBaySDK\Finding\Types\FindItemsByKeywordsResponse'
        );
    }

    /**
     * @param FindItemsByCategoryRequest $request
     * @return FindItemsByCategoryResponse
     */
    public function findItemsByCategory(FindItemsByCategoryRequest $request)
    {
        return $this->findItemsByCategoryAsync($request)->wait();
    }

    /**
     * @param FindItemsByCategoryRequest $request
     * @return PromiseInterface
     */
    public function findItemsByCategoryAsync(FindItemsByCategoryRequest $request)
    {
        return $this->callOperationAsync(
            'findItemsByCategory',
            $request,
            '\DTS\eBaySDK\Finding\Types\FindItemsByCategoryResponse'
        );
    }

    /**
     * @param FindItemsAdvancedRequest $request
     * @return FindItemsAdvancedResponse
     */
    public function findItemsAdvanced(FindItemsAdvancedRequest $request)
    {
        return $this->findItemsAdvancedAsync($request)->wait();
    }

    /**
     * @param FindItemsAdvancedRequest $request
     * @return PromiseInterface
     */
    public function findItemsAdvancedAsync(FindItemsAdvancedRequest $request)
    {
        return $this->callOperationAsync(
            'findItemsAdvanced',
            $request,
            '\DTS\eBaySDK\Finding\Types\FindItemsAdvancedResponse'
        );
    }

    /**
     * @param FindItemsByProductRequest $request
     * @return FindItemsByProductResponse
     */
    public function findItemsByProduct(FindItemsByProductRequest $request)
    {
        return $this->findItemsByProductAsync($request)->wait();
    }

    /**
     * @param FindItemsByProductRequest $request
     * @return PromiseInterface
     */
    public function findItemsByProductAsync(FindItemsByProductRequest $request)
    {
        return $this->callOperationAsync(
            'findItemsByProduct',
            $request,
            '\DTS\eBaySDK\Finding\Types\FindItemsByProductResponse'
        );
    }

    /**
     * @param FindItemsIneBayStoresRequest $request
     * @return FindItemsIneBayStoresResponse
     */
    public function findItemsIneBayStores(FindItemsIneBayStoresRequest $request)
    {
        return $this->findItemsIneBayStoresAsync($request)->wait();
    }

    /**
     * @param FindItemsIneBayStoresRequest $request
     * @return PromiseInterface
     */
    public function findItemsIneBayStoresAsync(FindItemsIneBayStoresRequest $request)
    {
        return $this->callOperationAsync(
            'findItemsIneBayStores',
            $request,
            '\DTS\eBaySDK\Finding\Types\FindItemsIneBayStoresResponse'
        );
    }

    /**
     * @param FindItemsByImageRequest $request
     * @return FindItemsByImageResponse
     */
    public function findItemsByImage(FindItemsByImageRequest $request)
    {
        return $this->findItemsByImageAsync($request)->wait();
    }

    /**
     * @param FindItemsByImageRequest $request
     * @return PromiseInterface
     */
    public function findItemsByImageAsync(FindItemsByImageRequest $request)
    {
        return $this->callOperationAsync(
            'findItemsByImage',
            $request,
            '\DTS\eBaySDK\Finding\Types\FindItemsByImageResponse'
        );
    }

    /**
     * @param GetHistogramsRequest $request
     * @return GetHistogramsResponse
     */
    public function getHistograms(GetHistogramsRequest $request)
    {
        return $this->getHistogramsAsync($request)->wait();
    }

    /**
     * @param GetHistogramsRequest $request
     * @return PromiseInterface
     */
    public function getHistogramsAsync(GetHistogramsRequest $request)
    {
        return $this->callOperationAsync(
            'getHistograms',
            $request,
            '\DTS\eBaySDK\Finding\Types\GetHistogramsResponse'
        );
    }

    /**
     * @param GetVersionRequest $request
     * @return GetVersionResponse
     */
    public function getVersion(GetVersionRequest $request)
    {
        return $this->getVersionAsync($request)->wait();
    }

    /**
     * @param GetVersionRequest $request
     * @return PromiseInterface
     */
    public function getVersionAsync(GetVersionRequest $request)
    {
        return $this->callOperationAsync(
            'getVersion',
            $request,
            '\DTS\eBaySDK\Finding\Types\GetVersionResponse'
        );
    }

    /**
     * @param FindItemsForFavoriteSearchRequest $request
     * @return FindItemsForFavoriteSearchResponse
     */
    public function findItemsForFavoriteSearch(FindItemsForFavoriteSearchRequest $request)
    {
        return $this->findItemsForFavoriteSearchAsync($request)->wait();
    }

    /**
     * @param FindItemsForFavoriteSearchRequest $request
     * @return PromiseInterface
     */
    public function findItemsForFavoriteSearchAsync(FindItemsForFavoriteSearchRequest $request)
    {
        return $this->callOperationAsync(
            'findItemsForFavoriteSearch',
            $request,
            '\DTS\eBaySDK\Finding\Types\FindItemsForFavoriteSearchResponse'
        );
    }

    /**
     * @param FindCompletedItemsRequest $request
     * @return FindCompletedItemsResponse
     */
    public function findCompletedItems(FindCompletedItemsRequest $request)
    {
        return $this->findCompletedItemsAsync($request)->wait();
    }

    /**
     * @param FindCompletedItemsRequest $request
     * @return PromiseInterface
     */
    public function findCompletedItemsAsync(FindCompletedItemsRequest $request)
    {
        return $this->callOperationAsync(
            'findCompletedItems',
            $request,
            '\DTS\eBaySDK\Finding\Types\FindCompletedItemsResponse'
        );
    }
}
