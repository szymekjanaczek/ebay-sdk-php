<?php

/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\Account\Services;

use DTS\eBaySDK\Account\Types\CreateAFulfillmentPolicyRestRequest;
use DTS\eBaySDK\Account\Types\CreateAFulfillmentPolicyRestResponse;
use GuzzleHttp\Promise\PromiseInterface;
use DTS\eBaySDK\Account\Types\DeleteAFulfillmentPolicyRestRequest;
use DTS\eBaySDK\Account\Types\DeleteAFulfillmentPolicyRestResponse;
use DTS\eBaySDK\Account\Types\GetFulfillmentPoliciesByMarketplaceRestRequest;
use DTS\eBaySDK\Account\Types\GetFulfillmentPoliciesByMarketplaceRestResponse;
use DTS\eBaySDK\Account\Types\GetAFulfillmentPolicyByIDRestRequest;
use DTS\eBaySDK\Account\Types\GetAFulfillmentPolicyByIDRestResponse;
use DTS\eBaySDK\Account\Types\GetAFulfillmentPolicyByNameRestRequest;
use DTS\eBaySDK\Account\Types\GetAFulfillmentPolicyByNameRestResponse;
use DTS\eBaySDK\Account\Types\UpdateAFulfillmentPolicyRestRequest;
use DTS\eBaySDK\Account\Types\UpdateAFulfillmentPolicyRestResponse;
use DTS\eBaySDK\Account\Types\CreateAPaymentPolicyRestRequest;
use DTS\eBaySDK\Account\Types\CreateAPaymentPolicyRestResponse;
use DTS\eBaySDK\Account\Types\DeleteAPaymentPolicyRestRequest;
use DTS\eBaySDK\Account\Types\DeleteAPaymentPolicyRestResponse;
use DTS\eBaySDK\Account\Types\GetPaymentPoliciesByMarketplaceRestRequest;
use DTS\eBaySDK\Account\Types\GetPaymentPoliciesByMarketplaceRestResponse;
use DTS\eBaySDK\Account\Types\GetAPaymentPolicyByIDRestRequest;
use DTS\eBaySDK\Account\Types\GetAPaymentPolicyByIDRestResponse;
use DTS\eBaySDK\Account\Types\GetAPaymentPolicyByNameRestRequest;
use DTS\eBaySDK\Account\Types\GetAPaymentPolicyByNameRestResponse;
use DTS\eBaySDK\Account\Types\UpdateAPaymentPolicyRestRequest;
use DTS\eBaySDK\Account\Types\UpdateAPaymentPolicyRestResponse;
use DTS\eBaySDK\Account\Types\GetAccountPrivilegesRestResponse;
use DTS\eBaySDK\Account\Types\GetOptedInProgramsRestResponse;
use DTS\eBaySDK\Account\Types\OptInToProgramRestRequest;
use DTS\eBaySDK\Account\Types\OptInToProgramRestResponse;
use DTS\eBaySDK\Account\Types\OptOutOfProgramRestRequest;
use DTS\eBaySDK\Account\Types\OptOutOfProgramRestResponse;
use DTS\eBaySDK\Account\Types\GetShippingRateTablesRestRequest;
use DTS\eBaySDK\Account\Types\GetShippingRateTablesRestResponse;
use DTS\eBaySDK\Account\Types\CreateAReturnPolicyRestRequest;
use DTS\eBaySDK\Account\Types\CreateAReturnPolicyRestResponse;
use DTS\eBaySDK\Account\Types\DeleteAReturnPolicyRestRequest;
use DTS\eBaySDK\Account\Types\DeleteAReturnPolicyRestResponse;
use DTS\eBaySDK\Account\Types\GetReturnPoliciesByMarketplaceRestRequest;
use DTS\eBaySDK\Account\Types\GetReturnPoliciesByMarketplaceRestResponse;
use DTS\eBaySDK\Account\Types\GetAReturnPolicyByIDRestRequest;
use DTS\eBaySDK\Account\Types\GetAReturnPolicyByIDRestResponse;
use DTS\eBaySDK\Account\Types\GetAReturnPolicyByNameRestRequest;
use DTS\eBaySDK\Account\Types\GetAReturnPolicyByNameRestResponse;
use DTS\eBaySDK\Account\Types\UpdateAReturnPolicyRestRequest;
use DTS\eBaySDK\Account\Types\UpdateAReturnPolicyRestResponse;
use DTS\eBaySDK\Account\Types\CreateASalesTaxTableRestRequest;
use DTS\eBaySDK\Account\Types\CreateASalesTaxTableRestResponse;
use DTS\eBaySDK\Account\Types\DeleteASalesTaxTableRestRequest;
use DTS\eBaySDK\Account\Types\DeleteASalesTaxTableRestResponse;
use DTS\eBaySDK\Account\Types\GetASalesTaxTableRestRequest;
use DTS\eBaySDK\Account\Types\GetASalesTaxTableRestResponse;
use DTS\eBaySDK\Account\Types\GetAllSalesTaxTablesRestRequest;
use DTS\eBaySDK\Account\Types\GetAllSalesTaxTablesRestResponse;

class AccountService extends AccountBaseService
{
    const API_VERSION = 'v1';

    /**
     * @property array $operations Associative array of operations provided by the service.
     */
    protected static $operations = [
        'CreateAFulfillmentPolicy'            => [
            'method'        => 'POST',
            'resource'      => 'fulfillment_policy',
            'responseClass' => '\DTS\eBaySDK\Account\Types\CreateAFulfillmentPolicyRestResponse',
            'params'        => []
        ],
        'DeleteAFulfillmentPolicy'            => [
            'method'        => 'DELETE',
            'resource'      => 'fulfillment_policy/{fulfillmentPolicyId}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\DeleteAFulfillmentPolicyRestResponse',
            'params'        => [
                'fulfillmentPolicyId' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetFulfillmentPoliciesByMarketplace' => [
            'method'        => 'GET',
            'resource'      => 'fulfillment_policy',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetFulfillmentPoliciesByMarketplaceRestResponse',
            'params'        => [
                'marketplace_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAFulfillmentPolicyByID'           => [
            'method'        => 'GET',
            'resource'      => 'fulfillment_policy/{fulfillmentPolicyId}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetAFulfillmentPolicyByIDRestResponse',
            'params'        => [
                'fulfillmentPolicyId' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAFulfillmentPolicyByName'         => [
            'method'        => 'GET',
            'resource'      => 'fulfillment_policy/get_by_policy_name',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetAFulfillmentPolicyByNameRestResponse',
            'params'        => [
                'marketplace_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ],
                'name'           => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UpdateAFulfillmentPolicy'            => [
            'method'        => 'PUT',
            'resource'      => 'fulfillment_policy/{fulfillmentPolicyId}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\UpdateAFulfillmentPolicyRestResponse',
            'params'        => [
                'fulfillmentPolicyId' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateAPaymentPolicy'                => [
            'method'        => 'POST',
            'resource'      => 'payment_policy',
            'responseClass' => '\DTS\eBaySDK\Account\Types\CreateAPaymentPolicyRestResponse',
            'params'        => []
        ],
        'DeleteAPaymentPolicy'                => [
            'method'        => 'DELETE',
            'resource'      => 'payment_policy/{payment_policy_id}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\DeleteAPaymentPolicyRestResponse',
            'params'        => [
                'payment_policy_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetPaymentPoliciesByMarketplace'     => [
            'method'        => 'GET',
            'resource'      => 'payment_policy',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetPaymentPoliciesByMarketplaceRestResponse',
            'params'        => [
                'marketplace_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAPaymentPolicyByID'               => [
            'method'        => 'GET',
            'resource'      => 'payment_policy/{paymentPolicyId}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetAPaymentPolicyByIDRestResponse',
            'params'        => [
                'paymentPolicyId' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAPaymentPolicyByName'             => [
            'method'        => 'GET',
            'resource'      => 'payment_policy/get_by_policy_name',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetAPaymentPolicyByNameRestResponse',
            'params'        => [
                'marketplace_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ],
                'name'           => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UpdateAPaymentPolicy'                => [
            'method'        => 'PUT',
            'resource'      => 'payment_policy/{payment_policy_id}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\UpdateAPaymentPolicyRestResponse',
            'params'        => [
                'payment_policy_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAccountPrivileges'                => [
            'method'        => 'GET',
            'resource'      => 'privilege',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetAccountPrivilegesRestResponse',
            'params'        => []
        ],
        'GetOptedInPrograms'                  => [
            'method'        => 'GET',
            'resource'      => 'program/get_opted_in_programs',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetOptedInProgramsRestResponse',
            'params'        => []
        ],
        'OptInToProgram'                      => [
            'method'        => 'POST',
            'resource'      => 'program/opt_in',
            'responseClass' => '\DTS\eBaySDK\Account\Types\OptInToProgramRestResponse',
            'params'        => []
        ],
        'OptOutOfProgram'                     => [
            'method'        => 'POST',
            'resource'      => 'program/opt_out',
            'responseClass' => '\DTS\eBaySDK\Account\Types\OptOutOfProgramRestResponse',
            'params'        => []
        ],
        'GetShippingRateTables'               => [
            'method'        => 'POST',
            'resource'      => 'rate_table',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetShippingRateTablesRestResponse',
            'params'        => [
                'country_code' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'CreateAReturnPolicy'                 => [
            'method'        => 'POST',
            'resource'      => 'return_policy',
            'responseClass' => '\DTS\eBaySDK\Account\Types\CreateAReturnPolicyRestResponse',
            'params'        => []
        ],
        'DeleteAReturnPolicy'                 => [
            'method'        => 'DELETE',
            'resource'      => 'return_policy/{return_policy_id}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\DeleteAReturnPolicyRestResponse',
            'params'        => [
                'return_policy_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetReturnPoliciesByMarketplace'      => [
            'method'        => 'GET',
            'resource'      => 'return_policy',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetReturnPoliciesByMarketplaceRestResponse',
            'params'        => [
                'marketplace_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAReturnPolicyByID'                => [
            'method'        => 'GET',
            'resource'      => 'return_policy/{returnPolicyId}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetAReturnPolicyByIDRestResponse',
            'params'        => [
                'returnPolicyId' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAReturnPolicyByName'              => [
            'method'        => 'GET',
            'resource'      => 'return_policy/get_by_policy_name',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetAReturnPolicyByNameRestResponse',
            'params'        => [
                'marketplace_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ],
                'name'           => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UpdateAReturnPolicy'                 => [
            'method'        => 'PUT',
            'resource'      => 'return_policy/{return_policy_id}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\UpdateAReturnPolicyRestResponse',
            'params'        => [
                'return_policy_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateASalesTaxTable'                => [
            'method'        => 'PUT',
            'resource'      => 'sales_tax/{countryCode}/{jurisdictionId}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\CreateASalesTaxTableRestResponse',
            'params'        => [
                'countryCode'    => [
                    'valid'    => ['string'],
                    'required' => true
                ],
                'jurisdictionId' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'DeleteASalesTaxTable'                => [
            'method'        => 'DELETE',
            'resource'      => 'sales_tax/{countryCode}/{jurisdictionId}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\DeleteASalesTaxTableRestResponse',
            'params'        => [
                'countryCode'    => [
                    'valid'    => ['string'],
                    'required' => true
                ],
                'jurisdictionId' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetASalesTaxTable'                   => [
            'method'        => 'GET',
            'resource'      => 'sales_tax/{countryCode}/{jurisdictionId}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetASalesTaxTableRestResponse',
            'params'        => [
                'countryCode'    => [
                    'valid'    => ['string'],
                    'required' => true
                ],
                'jurisdictionId' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAllSalesTaxTables'                => [
            'method'        => 'GET',
            'resource'      => 'sales_tax',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetAllSalesTaxTablesRestResponse',
            'params'        => [
                'country_code' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ]
    ];

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param CreateAFulfillmentPolicyRestRequest $request
     * @return CreateAFulfillmentPolicyRestResponse
     */
    public function createAFulfillmentPolicy(CreateAFulfillmentPolicyRestRequest $request)
    {
        return $this->createAFulfillmentPolicyAsync($request)->wait();
    }

    /**
     * @param CreateAFulfillmentPolicyRestRequest $request
     * @return PromiseInterface
     */
    public function createAFulfillmentPolicyAsync(CreateAFulfillmentPolicyRestRequest $request)
    {
        return $this->callOperationAsync('CreateAFulfillmentPolicy', $request);
    }

    /**
     * @param DeleteAFulfillmentPolicyRestRequest $request
     * @return DeleteAFulfillmentPolicyRestResponse
     */
    public function deleteAFulfillmentPolicy(DeleteAFulfillmentPolicyRestRequest $request)
    {
        return $this->deleteAFulfillmentPolicyAsync($request)->wait();
    }

    /**
     * @param DeleteAFulfillmentPolicyRestRequest $request
     * @return PromiseInterface
     */
    public function deleteAFulfillmentPolicyAsync(DeleteAFulfillmentPolicyRestRequest $request)
    {
        return $this->callOperationAsync('DeleteAFulfillmentPolicy', $request);
    }

    /**
     * @param GetFulfillmentPoliciesByMarketplaceRestRequest $request
     * @return GetFulfillmentPoliciesByMarketplaceRestResponse
     */
    public function getFulfillmentPoliciesByMarketplace(GetFulfillmentPoliciesByMarketplaceRestRequest $request)
    {
        return $this->getFulfillmentPoliciesByMarketplaceAsync($request)->wait();
    }

    /**
     * @param GetFulfillmentPoliciesByMarketplaceRestRequest $request
     * @return PromiseInterface
     */
    public function getFulfillmentPoliciesByMarketplaceAsync(GetFulfillmentPoliciesByMarketplaceRestRequest $request)
    {
        return $this->callOperationAsync('GetFulfillmentPoliciesByMarketplace', $request);
    }

    /**
     * @param GetAFulfillmentPolicyByIDRestRequest $request
     * @return GetAFulfillmentPolicyByIDRestResponse
     */
    public function getAFulfillmentPolicyByID(GetAFulfillmentPolicyByIDRestRequest $request)
    {
        return $this->getAFulfillmentPolicyByIDAsync($request)->wait();
    }

    /**
     * @param GetAFulfillmentPolicyByIDRestRequest $request
     * @return PromiseInterface
     */
    public function getAFulfillmentPolicyByIDAsync(GetAFulfillmentPolicyByIDRestRequest $request)
    {
        return $this->callOperationAsync('GetAFulfillmentPolicyByID', $request);
    }

    /**
     * @param GetAFulfillmentPolicyByNameRestRequest $request
     * @return GetAFulfillmentPolicyByNameRestResponse
     */
    public function getAFulfillmentPolicyByName(GetAFulfillmentPolicyByNameRestRequest $request)
    {
        return $this->getAFulfillmentPolicyByNameAsync($request)->wait();
    }

    /**
     * @param GetAFulfillmentPolicyByNameRestRequest $request
     * @return PromiseInterface
     */
    public function getAFulfillmentPolicyByNameAsync(GetAFulfillmentPolicyByNameRestRequest $request)
    {
        return $this->callOperationAsync('GetAFulfillmentPolicyByName', $request);
    }

    /**
     * @param UpdateAFulfillmentPolicyRestRequest $request
     * @return UpdateAFulfillmentPolicyRestResponse
     */
    public function updateAFulfillmentPolicy(UpdateAFulfillmentPolicyRestRequest $request)
    {
        return $this->updateAFulfillmentPolicyAsync($request)->wait();
    }

    /**
     * @param UpdateAFulfillmentPolicyRestRequest $request
     * @return PromiseInterface
     */
    public function updateAFulfillmentPolicyAsync(UpdateAFulfillmentPolicyRestRequest $request)
    {
        return $this->callOperationAsync('UpdateAFulfillmentPolicy', $request);
    }

    /**
     * @param CreateAPaymentPolicyRestRequest $request
     * @return CreateAPaymentPolicyRestResponse
     */
    public function createAPaymentPolicy(CreateAPaymentPolicyRestRequest $request)
    {
        return $this->createAPaymentPolicyAsync($request)->wait();
    }

    /**
     * @param CreateAPaymentPolicyRestRequest $request
     * @return PromiseInterface
     */
    public function createAPaymentPolicyAsync(CreateAPaymentPolicyRestRequest $request)
    {
        return $this->callOperationAsync('CreateAPaymentPolicy', $request);
    }

    /**
     * @param DeleteAPaymentPolicyRestRequest $request
     * @return DeleteAPaymentPolicyRestResponse
     */
    public function deleteAPaymentPolicy(DeleteAPaymentPolicyRestRequest $request)
    {
        return $this->deleteAPaymentPolicyAsync($request)->wait();
    }

    /**
     * @param DeleteAPaymentPolicyRestRequest $request
     * @return PromiseInterface
     */
    public function deleteAPaymentPolicyAsync(DeleteAPaymentPolicyRestRequest $request)
    {
        return $this->callOperationAsync('DeleteAPaymentPolicy', $request);
    }

    /**
     * @param GetPaymentPoliciesByMarketplaceRestRequest $request
     * @return GetPaymentPoliciesByMarketplaceRestResponse
     */
    public function getPaymentPoliciesByMarketplace(GetPaymentPoliciesByMarketplaceRestRequest $request)
    {
        return $this->getPaymentPoliciesByMarketplaceAsync($request)->wait();
    }

    /**
     * @param GetPaymentPoliciesByMarketplaceRestRequest $request
     * @return PromiseInterface
     */
    public function getPaymentPoliciesByMarketplaceAsync(GetPaymentPoliciesByMarketplaceRestRequest $request)
    {
        return $this->callOperationAsync('GetPaymentPoliciesByMarketplace', $request);
    }

    /**
     * @param GetAPaymentPolicyByIDRestRequest $request
     * @return GetAPaymentPolicyByIDRestResponse
     */
    public function getAPaymentPolicyByID(GetAPaymentPolicyByIDRestRequest $request)
    {
        return $this->getAPaymentPolicyByIDAsync($request)->wait();
    }

    /**
     * @param GetAPaymentPolicyByIDRestRequest $request
     * @return PromiseInterface
     */
    public function getAPaymentPolicyByIDAsync(GetAPaymentPolicyByIDRestRequest $request)
    {
        return $this->callOperationAsync('GetAPaymentPolicyByID', $request);
    }

    /**
     * @param GetAPaymentPolicyByNameRestRequest $request
     * @return GetAPaymentPolicyByNameRestResponse
     */
    public function getAPaymentPolicyByName(GetAPaymentPolicyByNameRestRequest $request)
    {
        return $this->getAPaymentPolicyByNameAsync($request)->wait();
    }

    /**
     * @param GetAPaymentPolicyByNameRestRequest $request
     * @return PromiseInterface
     */
    public function getAPaymentPolicyByNameAsync(GetAPaymentPolicyByNameRestRequest $request)
    {
        return $this->callOperationAsync('GetAPaymentPolicyByName', $request);
    }

    /**
     * @param UpdateAPaymentPolicyRestRequest $request
     * @return UpdateAPaymentPolicyRestResponse
     */
    public function updateAPaymentPolicy(UpdateAPaymentPolicyRestRequest $request)
    {
        return $this->updateAPaymentPolicyAsync($request)->wait();
    }

    /**
     * @param UpdateAPaymentPolicyRestRequest $request
     * @return PromiseInterface
     */
    public function updateAPaymentPolicyAsync(UpdateAPaymentPolicyRestRequest $request)
    {
        return $this->callOperationAsync('UpdateAPaymentPolicy', $request);
    }

    /**
     * @return GetAccountPrivilegesRestResponse
     */
    public function getAccountPrivileges()
    {
        return $this->getAccountPrivilegesAsync()->wait();
    }

    /**
     * @return PromiseInterface
     */
    public function getAccountPrivilegesAsync()
    {
        return $this->callOperationAsync('GetAccountPrivileges');
    }

    /**
     * @return GetOptedInProgramsRestResponse
     */
    public function getOptedInPrograms()
    {
        return $this->getOptedInProgramsAsync()->wait();
    }

    /**
     * @return PromiseInterface
     */
    public function getOptedInProgramsAsync()
    {
        return $this->callOperationAsync('GetOptedInPrograms');
    }

    /**
     * @param OptInToProgramRestRequest $request
     * @return OptInToProgramRestResponse
     */
    public function optInToProgram(OptInToProgramRestRequest $request)
    {
        return $this->optInToProgramAsync($request)->wait();
    }

    /**
     * @param OptInToProgramRestRequest $request
     * @return PromiseInterface
     */
    public function optInToProgramAsync(OptInToProgramRestRequest $request)
    {
        return $this->callOperationAsync('OptInToProgram', $request);
    }

    /**
     * @param OptOutOfProgramRestRequest $request
     * @return OptOutOfProgramRestResponse
     */
    public function optOutOfProgram(OptOutOfProgramRestRequest $request)
    {
        return $this->optOutOfProgramAsync($request)->wait();
    }

    /**
     * @param OptOutOfProgramRestRequest $request
     * @return PromiseInterface
     */
    public function optOutOfProgramAsync(OptOutOfProgramRestRequest $request)
    {
        return $this->callOperationAsync('OptOutOfProgram', $request);
    }

    /**
     * @param GetShippingRateTablesRestRequest $request
     * @return GetShippingRateTablesRestResponse
     */
    public function getShippingRateTables(GetShippingRateTablesRestRequest $request)
    {
        return $this->getShippingRateTablesAsync($request)->wait();
    }

    /**
     * @param GetShippingRateTablesRestRequest $request
     * @return PromiseInterface
     */
    public function getShippingRateTablesAsync(GetShippingRateTablesRestRequest $request)
    {
        return $this->callOperationAsync('GetShippingRateTables', $request);
    }

    /**
     * @param CreateAReturnPolicyRestRequest $request
     * @return CreateAReturnPolicyRestResponse
     */
    public function createAReturnPolicy(CreateAReturnPolicyRestRequest $request)
    {
        return $this->createAReturnPolicyAsync($request)->wait();
    }

    /**
     * @param CreateAReturnPolicyRestRequest $request
     * @return PromiseInterface
     */
    public function createAReturnPolicyAsync(CreateAReturnPolicyRestRequest $request)
    {
        return $this->callOperationAsync('CreateAReturnPolicy', $request);
    }

    /**
     * @param DeleteAReturnPolicyRestRequest $request
     * @return DeleteAReturnPolicyRestResponse
     */
    public function deleteAReturnPolicy(DeleteAReturnPolicyRestRequest $request)
    {
        return $this->deleteAReturnPolicyAsync($request)->wait();
    }

    /**
     * @param DeleteAReturnPolicyRestRequest $request
     * @return PromiseInterface
     */
    public function deleteAReturnPolicyAsync(DeleteAReturnPolicyRestRequest $request)
    {
        return $this->callOperationAsync('DeleteAReturnPolicy', $request);
    }

    /**
     * @param GetReturnPoliciesByMarketplaceRestRequest $request
     * @return GetReturnPoliciesByMarketplaceRestResponse
     */
    public function getReturnPoliciesByMarketplace(GetReturnPoliciesByMarketplaceRestRequest $request)
    {
        return $this->getReturnPoliciesByMarketplaceAsync($request)->wait();
    }

    /**
     * @param GetReturnPoliciesByMarketplaceRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnPoliciesByMarketplaceAsync(GetReturnPoliciesByMarketplaceRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnPoliciesByMarketplace', $request);
    }

    /**
     * @param GetAReturnPolicyByIDRestRequest $request
     * @return GetAReturnPolicyByIDRestResponse
     */
    public function getAReturnPolicyByID(GetAReturnPolicyByIDRestRequest $request)
    {
        return $this->getAReturnPolicyByIDAsync($request)->wait();
    }

    /**
     * @param GetAReturnPolicyByIDRestRequest $request
     * @return PromiseInterface
     */
    public function getAReturnPolicyByIDAsync(GetAReturnPolicyByIDRestRequest $request)
    {
        return $this->callOperationAsync('GetAReturnPolicyByID', $request);
    }

    /**
     * @param GetAReturnPolicyByNameRestRequest $request
     * @return GetAReturnPolicyByNameRestResponse
     */
    public function getAReturnPolicyByName(GetAReturnPolicyByNameRestRequest $request)
    {
        return $this->getAReturnPolicyByNameAsync($request)->wait();
    }

    /**
     * @param GetAReturnPolicyByNameRestRequest $request
     * @return PromiseInterface
     */
    public function getAReturnPolicyByNameAsync(GetAReturnPolicyByNameRestRequest $request)
    {
        return $this->callOperationAsync('GetAReturnPolicyByName', $request);
    }

    /**
     * @param UpdateAReturnPolicyRestRequest $request
     * @return UpdateAReturnPolicyRestResponse
     */
    public function updateAReturnPolicy(UpdateAReturnPolicyRestRequest $request)
    {
        return $this->updateAReturnPolicyAsync($request)->wait();
    }

    /**
     * @param UpdateAReturnPolicyRestRequest $request
     * @return PromiseInterface
     */
    public function updateAReturnPolicyAsync(UpdateAReturnPolicyRestRequest $request)
    {
        return $this->callOperationAsync('UpdateAReturnPolicy', $request);
    }

    /**
     * @param CreateASalesTaxTableRestRequest $request
     * @return CreateASalesTaxTableRestResponse
     */
    public function createASalesTaxTable(CreateASalesTaxTableRestRequest $request)
    {
        return $this->createASalesTaxTableAsync($request)->wait();
    }

    /**
     * @param CreateASalesTaxTableRestRequest $request
     * @return PromiseInterface
     */
    public function createASalesTaxTableAsync(CreateASalesTaxTableRestRequest $request)
    {
        return $this->callOperationAsync('CreateASalesTaxTable', $request);
    }

    /**
     * @param DeleteASalesTaxTableRestRequest $request
     * @return DeleteASalesTaxTableRestResponse
     */
    public function deleteASalesTaxTable(DeleteASalesTaxTableRestRequest $request)
    {
        return $this->deleteASalesTaxTableAsync($request)->wait();
    }

    /**
     * @param DeleteASalesTaxTableRestRequest $request
     * @return PromiseInterface
     */
    public function deleteASalesTaxTableAsync(DeleteASalesTaxTableRestRequest $request)
    {
        return $this->callOperationAsync('DeleteASalesTaxTable', $request);
    }

    /**
     * @param GetASalesTaxTableRestRequest $request
     * @return GetASalesTaxTableRestResponse
     */
    public function getASalesTaxTable(GetASalesTaxTableRestRequest $request)
    {
        return $this->getASalesTaxTableAsync($request)->wait();
    }

    /**
     * @param GetASalesTaxTableRestRequest $request
     * @return PromiseInterface
     */
    public function getASalesTaxTableAsync(GetASalesTaxTableRestRequest $request)
    {
        return $this->callOperationAsync('GetASalesTaxTable', $request);
    }

    /**
     * @param GetAllSalesTaxTablesRestRequest $request
     * @return GetAllSalesTaxTablesRestResponse
     */
    public function getAllSalesTaxTables(GetAllSalesTaxTablesRestRequest $request)
    {
        return $this->getAllSalesTaxTablesAsync($request)->wait();
    }

    /**
     * @param GetAllSalesTaxTablesRestRequest $request
     * @return PromiseInterface
     */
    public function getAllSalesTaxTablesAsync(GetAllSalesTaxTablesRestRequest $request)
    {
        return $this->callOperationAsync('GetAllSalesTaxTables', $request);
    }
}
