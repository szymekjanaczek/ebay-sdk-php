<?php

/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\Browse\Services;

use DTS\eBaySDK\Browse\Types\GetItemRestRequest;
use DTS\eBaySDK\Browse\Types\GetItemRestResponse;
use GuzzleHttp\Promise\PromiseInterface;
use DTS\eBaySDK\Browse\Types\GetItemByLegacyIdRestRequest;
use DTS\eBaySDK\Browse\Types\GetItemByLegacyIdRestResponse;
use DTS\eBaySDK\Browse\Types\GetItemsByItemGroupRestRequest;
use DTS\eBaySDK\Browse\Types\GetItemsByItemGroupRestResponse;
use DTS\eBaySDK\Browse\Types\SearchForItemsRestRequest;
use DTS\eBaySDK\Browse\Types\SearchForItemsRestResponse;

class BrowseService extends BrowseBaseService
{
    const API_VERSION = 'v1';

    /**
     * @property array $operations Associative array of operations provided by the service.
     */
    protected static $operations = [
        'GetItem'             => [
            'method'        => 'GET',
            'resource'      => 'item/{item_id}',
            'responseClass' => '\DTS\eBaySDK\Browse\Types\GetItemRestResponse',
            'params'        => [
                'item_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetItemByLegacyId'   => [
            'method'        => 'GET',
            'resource'      => 'item/get_item_by_legacy_id',
            'responseClass' => '\DTS\eBaySDK\Browse\Types\GetItemByLegacyIdRestResponse',
            'params'        => [
                'legacy_item_id'       => [
                    'valid'    => ['string'],
                    'required' => true
                ],
                'legacy_variation_id'  => [
                    'valid' => ['string']
                ],
                'legacy_variation_sku' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'GetItemsByItemGroup' => [
            'method'        => 'GET',
            'resource'      => 'item/get_items_by_item_group',
            'responseClass' => '\DTS\eBaySDK\Browse\Types\GetItemsByItemGroupRestResponse',
            'params'        => [
                'item_group_id' => [
                    'valid'    => ['string'],
                    'required' => true
                ]
            ]
        ],
        'SearchForItems'      => [
            'method'        => 'GET',
            'resource'      => 'item_summary/search',
            'responseClass' => '\DTS\eBaySDK\Browse\Types\SearchForItemsRestResponse',
            'params'        => [
                'aspect_filter' => [
                    'valid' => ['string']
                ],
                'category_ids'  => [
                    'valid' => ['string']
                ],
                'epid'          => [
                    'valid' => ['string']
                ],
                'fieldgroups'   => [
                    'valid' => ['string']
                ],
                'filter'        => [
                    'valid' => ['string']
                ],
                'gtin'          => [
                    'valid' => ['string']
                ],
                'limit'         => [
                    'valid' => ['string']
                ],
                'offset'        => [
                    'valid' => ['string']
                ],
                'q'             => [
                    'valid' => ['string']
                ],
                'sort'          => [
                    'valid' => ['string']
                ]
            ]
        ]
    ];

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param GetItemRestRequest $request
     * @return GetItemRestResponse
     */
    public function getItem(GetItemRestRequest $request)
    {
        return $this->getItemAsync($request)->wait();
    }

    /**
     * @param GetItemRestRequest $request
     * @return PromiseInterface
     */
    public function getItemAsync(GetItemRestRequest $request)
    {
        return $this->callOperationAsync('GetItem', $request);
    }

    /**
     * @param GetItemByLegacyIdRestRequest $request
     * @return GetItemByLegacyIdRestResponse
     */
    public function getItemByLegacyId(GetItemByLegacyIdRestRequest $request)
    {
        return $this->getItemByLegacyIdAsync($request)->wait();
    }

    /**
     * @param GetItemByLegacyIdRestRequest $request
     * @return PromiseInterface
     */
    public function getItemByLegacyIdAsync(GetItemByLegacyIdRestRequest $request)
    {
        return $this->callOperationAsync('GetItemByLegacyId', $request);
    }

    /**
     * @param GetItemsByItemGroupRestRequest $request
     * @return GetItemsByItemGroupRestResponse
     */
    public function getItemsByItemGroup(GetItemsByItemGroupRestRequest $request)
    {
        return $this->getItemsByItemGroupAsync($request)->wait();
    }

    /**
     * @param GetItemsByItemGroupRestRequest $request
     * @return PromiseInterface
     */
    public function getItemsByItemGroupAsync(GetItemsByItemGroupRestRequest $request)
    {
        return $this->callOperationAsync('GetItemsByItemGroup', $request);
    }

    /**
     * @param SearchForItemsRestRequest $request
     * @return SearchForItemsRestResponse
     */
    public function searchForItems(SearchForItemsRestRequest $request)
    {
        return $this->searchForItemsAsync($request)->wait();
    }

    /**
     * @param SearchForItemsRestRequest $request
     * @return PromiseInterface
     */
    public function searchForItemsAsync(SearchForItemsRestRequest $request)
    {
        return $this->callOperationAsync('SearchForItems', $request);
    }
}
