<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\Trading\Services;

use DTS\eBaySDK\Trading\Types\AddDisputeRequestType;
use DTS\eBaySDK\Trading\Types\AddDisputeResponseType;
use GuzzleHttp\Promise\PromiseInterface;
use DTS\eBaySDK\Trading\Types\AddDisputeResponseRequestType;
use DTS\eBaySDK\Trading\Types\AddDisputeResponseResponseType;
use DTS\eBaySDK\Trading\Types\AddFixedPriceItemRequestType;
use DTS\eBaySDK\Trading\Types\AddFixedPriceItemResponseType;
use DTS\eBaySDK\Trading\Types\AddItemRequestType;
use DTS\eBaySDK\Trading\Types\AddItemResponseType;
use DTS\eBaySDK\Trading\Types\AddItemFromSellingManagerTemplateRequestType;
use DTS\eBaySDK\Trading\Types\AddItemFromSellingManagerTemplateResponseType;
use DTS\eBaySDK\Trading\Types\AddItemsRequestType;
use DTS\eBaySDK\Trading\Types\AddItemsResponseType;
use DTS\eBaySDK\Trading\Types\AddMemberMessageAAQToPartnerRequestType;
use DTS\eBaySDK\Trading\Types\AddMemberMessageAAQToPartnerResponseType;
use DTS\eBaySDK\Trading\Types\AddMemberMessageRTQRequestType;
use DTS\eBaySDK\Trading\Types\AddMemberMessageRTQResponseType;
use DTS\eBaySDK\Trading\Types\AddMemberMessagesAAQToBidderRequestType;
use DTS\eBaySDK\Trading\Types\AddMemberMessagesAAQToBidderResponseType;
use DTS\eBaySDK\Trading\Types\AddOrderRequestType;
use DTS\eBaySDK\Trading\Types\AddOrderResponseType;
use DTS\eBaySDK\Trading\Types\AddSecondChanceItemRequestType;
use DTS\eBaySDK\Trading\Types\AddSecondChanceItemResponseType;
use DTS\eBaySDK\Trading\Types\AddSellingManagerInventoryFolderRequestType;
use DTS\eBaySDK\Trading\Types\AddSellingManagerInventoryFolderResponseType;
use DTS\eBaySDK\Trading\Types\AddSellingManagerProductRequestType;
use DTS\eBaySDK\Trading\Types\AddSellingManagerProductResponseType;
use DTS\eBaySDK\Trading\Types\AddSellingManagerTemplateRequestType;
use DTS\eBaySDK\Trading\Types\AddSellingManagerTemplateResponseType;
use DTS\eBaySDK\Trading\Types\AddToItemDescriptionRequestType;
use DTS\eBaySDK\Trading\Types\AddToItemDescriptionResponseType;
use DTS\eBaySDK\Trading\Types\AddToWatchListRequestType;
use DTS\eBaySDK\Trading\Types\AddToWatchListResponseType;
use DTS\eBaySDK\Trading\Types\AddTransactionConfirmationItemRequestType;
use DTS\eBaySDK\Trading\Types\AddTransactionConfirmationItemResponseType;
use DTS\eBaySDK\Trading\Types\CompleteSaleRequestType;
use DTS\eBaySDK\Trading\Types\CompleteSaleResponseType;
use DTS\eBaySDK\Trading\Types\ConfirmIdentityRequestType;
use DTS\eBaySDK\Trading\Types\ConfirmIdentityResponseType;
use DTS\eBaySDK\Trading\Types\DeleteMyMessagesRequestType;
use DTS\eBaySDK\Trading\Types\DeleteMyMessagesResponseType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerInventoryFolderRequestType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerInventoryFolderResponseType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerItemAutomationRuleRequestType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerItemAutomationRuleResponseType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerProductRequestType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerProductResponseType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerTemplateRequestType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerTemplateResponseType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerTemplateAutomationRuleRequestType;
use DTS\eBaySDK\Trading\Types\DeleteSellingManagerTemplateAutomationRuleResponseType;
use DTS\eBaySDK\Trading\Types\DisableUnpaidItemAssistanceRequestType;
use DTS\eBaySDK\Trading\Types\DisableUnpaidItemAssistanceResponseType;
use DTS\eBaySDK\Trading\Types\EndFixedPriceItemRequestType;
use DTS\eBaySDK\Trading\Types\EndFixedPriceItemResponseType;
use DTS\eBaySDK\Trading\Types\EndItemRequestType;
use DTS\eBaySDK\Trading\Types\EndItemResponseType;
use DTS\eBaySDK\Trading\Types\EndItemsRequestType;
use DTS\eBaySDK\Trading\Types\EndItemsResponseType;
use DTS\eBaySDK\Trading\Types\ExtendSiteHostedPicturesRequestType;
use DTS\eBaySDK\Trading\Types\ExtendSiteHostedPicturesResponseType;
use DTS\eBaySDK\Trading\Types\FetchTokenRequestType;
use DTS\eBaySDK\Trading\Types\FetchTokenResponseType;
use DTS\eBaySDK\Trading\Types\GetAccountRequestType;
use DTS\eBaySDK\Trading\Types\GetAccountResponseType;
use DTS\eBaySDK\Trading\Types\GetAdFormatLeadsRequestType;
use DTS\eBaySDK\Trading\Types\GetAdFormatLeadsResponseType;
use DTS\eBaySDK\Trading\Types\GetAllBiddersRequestType;
use DTS\eBaySDK\Trading\Types\GetAllBiddersResponseType;
use DTS\eBaySDK\Trading\Types\GetApiAccessRulesRequestType;
use DTS\eBaySDK\Trading\Types\GetApiAccessRulesResponseType;
use DTS\eBaySDK\Trading\Types\GetBestOffersRequestType;
use DTS\eBaySDK\Trading\Types\GetBestOffersResponseType;
use DTS\eBaySDK\Trading\Types\GetBidderListRequestType;
use DTS\eBaySDK\Trading\Types\GetBidderListResponseType;
use DTS\eBaySDK\Trading\Types\GetCategoriesRequestType;
use DTS\eBaySDK\Trading\Types\GetCategoriesResponseType;
use DTS\eBaySDK\Trading\Types\GetCategoryFeaturesRequestType;
use DTS\eBaySDK\Trading\Types\GetCategoryFeaturesResponseType;
use DTS\eBaySDK\Trading\Types\GetCategoryMappingsRequestType;
use DTS\eBaySDK\Trading\Types\GetCategoryMappingsResponseType;
use DTS\eBaySDK\Trading\Types\GetCategorySpecificsRequestType;
use DTS\eBaySDK\Trading\Types\GetCategorySpecificsResponseType;
use DTS\eBaySDK\Trading\Types\GetChallengeTokenRequestType;
use DTS\eBaySDK\Trading\Types\GetChallengeTokenResponseType;
use DTS\eBaySDK\Trading\Types\GetCharitiesRequestType;
use DTS\eBaySDK\Trading\Types\GetCharitiesResponseType;
use DTS\eBaySDK\Trading\Types\GetClientAlertsAuthTokenRequestType;
use DTS\eBaySDK\Trading\Types\GetClientAlertsAuthTokenResponseType;
use DTS\eBaySDK\Trading\Types\GetContextualKeywordsRequestType;
use DTS\eBaySDK\Trading\Types\GetContextualKeywordsResponseType;
use DTS\eBaySDK\Trading\Types\GetDescriptionTemplatesRequestType;
use DTS\eBaySDK\Trading\Types\GetDescriptionTemplatesResponseType;
use DTS\eBaySDK\Trading\Types\GetDisputeRequestType;
use DTS\eBaySDK\Trading\Types\GetDisputeResponseType;
use DTS\eBaySDK\Trading\Types\GetFeedbackRequestType;
use DTS\eBaySDK\Trading\Types\GetFeedbackResponseType;
use DTS\eBaySDK\Trading\Types\GetItemRequestType;
use DTS\eBaySDK\Trading\Types\GetItemResponseType;
use DTS\eBaySDK\Trading\Types\GetItemShippingRequestType;
use DTS\eBaySDK\Trading\Types\GetItemShippingResponseType;
use DTS\eBaySDK\Trading\Types\GetItemTransactionsRequestType;
use DTS\eBaySDK\Trading\Types\GetItemTransactionsResponseType;
use DTS\eBaySDK\Trading\Types\GetItemsAwaitingFeedbackRequestType;
use DTS\eBaySDK\Trading\Types\GetItemsAwaitingFeedbackResponseType;
use DTS\eBaySDK\Trading\Types\GetMemberMessagesRequestType;
use DTS\eBaySDK\Trading\Types\GetMemberMessagesResponseType;
use DTS\eBaySDK\Trading\Types\GetMessagePreferencesRequestType;
use DTS\eBaySDK\Trading\Types\GetMessagePreferencesResponseType;
use DTS\eBaySDK\Trading\Types\GetMyMessagesRequestType;
use DTS\eBaySDK\Trading\Types\GetMyMessagesResponseType;
use DTS\eBaySDK\Trading\Types\GetMyeBayBuyingRequestType;
use DTS\eBaySDK\Trading\Types\GetMyeBayBuyingResponseType;
use DTS\eBaySDK\Trading\Types\GetMyeBayRemindersRequestType;
use DTS\eBaySDK\Trading\Types\GetMyeBayRemindersResponseType;
use DTS\eBaySDK\Trading\Types\GetMyeBaySellingRequestType;
use DTS\eBaySDK\Trading\Types\GetMyeBaySellingResponseType;
use DTS\eBaySDK\Trading\Types\GetNotificationPreferencesRequestType;
use DTS\eBaySDK\Trading\Types\GetNotificationPreferencesResponseType;
use DTS\eBaySDK\Trading\Types\GetNotificationsUsageRequestType;
use DTS\eBaySDK\Trading\Types\GetNotificationsUsageResponseType;
use DTS\eBaySDK\Trading\Types\GetOrderTransactionsRequestType;
use DTS\eBaySDK\Trading\Types\GetOrderTransactionsResponseType;
use DTS\eBaySDK\Trading\Types\GetOrdersRequestType;
use DTS\eBaySDK\Trading\Types\GetOrdersResponseType;
use DTS\eBaySDK\Trading\Types\GetPromotionalSaleDetailsRequestType;
use DTS\eBaySDK\Trading\Types\GetPromotionalSaleDetailsResponseType;
use DTS\eBaySDK\Trading\Types\GetSellerDashboardRequestType;
use DTS\eBaySDK\Trading\Types\GetSellerDashboardResponseType;
use DTS\eBaySDK\Trading\Types\GetSellerEventsRequestType;
use DTS\eBaySDK\Trading\Types\GetSellerEventsResponseType;
use DTS\eBaySDK\Trading\Types\GetSellerListRequestType;
use DTS\eBaySDK\Trading\Types\GetSellerListResponseType;
use DTS\eBaySDK\Trading\Types\GetSellerTransactionsRequestType;
use DTS\eBaySDK\Trading\Types\GetSellerTransactionsResponseType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerAlertsRequestType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerAlertsResponseType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerEmailLogRequestType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerEmailLogResponseType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerInventoryRequestType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerInventoryResponseType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerInventoryFolderRequestType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerInventoryFolderResponseType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerItemAutomationRuleRequestType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerItemAutomationRuleResponseType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerSaleRecordRequestType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerSaleRecordResponseType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerSoldListingsRequestType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerSoldListingsResponseType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerTemplateAutomationRuleRequestType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerTemplateAutomationRuleResponseType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerTemplatesRequestType;
use DTS\eBaySDK\Trading\Types\GetSellingManagerTemplatesResponseType;
use DTS\eBaySDK\Trading\Types\GetSessionIDRequestType;
use DTS\eBaySDK\Trading\Types\GetSessionIDResponseType;
use DTS\eBaySDK\Trading\Types\GetShippingDiscountProfilesRequestType;
use DTS\eBaySDK\Trading\Types\GetShippingDiscountProfilesResponseType;
use DTS\eBaySDK\Trading\Types\GetStoreRequestType;
use DTS\eBaySDK\Trading\Types\GetStoreResponseType;
use DTS\eBaySDK\Trading\Types\GetStoreCategoryUpdateStatusRequestType;
use DTS\eBaySDK\Trading\Types\GetStoreCategoryUpdateStatusResponseType;
use DTS\eBaySDK\Trading\Types\GetStoreCustomPageRequestType;
use DTS\eBaySDK\Trading\Types\GetStoreCustomPageResponseType;
use DTS\eBaySDK\Trading\Types\GetStoreOptionsRequestType;
use DTS\eBaySDK\Trading\Types\GetStoreOptionsResponseType;
use DTS\eBaySDK\Trading\Types\GetStorePreferencesRequestType;
use DTS\eBaySDK\Trading\Types\GetStorePreferencesResponseType;
use DTS\eBaySDK\Trading\Types\GetSuggestedCategoriesRequestType;
use DTS\eBaySDK\Trading\Types\GetSuggestedCategoriesResponseType;
use DTS\eBaySDK\Trading\Types\GetTaxTableRequestType;
use DTS\eBaySDK\Trading\Types\GetTaxTableResponseType;
use DTS\eBaySDK\Trading\Types\GetTokenStatusRequestType;
use DTS\eBaySDK\Trading\Types\GetTokenStatusResponseType;
use DTS\eBaySDK\Trading\Types\GetUserRequestType;
use DTS\eBaySDK\Trading\Types\GetUserResponseType;
use DTS\eBaySDK\Trading\Types\GetUserContactDetailsRequestType;
use DTS\eBaySDK\Trading\Types\GetUserContactDetailsResponseType;
use DTS\eBaySDK\Trading\Types\GetUserDisputesRequestType;
use DTS\eBaySDK\Trading\Types\GetUserDisputesResponseType;
use DTS\eBaySDK\Trading\Types\GetUserPreferencesRequestType;
use DTS\eBaySDK\Trading\Types\GetUserPreferencesResponseType;
use DTS\eBaySDK\Trading\Types\GetVeROReasonCodeDetailsRequestType;
use DTS\eBaySDK\Trading\Types\GetVeROReasonCodeDetailsResponseType;
use DTS\eBaySDK\Trading\Types\GetVeROReportStatusRequestType;
use DTS\eBaySDK\Trading\Types\GetVeROReportStatusResponseType;
use DTS\eBaySDK\Trading\Types\GeteBayDetailsRequestType;
use DTS\eBaySDK\Trading\Types\GeteBayDetailsResponseType;
use DTS\eBaySDK\Trading\Types\GeteBayOfficialTimeRequestType;
use DTS\eBaySDK\Trading\Types\GeteBayOfficialTimeResponseType;
use DTS\eBaySDK\Trading\Types\LeaveFeedbackRequestType;
use DTS\eBaySDK\Trading\Types\LeaveFeedbackResponseType;
use DTS\eBaySDK\Trading\Types\MoveSellingManagerInventoryFolderRequestType;
use DTS\eBaySDK\Trading\Types\MoveSellingManagerInventoryFolderResponseType;
use DTS\eBaySDK\Trading\Types\PlaceOfferRequestType;
use DTS\eBaySDK\Trading\Types\PlaceOfferResponseType;
use DTS\eBaySDK\Trading\Types\RelistFixedPriceItemRequestType;
use DTS\eBaySDK\Trading\Types\RelistFixedPriceItemResponseType;
use DTS\eBaySDK\Trading\Types\RelistItemRequestType;
use DTS\eBaySDK\Trading\Types\RelistItemResponseType;
use DTS\eBaySDK\Trading\Types\RemoveFromWatchListRequestType;
use DTS\eBaySDK\Trading\Types\RemoveFromWatchListResponseType;
use DTS\eBaySDK\Trading\Types\RespondToBestOfferRequestType;
use DTS\eBaySDK\Trading\Types\RespondToBestOfferResponseType;
use DTS\eBaySDK\Trading\Types\RespondToFeedbackRequestType;
use DTS\eBaySDK\Trading\Types\RespondToFeedbackResponseType;
use DTS\eBaySDK\Trading\Types\ReviseCheckoutStatusRequestType;
use DTS\eBaySDK\Trading\Types\ReviseCheckoutStatusResponseType;
use DTS\eBaySDK\Trading\Types\ReviseFixedPriceItemRequestType;
use DTS\eBaySDK\Trading\Types\ReviseFixedPriceItemResponseType;
use DTS\eBaySDK\Trading\Types\ReviseInventoryStatusRequestType;
use DTS\eBaySDK\Trading\Types\ReviseInventoryStatusResponseType;
use DTS\eBaySDK\Trading\Types\ReviseItemRequestType;
use DTS\eBaySDK\Trading\Types\ReviseItemResponseType;
use DTS\eBaySDK\Trading\Types\ReviseMyMessagesRequestType;
use DTS\eBaySDK\Trading\Types\ReviseMyMessagesResponseType;
use DTS\eBaySDK\Trading\Types\ReviseMyMessagesFoldersRequestType;
use DTS\eBaySDK\Trading\Types\ReviseMyMessagesFoldersResponseType;
use DTS\eBaySDK\Trading\Types\ReviseSellingManagerInventoryFolderRequestType;
use DTS\eBaySDK\Trading\Types\ReviseSellingManagerInventoryFolderResponseType;
use DTS\eBaySDK\Trading\Types\ReviseSellingManagerProductRequestType;
use DTS\eBaySDK\Trading\Types\ReviseSellingManagerProductResponseType;
use DTS\eBaySDK\Trading\Types\ReviseSellingManagerSaleRecordRequestType;
use DTS\eBaySDK\Trading\Types\ReviseSellingManagerSaleRecordResponseType;
use DTS\eBaySDK\Trading\Types\ReviseSellingManagerTemplateRequestType;
use DTS\eBaySDK\Trading\Types\ReviseSellingManagerTemplateResponseType;
use DTS\eBaySDK\Trading\Types\RevokeTokenRequestType;
use DTS\eBaySDK\Trading\Types\RevokeTokenResponseType;
use DTS\eBaySDK\Trading\Types\SaveItemToSellingManagerTemplateRequestType;
use DTS\eBaySDK\Trading\Types\SaveItemToSellingManagerTemplateResponseType;
use DTS\eBaySDK\Trading\Types\SellerReverseDisputeRequestType;
use DTS\eBaySDK\Trading\Types\SellerReverseDisputeResponseType;
use DTS\eBaySDK\Trading\Types\SendInvoiceRequestType;
use DTS\eBaySDK\Trading\Types\SendInvoiceResponseType;
use DTS\eBaySDK\Trading\Types\SetMessagePreferencesRequestType;
use DTS\eBaySDK\Trading\Types\SetMessagePreferencesResponseType;
use DTS\eBaySDK\Trading\Types\SetNotificationPreferencesRequestType;
use DTS\eBaySDK\Trading\Types\SetNotificationPreferencesResponseType;
use DTS\eBaySDK\Trading\Types\SetPromotionalSaleRequestType;
use DTS\eBaySDK\Trading\Types\SetPromotionalSaleResponseType;
use DTS\eBaySDK\Trading\Types\SetPromotionalSaleListingsRequestType;
use DTS\eBaySDK\Trading\Types\SetPromotionalSaleListingsResponseType;
use DTS\eBaySDK\Trading\Types\SetSellingManagerFeedbackOptionsRequestType;
use DTS\eBaySDK\Trading\Types\SetSellingManagerFeedbackOptionsResponseType;
use DTS\eBaySDK\Trading\Types\SetSellingManagerItemAutomationRuleRequestType;
use DTS\eBaySDK\Trading\Types\SetSellingManagerItemAutomationRuleResponseType;
use DTS\eBaySDK\Trading\Types\SetSellingManagerTemplateAutomationRuleRequestType;
use DTS\eBaySDK\Trading\Types\SetSellingManagerTemplateAutomationRuleResponseType;
use DTS\eBaySDK\Trading\Types\SetShippingDiscountProfilesRequestType;
use DTS\eBaySDK\Trading\Types\SetShippingDiscountProfilesResponseType;
use DTS\eBaySDK\Trading\Types\SetStoreRequestType;
use DTS\eBaySDK\Trading\Types\SetStoreResponseType;
use DTS\eBaySDK\Trading\Types\SetStoreCategoriesRequestType;
use DTS\eBaySDK\Trading\Types\SetStoreCategoriesResponseType;
use DTS\eBaySDK\Trading\Types\SetStoreCustomPageRequestType;
use DTS\eBaySDK\Trading\Types\SetStoreCustomPageResponseType;
use DTS\eBaySDK\Trading\Types\SetStorePreferencesRequestType;
use DTS\eBaySDK\Trading\Types\SetStorePreferencesResponseType;
use DTS\eBaySDK\Trading\Types\SetTaxTableRequestType;
use DTS\eBaySDK\Trading\Types\SetTaxTableResponseType;
use DTS\eBaySDK\Trading\Types\SetUserNotesRequestType;
use DTS\eBaySDK\Trading\Types\SetUserNotesResponseType;
use DTS\eBaySDK\Trading\Types\SetUserPreferencesRequestType;
use DTS\eBaySDK\Trading\Types\SetUserPreferencesResponseType;
use DTS\eBaySDK\Trading\Types\UploadSiteHostedPicturesRequestType;
use DTS\eBaySDK\Trading\Types\UploadSiteHostedPicturesResponseType;
use DTS\eBaySDK\Trading\Types\ValidateChallengeInputRequestType;
use DTS\eBaySDK\Trading\Types\ValidateChallengeInputResponseType;
use DTS\eBaySDK\Trading\Types\ValidateTestUserRegistrationRequestType;
use DTS\eBaySDK\Trading\Types\ValidateTestUserRegistrationResponseType;
use DTS\eBaySDK\Trading\Types\VeROReportItemsRequestType;
use DTS\eBaySDK\Trading\Types\VeROReportItemsResponseType;
use DTS\eBaySDK\Trading\Types\VerifyAddFixedPriceItemRequestType;
use DTS\eBaySDK\Trading\Types\VerifyAddFixedPriceItemResponseType;
use DTS\eBaySDK\Trading\Types\VerifyAddItemRequestType;
use DTS\eBaySDK\Trading\Types\VerifyAddItemResponseType;
use DTS\eBaySDK\Trading\Types\VerifyAddSecondChanceItemRequestType;
use DTS\eBaySDK\Trading\Types\VerifyAddSecondChanceItemResponseType;
use DTS\eBaySDK\Trading\Types\VerifyRelistItemRequestType;
use DTS\eBaySDK\Trading\Types\VerifyRelistItemResponseType;
class TradingService extends TradingBaseService
{
    const API_VERSION = '1057';

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param AddDisputeRequestType $request
     * @return AddDisputeResponseType
     */
    public function addDispute(AddDisputeRequestType $request)
    {
        return $this->addDisputeAsync($request)->wait();
    }

    /**
     * @param AddDisputeRequestType $request
     * @return PromiseInterface
     */
    public function addDisputeAsync(AddDisputeRequestType $request)
    {
        return $this->callOperationAsync(
            'AddDispute',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddDisputeResponseType'
        );
    }

    /**
     * @param AddDisputeResponseRequestType $request
     * @return AddDisputeResponseResponseType
     */
    public function addDisputeResponse(AddDisputeResponseRequestType $request)
    {
        return $this->addDisputeResponseAsync($request)->wait();
    }

    /**
     * @param AddDisputeResponseRequestType $request
     * @return PromiseInterface
     */
    public function addDisputeResponseAsync(AddDisputeResponseRequestType $request)
    {
        return $this->callOperationAsync(
            'AddDisputeResponse',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddDisputeResponseResponseType'
        );
    }

    /**
     * @param AddFixedPriceItemRequestType $request
     * @return AddFixedPriceItemResponseType
     */
    public function addFixedPriceItem(AddFixedPriceItemRequestType $request)
    {
        return $this->addFixedPriceItemAsync($request)->wait();
    }

    /**
     * @param AddFixedPriceItemRequestType $request
     * @return PromiseInterface
     */
    public function addFixedPriceItemAsync(AddFixedPriceItemRequestType $request)
    {
        return $this->callOperationAsync(
            'AddFixedPriceItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddFixedPriceItemResponseType'
        );
    }

    /**
     * @param AddItemRequestType $request
     * @return AddItemResponseType
     */
    public function addItem(AddItemRequestType $request)
    {
        return $this->addItemAsync($request)->wait();
    }

    /**
     * @param AddItemRequestType $request
     * @return PromiseInterface
     */
    public function addItemAsync(AddItemRequestType $request)
    {
        return $this->callOperationAsync(
            'AddItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddItemResponseType'
        );
    }

    /**
     * @param AddItemFromSellingManagerTemplateRequestType $request
     * @return AddItemFromSellingManagerTemplateResponseType
     */
    public function addItemFromSellingManagerTemplate(AddItemFromSellingManagerTemplateRequestType $request)
    {
        return $this->addItemFromSellingManagerTemplateAsync($request)->wait();
    }

    /**
     * @param AddItemFromSellingManagerTemplateRequestType $request
     * @return PromiseInterface
     */
    public function addItemFromSellingManagerTemplateAsync(AddItemFromSellingManagerTemplateRequestType $request)
    {
        return $this->callOperationAsync(
            'AddItemFromSellingManagerTemplate',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddItemFromSellingManagerTemplateResponseType'
        );
    }

    /**
     * @param AddItemsRequestType $request
     * @return AddItemsResponseType
     */
    public function addItems(AddItemsRequestType $request)
    {
        return $this->addItemsAsync($request)->wait();
    }

    /**
     * @param AddItemsRequestType $request
     * @return PromiseInterface
     */
    public function addItemsAsync(AddItemsRequestType $request)
    {
        return $this->callOperationAsync(
            'AddItems',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddItemsResponseType'
        );
    }

    /**
     * @param AddMemberMessageAAQToPartnerRequestType $request
     * @return AddMemberMessageAAQToPartnerResponseType
     */
    public function addMemberMessageAAQToPartner(AddMemberMessageAAQToPartnerRequestType $request)
    {
        return $this->addMemberMessageAAQToPartnerAsync($request)->wait();
    }

    /**
     * @param AddMemberMessageAAQToPartnerRequestType $request
     * @return PromiseInterface
     */
    public function addMemberMessageAAQToPartnerAsync(AddMemberMessageAAQToPartnerRequestType $request)
    {
        return $this->callOperationAsync(
            'AddMemberMessageAAQToPartner',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddMemberMessageAAQToPartnerResponseType'
        );
    }

    /**
     * @param AddMemberMessageRTQRequestType $request
     * @return AddMemberMessageRTQResponseType
     */
    public function addMemberMessageRTQ(AddMemberMessageRTQRequestType $request)
    {
        return $this->addMemberMessageRTQAsync($request)->wait();
    }

    /**
     * @param AddMemberMessageRTQRequestType $request
     * @return PromiseInterface
     */
    public function addMemberMessageRTQAsync(AddMemberMessageRTQRequestType $request)
    {
        return $this->callOperationAsync(
            'AddMemberMessageRTQ',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddMemberMessageRTQResponseType'
        );
    }

    /**
     * @param AddMemberMessagesAAQToBidderRequestType $request
     * @return AddMemberMessagesAAQToBidderResponseType
     */
    public function addMemberMessagesAAQToBidder(AddMemberMessagesAAQToBidderRequestType $request)
    {
        return $this->addMemberMessagesAAQToBidderAsync($request)->wait();
    }

    /**
     * @param AddMemberMessagesAAQToBidderRequestType $request
     * @return PromiseInterface
     */
    public function addMemberMessagesAAQToBidderAsync(AddMemberMessagesAAQToBidderRequestType $request)
    {
        return $this->callOperationAsync(
            'AddMemberMessagesAAQToBidder',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddMemberMessagesAAQToBidderResponseType'
        );
    }

    /**
     * @param AddOrderRequestType $request
     * @return AddOrderResponseType
     */
    public function addOrder(AddOrderRequestType $request)
    {
        return $this->addOrderAsync($request)->wait();
    }

    /**
     * @param AddOrderRequestType $request
     * @return PromiseInterface
     */
    public function addOrderAsync(AddOrderRequestType $request)
    {
        return $this->callOperationAsync(
            'AddOrder',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddOrderResponseType'
        );
    }

    /**
     * @param AddSecondChanceItemRequestType $request
     * @return AddSecondChanceItemResponseType
     */
    public function addSecondChanceItem(AddSecondChanceItemRequestType $request)
    {
        return $this->addSecondChanceItemAsync($request)->wait();
    }

    /**
     * @param AddSecondChanceItemRequestType $request
     * @return PromiseInterface
     */
    public function addSecondChanceItemAsync(AddSecondChanceItemRequestType $request)
    {
        return $this->callOperationAsync(
            'AddSecondChanceItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddSecondChanceItemResponseType'
        );
    }

    /**
     * @param AddSellingManagerInventoryFolderRequestType $request
     * @return AddSellingManagerInventoryFolderResponseType
     */
    public function addSellingManagerInventoryFolder(AddSellingManagerInventoryFolderRequestType $request)
    {
        return $this->addSellingManagerInventoryFolderAsync($request)->wait();
    }

    /**
     * @param AddSellingManagerInventoryFolderRequestType $request
     * @return PromiseInterface
     */
    public function addSellingManagerInventoryFolderAsync(AddSellingManagerInventoryFolderRequestType $request)
    {
        return $this->callOperationAsync(
            'AddSellingManagerInventoryFolder',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddSellingManagerInventoryFolderResponseType'
        );
    }

    /**
     * @param AddSellingManagerProductRequestType $request
     * @return AddSellingManagerProductResponseType
     */
    public function addSellingManagerProduct(AddSellingManagerProductRequestType $request)
    {
        return $this->addSellingManagerProductAsync($request)->wait();
    }

    /**
     * @param AddSellingManagerProductRequestType $request
     * @return PromiseInterface
     */
    public function addSellingManagerProductAsync(AddSellingManagerProductRequestType $request)
    {
        return $this->callOperationAsync(
            'AddSellingManagerProduct',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddSellingManagerProductResponseType'
        );
    }

    /**
     * @param AddSellingManagerTemplateRequestType $request
     * @return AddSellingManagerTemplateResponseType
     */
    public function addSellingManagerTemplate(AddSellingManagerTemplateRequestType $request)
    {
        return $this->addSellingManagerTemplateAsync($request)->wait();
    }

    /**
     * @param AddSellingManagerTemplateRequestType $request
     * @return PromiseInterface
     */
    public function addSellingManagerTemplateAsync(AddSellingManagerTemplateRequestType $request)
    {
        return $this->callOperationAsync(
            'AddSellingManagerTemplate',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddSellingManagerTemplateResponseType'
        );
    }

    /**
     * @param AddToItemDescriptionRequestType $request
     * @return AddToItemDescriptionResponseType
     */
    public function addToItemDescription(AddToItemDescriptionRequestType $request)
    {
        return $this->addToItemDescriptionAsync($request)->wait();
    }

    /**
     * @param AddToItemDescriptionRequestType $request
     * @return PromiseInterface
     */
    public function addToItemDescriptionAsync(AddToItemDescriptionRequestType $request)
    {
        return $this->callOperationAsync(
            'AddToItemDescription',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddToItemDescriptionResponseType'
        );
    }

    /**
     * @param AddToWatchListRequestType $request
     * @return AddToWatchListResponseType
     */
    public function addToWatchList(AddToWatchListRequestType $request)
    {
        return $this->addToWatchListAsync($request)->wait();
    }

    /**
     * @param AddToWatchListRequestType $request
     * @return PromiseInterface
     */
    public function addToWatchListAsync(AddToWatchListRequestType $request)
    {
        return $this->callOperationAsync(
            'AddToWatchList',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddToWatchListResponseType'
        );
    }

    /**
     * @param AddTransactionConfirmationItemRequestType $request
     * @return AddTransactionConfirmationItemResponseType
     */
    public function addTransactionConfirmationItem(AddTransactionConfirmationItemRequestType $request)
    {
        return $this->addTransactionConfirmationItemAsync($request)->wait();
    }

    /**
     * @param AddTransactionConfirmationItemRequestType $request
     * @return PromiseInterface
     */
    public function addTransactionConfirmationItemAsync(AddTransactionConfirmationItemRequestType $request)
    {
        return $this->callOperationAsync(
            'AddTransactionConfirmationItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\AddTransactionConfirmationItemResponseType'
        );
    }

    /**
     * @param CompleteSaleRequestType $request
     * @return CompleteSaleResponseType
     */
    public function completeSale(CompleteSaleRequestType $request)
    {
        return $this->completeSaleAsync($request)->wait();
    }

    /**
     * @param CompleteSaleRequestType $request
     * @return PromiseInterface
     */
    public function completeSaleAsync(CompleteSaleRequestType $request)
    {
        return $this->callOperationAsync(
            'CompleteSale',
            $request,
            '\DTS\eBaySDK\Trading\Types\CompleteSaleResponseType'
        );
    }

    /**
     * @param ConfirmIdentityRequestType $request
     * @return ConfirmIdentityResponseType
     */
    public function confirmIdentity(ConfirmIdentityRequestType $request)
    {
        return $this->confirmIdentityAsync($request)->wait();
    }

    /**
     * @param ConfirmIdentityRequestType $request
     * @return PromiseInterface
     */
    public function confirmIdentityAsync(ConfirmIdentityRequestType $request)
    {
        return $this->callOperationAsync(
            'ConfirmIdentity',
            $request,
            '\DTS\eBaySDK\Trading\Types\ConfirmIdentityResponseType'
        );
    }

    /**
     * @param DeleteMyMessagesRequestType $request
     * @return DeleteMyMessagesResponseType
     */
    public function deleteMyMessages(DeleteMyMessagesRequestType $request)
    {
        return $this->deleteMyMessagesAsync($request)->wait();
    }

    /**
     * @param DeleteMyMessagesRequestType $request
     * @return PromiseInterface
     */
    public function deleteMyMessagesAsync(DeleteMyMessagesRequestType $request)
    {
        return $this->callOperationAsync(
            'DeleteMyMessages',
            $request,
            '\DTS\eBaySDK\Trading\Types\DeleteMyMessagesResponseType'
        );
    }

    /**
     * @param DeleteSellingManagerInventoryFolderRequestType $request
     * @return DeleteSellingManagerInventoryFolderResponseType
     */
    public function deleteSellingManagerInventoryFolder(DeleteSellingManagerInventoryFolderRequestType $request)
    {
        return $this->deleteSellingManagerInventoryFolderAsync($request)->wait();
    }

    /**
     * @param DeleteSellingManagerInventoryFolderRequestType $request
     * @return PromiseInterface
     */
    public function deleteSellingManagerInventoryFolderAsync(DeleteSellingManagerInventoryFolderRequestType $request)
    {
        return $this->callOperationAsync(
            'DeleteSellingManagerInventoryFolder',
            $request,
            '\DTS\eBaySDK\Trading\Types\DeleteSellingManagerInventoryFolderResponseType'
        );
    }

    /**
     * @param DeleteSellingManagerItemAutomationRuleRequestType $request
     * @return DeleteSellingManagerItemAutomationRuleResponseType
     */
    public function deleteSellingManagerItemAutomationRule(DeleteSellingManagerItemAutomationRuleRequestType $request)
    {
        return $this->deleteSellingManagerItemAutomationRuleAsync($request)->wait();
    }

    /**
     * @param DeleteSellingManagerItemAutomationRuleRequestType $request
     * @return PromiseInterface
     */
    public function deleteSellingManagerItemAutomationRuleAsync(DeleteSellingManagerItemAutomationRuleRequestType $request)
    {
        return $this->callOperationAsync(
            'DeleteSellingManagerItemAutomationRule',
            $request,
            '\DTS\eBaySDK\Trading\Types\DeleteSellingManagerItemAutomationRuleResponseType'
        );
    }

    /**
     * @param DeleteSellingManagerProductRequestType $request
     * @return DeleteSellingManagerProductResponseType
     */
    public function deleteSellingManagerProduct(DeleteSellingManagerProductRequestType $request)
    {
        return $this->deleteSellingManagerProductAsync($request)->wait();
    }

    /**
     * @param DeleteSellingManagerProductRequestType $request
     * @return PromiseInterface
     */
    public function deleteSellingManagerProductAsync(DeleteSellingManagerProductRequestType $request)
    {
        return $this->callOperationAsync(
            'DeleteSellingManagerProduct',
            $request,
            '\DTS\eBaySDK\Trading\Types\DeleteSellingManagerProductResponseType'
        );
    }

    /**
     * @param DeleteSellingManagerTemplateRequestType $request
     * @return DeleteSellingManagerTemplateResponseType
     */
    public function deleteSellingManagerTemplate(DeleteSellingManagerTemplateRequestType $request)
    {
        return $this->deleteSellingManagerTemplateAsync($request)->wait();
    }

    /**
     * @param DeleteSellingManagerTemplateRequestType $request
     * @return PromiseInterface
     */
    public function deleteSellingManagerTemplateAsync(DeleteSellingManagerTemplateRequestType $request)
    {
        return $this->callOperationAsync(
            'DeleteSellingManagerTemplate',
            $request,
            '\DTS\eBaySDK\Trading\Types\DeleteSellingManagerTemplateResponseType'
        );
    }

    /**
     * @param DeleteSellingManagerTemplateAutomationRuleRequestType $request
     * @return DeleteSellingManagerTemplateAutomationRuleResponseType
     */
    public function deleteSellingManagerTemplateAutomationRule(DeleteSellingManagerTemplateAutomationRuleRequestType $request)
    {
        return $this->deleteSellingManagerTemplateAutomationRuleAsync($request)->wait();
    }

    /**
     * @param DeleteSellingManagerTemplateAutomationRuleRequestType $request
     * @return PromiseInterface
     */
    public function deleteSellingManagerTemplateAutomationRuleAsync(DeleteSellingManagerTemplateAutomationRuleRequestType $request)
    {
        return $this->callOperationAsync(
            'DeleteSellingManagerTemplateAutomationRule',
            $request,
            '\DTS\eBaySDK\Trading\Types\DeleteSellingManagerTemplateAutomationRuleResponseType'
        );
    }

    /**
     * @param DisableUnpaidItemAssistanceRequestType $request
     * @return DisableUnpaidItemAssistanceResponseType
     */
    public function disableUnpaidItemAssistance(DisableUnpaidItemAssistanceRequestType $request)
    {
        return $this->disableUnpaidItemAssistanceAsync($request)->wait();
    }

    /**
     * @param DisableUnpaidItemAssistanceRequestType $request
     * @return PromiseInterface
     */
    public function disableUnpaidItemAssistanceAsync(DisableUnpaidItemAssistanceRequestType $request)
    {
        return $this->callOperationAsync(
            'DisableUnpaidItemAssistance',
            $request,
            '\DTS\eBaySDK\Trading\Types\DisableUnpaidItemAssistanceResponseType'
        );
    }

    /**
     * @param EndFixedPriceItemRequestType $request
     * @return EndFixedPriceItemResponseType
     */
    public function endFixedPriceItem(EndFixedPriceItemRequestType $request)
    {
        return $this->endFixedPriceItemAsync($request)->wait();
    }

    /**
     * @param EndFixedPriceItemRequestType $request
     * @return PromiseInterface
     */
    public function endFixedPriceItemAsync(EndFixedPriceItemRequestType $request)
    {
        return $this->callOperationAsync(
            'EndFixedPriceItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\EndFixedPriceItemResponseType'
        );
    }

    /**
     * @param EndItemRequestType $request
     * @return EndItemResponseType
     */
    public function endItem(EndItemRequestType $request)
    {
        return $this->endItemAsync($request)->wait();
    }

    /**
     * @param EndItemRequestType $request
     * @return PromiseInterface
     */
    public function endItemAsync(EndItemRequestType $request)
    {
        return $this->callOperationAsync(
            'EndItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\EndItemResponseType'
        );
    }

    /**
     * @param EndItemsRequestType $request
     * @return EndItemsResponseType
     */
    public function endItems(EndItemsRequestType $request)
    {
        return $this->endItemsAsync($request)->wait();
    }

    /**
     * @param EndItemsRequestType $request
     * @return PromiseInterface
     */
    public function endItemsAsync(EndItemsRequestType $request)
    {
        return $this->callOperationAsync(
            'EndItems',
            $request,
            '\DTS\eBaySDK\Trading\Types\EndItemsResponseType'
        );
    }

    /**
     * @param ExtendSiteHostedPicturesRequestType $request
     * @return ExtendSiteHostedPicturesResponseType
     */
    public function extendSiteHostedPictures(ExtendSiteHostedPicturesRequestType $request)
    {
        return $this->extendSiteHostedPicturesAsync($request)->wait();
    }

    /**
     * @param ExtendSiteHostedPicturesRequestType $request
     * @return PromiseInterface
     */
    public function extendSiteHostedPicturesAsync(ExtendSiteHostedPicturesRequestType $request)
    {
        return $this->callOperationAsync(
            'ExtendSiteHostedPictures',
            $request,
            '\DTS\eBaySDK\Trading\Types\ExtendSiteHostedPicturesResponseType'
        );
    }

    /**
     * @param FetchTokenRequestType $request
     * @return FetchTokenResponseType
     */
    public function fetchToken(FetchTokenRequestType $request)
    {
        return $this->fetchTokenAsync($request)->wait();
    }

    /**
     * @param FetchTokenRequestType $request
     * @return PromiseInterface
     */
    public function fetchTokenAsync(FetchTokenRequestType $request)
    {
        return $this->callOperationAsync(
            'FetchToken',
            $request,
            '\DTS\eBaySDK\Trading\Types\FetchTokenResponseType'
        );
    }

    /**
     * @param GetAccountRequestType $request
     * @return GetAccountResponseType
     */
    public function getAccount(GetAccountRequestType $request)
    {
        return $this->getAccountAsync($request)->wait();
    }

    /**
     * @param GetAccountRequestType $request
     * @return PromiseInterface
     */
    public function getAccountAsync(GetAccountRequestType $request)
    {
        return $this->callOperationAsync(
            'GetAccount',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetAccountResponseType'
        );
    }

    /**
     * @param GetAdFormatLeadsRequestType $request
     * @return GetAdFormatLeadsResponseType
     */
    public function getAdFormatLeads(GetAdFormatLeadsRequestType $request)
    {
        return $this->getAdFormatLeadsAsync($request)->wait();
    }

    /**
     * @param GetAdFormatLeadsRequestType $request
     * @return PromiseInterface
     */
    public function getAdFormatLeadsAsync(GetAdFormatLeadsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetAdFormatLeads',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetAdFormatLeadsResponseType'
        );
    }

    /**
     * @param GetAllBiddersRequestType $request
     * @return GetAllBiddersResponseType
     */
    public function getAllBidders(GetAllBiddersRequestType $request)
    {
        return $this->getAllBiddersAsync($request)->wait();
    }

    /**
     * @param GetAllBiddersRequestType $request
     * @return PromiseInterface
     */
    public function getAllBiddersAsync(GetAllBiddersRequestType $request)
    {
        return $this->callOperationAsync(
            'GetAllBidders',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetAllBiddersResponseType'
        );
    }

    /**
     * @param GetApiAccessRulesRequestType $request
     * @return GetApiAccessRulesResponseType
     */
    public function getApiAccessRules(GetApiAccessRulesRequestType $request)
    {
        return $this->getApiAccessRulesAsync($request)->wait();
    }

    /**
     * @param GetApiAccessRulesRequestType $request
     * @return PromiseInterface
     */
    public function getApiAccessRulesAsync(GetApiAccessRulesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetApiAccessRules',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetApiAccessRulesResponseType'
        );
    }

    /**
     * @param GetBestOffersRequestType $request
     * @return GetBestOffersResponseType
     */
    public function getBestOffers(GetBestOffersRequestType $request)
    {
        return $this->getBestOffersAsync($request)->wait();
    }

    /**
     * @param GetBestOffersRequestType $request
     * @return PromiseInterface
     */
    public function getBestOffersAsync(GetBestOffersRequestType $request)
    {
        return $this->callOperationAsync(
            'GetBestOffers',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetBestOffersResponseType'
        );
    }

    /**
     * @param GetBidderListRequestType $request
     * @return GetBidderListResponseType
     */
    public function getBidderList(GetBidderListRequestType $request)
    {
        return $this->getBidderListAsync($request)->wait();
    }

    /**
     * @param GetBidderListRequestType $request
     * @return PromiseInterface
     */
    public function getBidderListAsync(GetBidderListRequestType $request)
    {
        return $this->callOperationAsync(
            'GetBidderList',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetBidderListResponseType'
        );
    }

    /**
     * @param GetCategoriesRequestType $request
     * @return GetCategoriesResponseType
     */
    public function getCategories(GetCategoriesRequestType $request)
    {
        return $this->getCategoriesAsync($request)->wait();
    }

    /**
     * @param GetCategoriesRequestType $request
     * @return PromiseInterface
     */
    public function getCategoriesAsync(GetCategoriesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetCategories',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetCategoriesResponseType'
        );
    }

    /**
     * @param GetCategoryFeaturesRequestType $request
     * @return GetCategoryFeaturesResponseType
     */
    public function getCategoryFeatures(GetCategoryFeaturesRequestType $request)
    {
        return $this->getCategoryFeaturesAsync($request)->wait();
    }

    /**
     * @param GetCategoryFeaturesRequestType $request
     * @return PromiseInterface
     */
    public function getCategoryFeaturesAsync(GetCategoryFeaturesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetCategoryFeatures',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetCategoryFeaturesResponseType'
        );
    }

    /**
     * @param GetCategoryMappingsRequestType $request
     * @return GetCategoryMappingsResponseType
     */
    public function getCategoryMappings(GetCategoryMappingsRequestType $request)
    {
        return $this->getCategoryMappingsAsync($request)->wait();
    }

    /**
     * @param GetCategoryMappingsRequestType $request
     * @return PromiseInterface
     */
    public function getCategoryMappingsAsync(GetCategoryMappingsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetCategoryMappings',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetCategoryMappingsResponseType'
        );
    }

    /**
     * @param GetCategorySpecificsRequestType $request
     * @return GetCategorySpecificsResponseType
     */
    public function getCategorySpecifics(GetCategorySpecificsRequestType $request)
    {
        return $this->getCategorySpecificsAsync($request)->wait();
    }

    /**
     * @param GetCategorySpecificsRequestType $request
     * @return PromiseInterface
     */
    public function getCategorySpecificsAsync(GetCategorySpecificsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetCategorySpecifics',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetCategorySpecificsResponseType'
        );
    }

    /**
     * @param GetChallengeTokenRequestType $request
     * @return GetChallengeTokenResponseType
     */
    public function getChallengeToken(GetChallengeTokenRequestType $request)
    {
        return $this->getChallengeTokenAsync($request)->wait();
    }

    /**
     * @param GetChallengeTokenRequestType $request
     * @return PromiseInterface
     */
    public function getChallengeTokenAsync(GetChallengeTokenRequestType $request)
    {
        return $this->callOperationAsync(
            'GetChallengeToken',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetChallengeTokenResponseType'
        );
    }

    /**
     * @param GetCharitiesRequestType $request
     * @return GetCharitiesResponseType
     */
    public function getCharities(GetCharitiesRequestType $request)
    {
        return $this->getCharitiesAsync($request)->wait();
    }

    /**
     * @param GetCharitiesRequestType $request
     * @return PromiseInterface
     */
    public function getCharitiesAsync(GetCharitiesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetCharities',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetCharitiesResponseType'
        );
    }

    /**
     * @param GetClientAlertsAuthTokenRequestType $request
     * @return GetClientAlertsAuthTokenResponseType
     */
    public function getClientAlertsAuthToken(GetClientAlertsAuthTokenRequestType $request)
    {
        return $this->getClientAlertsAuthTokenAsync($request)->wait();
    }

    /**
     * @param GetClientAlertsAuthTokenRequestType $request
     * @return PromiseInterface
     */
    public function getClientAlertsAuthTokenAsync(GetClientAlertsAuthTokenRequestType $request)
    {
        return $this->callOperationAsync(
            'GetClientAlertsAuthToken',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetClientAlertsAuthTokenResponseType'
        );
    }

    /**
     * @param GetContextualKeywordsRequestType $request
     * @return GetContextualKeywordsResponseType
     */
    public function getContextualKeywords(GetContextualKeywordsRequestType $request)
    {
        return $this->getContextualKeywordsAsync($request)->wait();
    }

    /**
     * @param GetContextualKeywordsRequestType $request
     * @return PromiseInterface
     */
    public function getContextualKeywordsAsync(GetContextualKeywordsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetContextualKeywords',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetContextualKeywordsResponseType'
        );
    }

    /**
     * @param GetDescriptionTemplatesRequestType $request
     * @return GetDescriptionTemplatesResponseType
     */
    public function getDescriptionTemplates(GetDescriptionTemplatesRequestType $request)
    {
        return $this->getDescriptionTemplatesAsync($request)->wait();
    }

    /**
     * @param GetDescriptionTemplatesRequestType $request
     * @return PromiseInterface
     */
    public function getDescriptionTemplatesAsync(GetDescriptionTemplatesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetDescriptionTemplates',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetDescriptionTemplatesResponseType'
        );
    }

    /**
     * @param GetDisputeRequestType $request
     * @return GetDisputeResponseType
     */
    public function getDispute(GetDisputeRequestType $request)
    {
        return $this->getDisputeAsync($request)->wait();
    }

    /**
     * @param GetDisputeRequestType $request
     * @return PromiseInterface
     */
    public function getDisputeAsync(GetDisputeRequestType $request)
    {
        return $this->callOperationAsync(
            'GetDispute',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetDisputeResponseType'
        );
    }

    /**
     * @param GetFeedbackRequestType $request
     * @return GetFeedbackResponseType
     */
    public function getFeedback(GetFeedbackRequestType $request)
    {
        return $this->getFeedbackAsync($request)->wait();
    }

    /**
     * @param GetFeedbackRequestType $request
     * @return PromiseInterface
     */
    public function getFeedbackAsync(GetFeedbackRequestType $request)
    {
        return $this->callOperationAsync(
            'GetFeedback',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetFeedbackResponseType'
        );
    }

    /**
     * @param GetItemRequestType $request
     * @return GetItemResponseType
     */
    public function getItem(GetItemRequestType $request)
    {
        return $this->getItemAsync($request)->wait();
    }

    /**
     * @param GetItemRequestType $request
     * @return PromiseInterface
     */
    public function getItemAsync(GetItemRequestType $request)
    {
        return $this->callOperationAsync(
            'GetItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetItemResponseType'
        );
    }

    /**
     * @param GetItemShippingRequestType $request
     * @return GetItemShippingResponseType
     */
    public function getItemShipping(GetItemShippingRequestType $request)
    {
        return $this->getItemShippingAsync($request)->wait();
    }

    /**
     * @param GetItemShippingRequestType $request
     * @return PromiseInterface
     */
    public function getItemShippingAsync(GetItemShippingRequestType $request)
    {
        return $this->callOperationAsync(
            'GetItemShipping',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetItemShippingResponseType'
        );
    }

    /**
     * @param GetItemTransactionsRequestType $request
     * @return GetItemTransactionsResponseType
     */
    public function getItemTransactions(GetItemTransactionsRequestType $request)
    {
        return $this->getItemTransactionsAsync($request)->wait();
    }

    /**
     * @param GetItemTransactionsRequestType $request
     * @return PromiseInterface
     */
    public function getItemTransactionsAsync(GetItemTransactionsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetItemTransactions',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetItemTransactionsResponseType'
        );
    }

    /**
     * @param GetItemsAwaitingFeedbackRequestType $request
     * @return GetItemsAwaitingFeedbackResponseType
     */
    public function getItemsAwaitingFeedback(GetItemsAwaitingFeedbackRequestType $request)
    {
        return $this->getItemsAwaitingFeedbackAsync($request)->wait();
    }

    /**
     * @param GetItemsAwaitingFeedbackRequestType $request
     * @return PromiseInterface
     */
    public function getItemsAwaitingFeedbackAsync(GetItemsAwaitingFeedbackRequestType $request)
    {
        return $this->callOperationAsync(
            'GetItemsAwaitingFeedback',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetItemsAwaitingFeedbackResponseType'
        );
    }

    /**
     * @param GetMemberMessagesRequestType $request
     * @return GetMemberMessagesResponseType
     */
    public function getMemberMessages(GetMemberMessagesRequestType $request)
    {
        return $this->getMemberMessagesAsync($request)->wait();
    }

    /**
     * @param GetMemberMessagesRequestType $request
     * @return PromiseInterface
     */
    public function getMemberMessagesAsync(GetMemberMessagesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetMemberMessages',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetMemberMessagesResponseType'
        );
    }

    /**
     * @param GetMessagePreferencesRequestType $request
     * @return GetMessagePreferencesResponseType
     */
    public function getMessagePreferences(GetMessagePreferencesRequestType $request)
    {
        return $this->getMessagePreferencesAsync($request)->wait();
    }

    /**
     * @param GetMessagePreferencesRequestType $request
     * @return PromiseInterface
     */
    public function getMessagePreferencesAsync(GetMessagePreferencesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetMessagePreferences',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetMessagePreferencesResponseType'
        );
    }

    /**
     * @param GetMyMessagesRequestType $request
     * @return GetMyMessagesResponseType
     */
    public function getMyMessages(GetMyMessagesRequestType $request)
    {
        return $this->getMyMessagesAsync($request)->wait();
    }

    /**
     * @param GetMyMessagesRequestType $request
     * @return PromiseInterface
     */
    public function getMyMessagesAsync(GetMyMessagesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetMyMessages',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetMyMessagesResponseType'
        );
    }

    /**
     * @param GetMyeBayBuyingRequestType $request
     * @return GetMyeBayBuyingResponseType
     */
    public function getMyeBayBuying(GetMyeBayBuyingRequestType $request)
    {
        return $this->getMyeBayBuyingAsync($request)->wait();
    }

    /**
     * @param GetMyeBayBuyingRequestType $request
     * @return PromiseInterface
     */
    public function getMyeBayBuyingAsync(GetMyeBayBuyingRequestType $request)
    {
        return $this->callOperationAsync(
            'GetMyeBayBuying',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetMyeBayBuyingResponseType'
        );
    }

    /**
     * @param GetMyeBayRemindersRequestType $request
     * @return GetMyeBayRemindersResponseType
     */
    public function getMyeBayReminders(GetMyeBayRemindersRequestType $request)
    {
        return $this->getMyeBayRemindersAsync($request)->wait();
    }

    /**
     * @param GetMyeBayRemindersRequestType $request
     * @return PromiseInterface
     */
    public function getMyeBayRemindersAsync(GetMyeBayRemindersRequestType $request)
    {
        return $this->callOperationAsync(
            'GetMyeBayReminders',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetMyeBayRemindersResponseType'
        );
    }

    /**
     * @param GetMyeBaySellingRequestType $request
     * @return GetMyeBaySellingResponseType
     */
    public function getMyeBaySelling(GetMyeBaySellingRequestType $request)
    {
        return $this->getMyeBaySellingAsync($request)->wait();
    }

    /**
     * @param GetMyeBaySellingRequestType $request
     * @return PromiseInterface
     */
    public function getMyeBaySellingAsync(GetMyeBaySellingRequestType $request)
    {
        return $this->callOperationAsync(
            'GetMyeBaySelling',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetMyeBaySellingResponseType'
        );
    }

    /**
     * @param GetNotificationPreferencesRequestType $request
     * @return GetNotificationPreferencesResponseType
     */
    public function getNotificationPreferences(GetNotificationPreferencesRequestType $request)
    {
        return $this->getNotificationPreferencesAsync($request)->wait();
    }

    /**
     * @param GetNotificationPreferencesRequestType $request
     * @return PromiseInterface
     */
    public function getNotificationPreferencesAsync(GetNotificationPreferencesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetNotificationPreferences',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetNotificationPreferencesResponseType'
        );
    }

    /**
     * @param GetNotificationsUsageRequestType $request
     * @return GetNotificationsUsageResponseType
     */
    public function getNotificationsUsage(GetNotificationsUsageRequestType $request)
    {
        return $this->getNotificationsUsageAsync($request)->wait();
    }

    /**
     * @param GetNotificationsUsageRequestType $request
     * @return PromiseInterface
     */
    public function getNotificationsUsageAsync(GetNotificationsUsageRequestType $request)
    {
        return $this->callOperationAsync(
            'GetNotificationsUsage',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetNotificationsUsageResponseType'
        );
    }

    /**
     * @param GetOrderTransactionsRequestType $request
     * @return GetOrderTransactionsResponseType
     */
    public function getOrderTransactions(GetOrderTransactionsRequestType $request)
    {
        return $this->getOrderTransactionsAsync($request)->wait();
    }

    /**
     * @param GetOrderTransactionsRequestType $request
     * @return PromiseInterface
     */
    public function getOrderTransactionsAsync(GetOrderTransactionsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetOrderTransactions',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetOrderTransactionsResponseType'
        );
    }

    /**
     * @param GetOrdersRequestType $request
     * @return GetOrdersResponseType
     */
    public function getOrders(GetOrdersRequestType $request)
    {
        return $this->getOrdersAsync($request)->wait();
    }

    /**
     * @param GetOrdersRequestType $request
     * @return PromiseInterface
     */
    public function getOrdersAsync(GetOrdersRequestType $request)
    {
        return $this->callOperationAsync(
            'GetOrders',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetOrdersResponseType'
        );
    }

    /**
     * @param GetPromotionalSaleDetailsRequestType $request
     * @return GetPromotionalSaleDetailsResponseType
     */
    public function getPromotionalSaleDetails(GetPromotionalSaleDetailsRequestType $request)
    {
        return $this->getPromotionalSaleDetailsAsync($request)->wait();
    }

    /**
     * @param GetPromotionalSaleDetailsRequestType $request
     * @return PromiseInterface
     */
    public function getPromotionalSaleDetailsAsync(GetPromotionalSaleDetailsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetPromotionalSaleDetails',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetPromotionalSaleDetailsResponseType'
        );
    }

    /**
     * @param GetSellerDashboardRequestType $request
     * @return GetSellerDashboardResponseType
     */
    public function getSellerDashboard(GetSellerDashboardRequestType $request)
    {
        return $this->getSellerDashboardAsync($request)->wait();
    }

    /**
     * @param GetSellerDashboardRequestType $request
     * @return PromiseInterface
     */
    public function getSellerDashboardAsync(GetSellerDashboardRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellerDashboard',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellerDashboardResponseType'
        );
    }

    /**
     * @param GetSellerEventsRequestType $request
     * @return GetSellerEventsResponseType
     */
    public function getSellerEvents(GetSellerEventsRequestType $request)
    {
        return $this->getSellerEventsAsync($request)->wait();
    }

    /**
     * @param GetSellerEventsRequestType $request
     * @return PromiseInterface
     */
    public function getSellerEventsAsync(GetSellerEventsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellerEvents',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellerEventsResponseType'
        );
    }

    /**
     * @param GetSellerListRequestType $request
     * @return GetSellerListResponseType
     */
    public function getSellerList(GetSellerListRequestType $request)
    {
        return $this->getSellerListAsync($request)->wait();
    }

    /**
     * @param GetSellerListRequestType $request
     * @return PromiseInterface
     */
    public function getSellerListAsync(GetSellerListRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellerList',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellerListResponseType'
        );
    }

    /**
     * @param GetSellerTransactionsRequestType $request
     * @return GetSellerTransactionsResponseType
     */
    public function getSellerTransactions(GetSellerTransactionsRequestType $request)
    {
        return $this->getSellerTransactionsAsync($request)->wait();
    }

    /**
     * @param GetSellerTransactionsRequestType $request
     * @return PromiseInterface
     */
    public function getSellerTransactionsAsync(GetSellerTransactionsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellerTransactions',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellerTransactionsResponseType'
        );
    }

    /**
     * @param GetSellingManagerAlertsRequestType $request
     * @return GetSellingManagerAlertsResponseType
     */
    public function getSellingManagerAlerts(GetSellingManagerAlertsRequestType $request)
    {
        return $this->getSellingManagerAlertsAsync($request)->wait();
    }

    /**
     * @param GetSellingManagerAlertsRequestType $request
     * @return PromiseInterface
     */
    public function getSellingManagerAlertsAsync(GetSellingManagerAlertsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellingManagerAlerts',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellingManagerAlertsResponseType'
        );
    }

    /**
     * @param GetSellingManagerEmailLogRequestType $request
     * @return GetSellingManagerEmailLogResponseType
     */
    public function getSellingManagerEmailLog(GetSellingManagerEmailLogRequestType $request)
    {
        return $this->getSellingManagerEmailLogAsync($request)->wait();
    }

    /**
     * @param GetSellingManagerEmailLogRequestType $request
     * @return PromiseInterface
     */
    public function getSellingManagerEmailLogAsync(GetSellingManagerEmailLogRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellingManagerEmailLog',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellingManagerEmailLogResponseType'
        );
    }

    /**
     * @param GetSellingManagerInventoryRequestType $request
     * @return GetSellingManagerInventoryResponseType
     */
    public function getSellingManagerInventory(GetSellingManagerInventoryRequestType $request)
    {
        return $this->getSellingManagerInventoryAsync($request)->wait();
    }

    /**
     * @param GetSellingManagerInventoryRequestType $request
     * @return PromiseInterface
     */
    public function getSellingManagerInventoryAsync(GetSellingManagerInventoryRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellingManagerInventory',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellingManagerInventoryResponseType'
        );
    }

    /**
     * @param GetSellingManagerInventoryFolderRequestType $request
     * @return GetSellingManagerInventoryFolderResponseType
     */
    public function getSellingManagerInventoryFolder(GetSellingManagerInventoryFolderRequestType $request)
    {
        return $this->getSellingManagerInventoryFolderAsync($request)->wait();
    }

    /**
     * @param GetSellingManagerInventoryFolderRequestType $request
     * @return PromiseInterface
     */
    public function getSellingManagerInventoryFolderAsync(GetSellingManagerInventoryFolderRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellingManagerInventoryFolder',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellingManagerInventoryFolderResponseType'
        );
    }

    /**
     * @param GetSellingManagerItemAutomationRuleRequestType $request
     * @return GetSellingManagerItemAutomationRuleResponseType
     */
    public function getSellingManagerItemAutomationRule(GetSellingManagerItemAutomationRuleRequestType $request)
    {
        return $this->getSellingManagerItemAutomationRuleAsync($request)->wait();
    }

    /**
     * @param GetSellingManagerItemAutomationRuleRequestType $request
     * @return PromiseInterface
     */
    public function getSellingManagerItemAutomationRuleAsync(GetSellingManagerItemAutomationRuleRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellingManagerItemAutomationRule',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellingManagerItemAutomationRuleResponseType'
        );
    }

    /**
     * @param GetSellingManagerSaleRecordRequestType $request
     * @return GetSellingManagerSaleRecordResponseType
     */
    public function getSellingManagerSaleRecord(GetSellingManagerSaleRecordRequestType $request)
    {
        return $this->getSellingManagerSaleRecordAsync($request)->wait();
    }

    /**
     * @param GetSellingManagerSaleRecordRequestType $request
     * @return PromiseInterface
     */
    public function getSellingManagerSaleRecordAsync(GetSellingManagerSaleRecordRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellingManagerSaleRecord',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellingManagerSaleRecordResponseType'
        );
    }

    /**
     * @param GetSellingManagerSoldListingsRequestType $request
     * @return GetSellingManagerSoldListingsResponseType
     */
    public function getSellingManagerSoldListings(GetSellingManagerSoldListingsRequestType $request)
    {
        return $this->getSellingManagerSoldListingsAsync($request)->wait();
    }

    /**
     * @param GetSellingManagerSoldListingsRequestType $request
     * @return PromiseInterface
     */
    public function getSellingManagerSoldListingsAsync(GetSellingManagerSoldListingsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellingManagerSoldListings',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellingManagerSoldListingsResponseType'
        );
    }

    /**
     * @param GetSellingManagerTemplateAutomationRuleRequestType $request
     * @return GetSellingManagerTemplateAutomationRuleResponseType
     */
    public function getSellingManagerTemplateAutomationRule(GetSellingManagerTemplateAutomationRuleRequestType $request)
    {
        return $this->getSellingManagerTemplateAutomationRuleAsync($request)->wait();
    }

    /**
     * @param GetSellingManagerTemplateAutomationRuleRequestType $request
     * @return PromiseInterface
     */
    public function getSellingManagerTemplateAutomationRuleAsync(GetSellingManagerTemplateAutomationRuleRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellingManagerTemplateAutomationRule',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellingManagerTemplateAutomationRuleResponseType'
        );
    }

    /**
     * @param GetSellingManagerTemplatesRequestType $request
     * @return GetSellingManagerTemplatesResponseType
     */
    public function getSellingManagerTemplates(GetSellingManagerTemplatesRequestType $request)
    {
        return $this->getSellingManagerTemplatesAsync($request)->wait();
    }

    /**
     * @param GetSellingManagerTemplatesRequestType $request
     * @return PromiseInterface
     */
    public function getSellingManagerTemplatesAsync(GetSellingManagerTemplatesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSellingManagerTemplates',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSellingManagerTemplatesResponseType'
        );
    }

    /**
     * @param GetSessionIDRequestType $request
     * @return GetSessionIDResponseType
     */
    public function getSessionID(GetSessionIDRequestType $request)
    {
        return $this->getSessionIDAsync($request)->wait();
    }

    /**
     * @param GetSessionIDRequestType $request
     * @return PromiseInterface
     */
    public function getSessionIDAsync(GetSessionIDRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSessionID',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSessionIDResponseType'
        );
    }

    /**
     * @param GetShippingDiscountProfilesRequestType $request
     * @return GetShippingDiscountProfilesResponseType
     */
    public function getShippingDiscountProfiles(GetShippingDiscountProfilesRequestType $request)
    {
        return $this->getShippingDiscountProfilesAsync($request)->wait();
    }

    /**
     * @param GetShippingDiscountProfilesRequestType $request
     * @return PromiseInterface
     */
    public function getShippingDiscountProfilesAsync(GetShippingDiscountProfilesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetShippingDiscountProfiles',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetShippingDiscountProfilesResponseType'
        );
    }

    /**
     * @param GetStoreRequestType $request
     * @return GetStoreResponseType
     */
    public function getStore(GetStoreRequestType $request)
    {
        return $this->getStoreAsync($request)->wait();
    }

    /**
     * @param GetStoreRequestType $request
     * @return PromiseInterface
     */
    public function getStoreAsync(GetStoreRequestType $request)
    {
        return $this->callOperationAsync(
            'GetStore',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetStoreResponseType'
        );
    }

    /**
     * @param GetStoreCategoryUpdateStatusRequestType $request
     * @return GetStoreCategoryUpdateStatusResponseType
     */
    public function getStoreCategoryUpdateStatus(GetStoreCategoryUpdateStatusRequestType $request)
    {
        return $this->getStoreCategoryUpdateStatusAsync($request)->wait();
    }

    /**
     * @param GetStoreCategoryUpdateStatusRequestType $request
     * @return PromiseInterface
     */
    public function getStoreCategoryUpdateStatusAsync(GetStoreCategoryUpdateStatusRequestType $request)
    {
        return $this->callOperationAsync(
            'GetStoreCategoryUpdateStatus',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetStoreCategoryUpdateStatusResponseType'
        );
    }

    /**
     * @param GetStoreCustomPageRequestType $request
     * @return GetStoreCustomPageResponseType
     */
    public function getStoreCustomPage(GetStoreCustomPageRequestType $request)
    {
        return $this->getStoreCustomPageAsync($request)->wait();
    }

    /**
     * @param GetStoreCustomPageRequestType $request
     * @return PromiseInterface
     */
    public function getStoreCustomPageAsync(GetStoreCustomPageRequestType $request)
    {
        return $this->callOperationAsync(
            'GetStoreCustomPage',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetStoreCustomPageResponseType'
        );
    }

    /**
     * @param GetStoreOptionsRequestType $request
     * @return GetStoreOptionsResponseType
     */
    public function getStoreOptions(GetStoreOptionsRequestType $request)
    {
        return $this->getStoreOptionsAsync($request)->wait();
    }

    /**
     * @param GetStoreOptionsRequestType $request
     * @return PromiseInterface
     */
    public function getStoreOptionsAsync(GetStoreOptionsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetStoreOptions',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetStoreOptionsResponseType'
        );
    }

    /**
     * @param GetStorePreferencesRequestType $request
     * @return GetStorePreferencesResponseType
     */
    public function getStorePreferences(GetStorePreferencesRequestType $request)
    {
        return $this->getStorePreferencesAsync($request)->wait();
    }

    /**
     * @param GetStorePreferencesRequestType $request
     * @return PromiseInterface
     */
    public function getStorePreferencesAsync(GetStorePreferencesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetStorePreferences',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetStorePreferencesResponseType'
        );
    }

    /**
     * @param GetSuggestedCategoriesRequestType $request
     * @return GetSuggestedCategoriesResponseType
     */
    public function getSuggestedCategories(GetSuggestedCategoriesRequestType $request)
    {
        return $this->getSuggestedCategoriesAsync($request)->wait();
    }

    /**
     * @param GetSuggestedCategoriesRequestType $request
     * @return PromiseInterface
     */
    public function getSuggestedCategoriesAsync(GetSuggestedCategoriesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetSuggestedCategories',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetSuggestedCategoriesResponseType'
        );
    }

    /**
     * @param GetTaxTableRequestType $request
     * @return GetTaxTableResponseType
     */
    public function getTaxTable(GetTaxTableRequestType $request)
    {
        return $this->getTaxTableAsync($request)->wait();
    }

    /**
     * @param GetTaxTableRequestType $request
     * @return PromiseInterface
     */
    public function getTaxTableAsync(GetTaxTableRequestType $request)
    {
        return $this->callOperationAsync(
            'GetTaxTable',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetTaxTableResponseType'
        );
    }

    /**
     * @param GetTokenStatusRequestType $request
     * @return GetTokenStatusResponseType
     */
    public function getTokenStatus(GetTokenStatusRequestType $request)
    {
        return $this->getTokenStatusAsync($request)->wait();
    }

    /**
     * @param GetTokenStatusRequestType $request
     * @return PromiseInterface
     */
    public function getTokenStatusAsync(GetTokenStatusRequestType $request)
    {
        return $this->callOperationAsync(
            'GetTokenStatus',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetTokenStatusResponseType'
        );
    }

    /**
     * @param GetUserRequestType $request
     * @return GetUserResponseType
     */
    public function getUser(GetUserRequestType $request)
    {
        return $this->getUserAsync($request)->wait();
    }

    /**
     * @param GetUserRequestType $request
     * @return PromiseInterface
     */
    public function getUserAsync(GetUserRequestType $request)
    {
        return $this->callOperationAsync(
            'GetUser',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetUserResponseType'
        );
    }

    /**
     * @param GetUserContactDetailsRequestType $request
     * @return GetUserContactDetailsResponseType
     */
    public function getUserContactDetails(GetUserContactDetailsRequestType $request)
    {
        return $this->getUserContactDetailsAsync($request)->wait();
    }

    /**
     * @param GetUserContactDetailsRequestType $request
     * @return PromiseInterface
     */
    public function getUserContactDetailsAsync(GetUserContactDetailsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetUserContactDetails',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetUserContactDetailsResponseType'
        );
    }

    /**
     * @param GetUserDisputesRequestType $request
     * @return GetUserDisputesResponseType
     */
    public function getUserDisputes(GetUserDisputesRequestType $request)
    {
        return $this->getUserDisputesAsync($request)->wait();
    }

    /**
     * @param GetUserDisputesRequestType $request
     * @return PromiseInterface
     */
    public function getUserDisputesAsync(GetUserDisputesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetUserDisputes',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetUserDisputesResponseType'
        );
    }

    /**
     * @param GetUserPreferencesRequestType $request
     * @return GetUserPreferencesResponseType
     */
    public function getUserPreferences(GetUserPreferencesRequestType $request)
    {
        return $this->getUserPreferencesAsync($request)->wait();
    }

    /**
     * @param GetUserPreferencesRequestType $request
     * @return PromiseInterface
     */
    public function getUserPreferencesAsync(GetUserPreferencesRequestType $request)
    {
        return $this->callOperationAsync(
            'GetUserPreferences',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetUserPreferencesResponseType'
        );
    }

    /**
     * @param GetVeROReasonCodeDetailsRequestType $request
     * @return GetVeROReasonCodeDetailsResponseType
     */
    public function getVeROReasonCodeDetails(GetVeROReasonCodeDetailsRequestType $request)
    {
        return $this->getVeROReasonCodeDetailsAsync($request)->wait();
    }

    /**
     * @param GetVeROReasonCodeDetailsRequestType $request
     * @return PromiseInterface
     */
    public function getVeROReasonCodeDetailsAsync(GetVeROReasonCodeDetailsRequestType $request)
    {
        return $this->callOperationAsync(
            'GetVeROReasonCodeDetails',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetVeROReasonCodeDetailsResponseType'
        );
    }

    /**
     * @param GetVeROReportStatusRequestType $request
     * @return GetVeROReportStatusResponseType
     */
    public function getVeROReportStatus(GetVeROReportStatusRequestType $request)
    {
        return $this->getVeROReportStatusAsync($request)->wait();
    }

    /**
     * @param GetVeROReportStatusRequestType $request
     * @return PromiseInterface
     */
    public function getVeROReportStatusAsync(GetVeROReportStatusRequestType $request)
    {
        return $this->callOperationAsync(
            'GetVeROReportStatus',
            $request,
            '\DTS\eBaySDK\Trading\Types\GetVeROReportStatusResponseType'
        );
    }

    /**
     * @param GeteBayDetailsRequestType $request
     * @return GeteBayDetailsResponseType
     */
    public function geteBayDetails(GeteBayDetailsRequestType $request)
    {
        return $this->geteBayDetailsAsync($request)->wait();
    }

    /**
     * @param GeteBayDetailsRequestType $request
     * @return PromiseInterface
     */
    public function geteBayDetailsAsync(GeteBayDetailsRequestType $request)
    {
        return $this->callOperationAsync(
            'GeteBayDetails',
            $request,
            '\DTS\eBaySDK\Trading\Types\GeteBayDetailsResponseType'
        );
    }

    /**
     * @param GeteBayOfficialTimeRequestType $request
     * @return GeteBayOfficialTimeResponseType
     */
    public function geteBayOfficialTime(GeteBayOfficialTimeRequestType $request)
    {
        return $this->geteBayOfficialTimeAsync($request)->wait();
    }

    /**
     * @param GeteBayOfficialTimeRequestType $request
     * @return PromiseInterface
     */
    public function geteBayOfficialTimeAsync(GeteBayOfficialTimeRequestType $request)
    {
        return $this->callOperationAsync(
            'GeteBayOfficialTime',
            $request,
            '\DTS\eBaySDK\Trading\Types\GeteBayOfficialTimeResponseType'
        );
    }

    /**
     * @param LeaveFeedbackRequestType $request
     * @return LeaveFeedbackResponseType
     */
    public function leaveFeedback(LeaveFeedbackRequestType $request)
    {
        return $this->leaveFeedbackAsync($request)->wait();
    }

    /**
     * @param LeaveFeedbackRequestType $request
     * @return PromiseInterface
     */
    public function leaveFeedbackAsync(LeaveFeedbackRequestType $request)
    {
        return $this->callOperationAsync(
            'LeaveFeedback',
            $request,
            '\DTS\eBaySDK\Trading\Types\LeaveFeedbackResponseType'
        );
    }

    /**
     * @param MoveSellingManagerInventoryFolderRequestType $request
     * @return MoveSellingManagerInventoryFolderResponseType
     */
    public function moveSellingManagerInventoryFolder(MoveSellingManagerInventoryFolderRequestType $request)
    {
        return $this->moveSellingManagerInventoryFolderAsync($request)->wait();
    }

    /**
     * @param MoveSellingManagerInventoryFolderRequestType $request
     * @return PromiseInterface
     */
    public function moveSellingManagerInventoryFolderAsync(MoveSellingManagerInventoryFolderRequestType $request)
    {
        return $this->callOperationAsync(
            'MoveSellingManagerInventoryFolder',
            $request,
            '\DTS\eBaySDK\Trading\Types\MoveSellingManagerInventoryFolderResponseType'
        );
    }

    /**
     * @param PlaceOfferRequestType $request
     * @return PlaceOfferResponseType
     */
    public function placeOffer(PlaceOfferRequestType $request)
    {
        return $this->placeOfferAsync($request)->wait();
    }

    /**
     * @param PlaceOfferRequestType $request
     * @return PromiseInterface
     */
    public function placeOfferAsync(PlaceOfferRequestType $request)
    {
        return $this->callOperationAsync(
            'PlaceOffer',
            $request,
            '\DTS\eBaySDK\Trading\Types\PlaceOfferResponseType'
        );
    }

    /**
     * @param RelistFixedPriceItemRequestType $request
     * @return RelistFixedPriceItemResponseType
     */
    public function relistFixedPriceItem(RelistFixedPriceItemRequestType $request)
    {
        return $this->relistFixedPriceItemAsync($request)->wait();
    }

    /**
     * @param RelistFixedPriceItemRequestType $request
     * @return PromiseInterface
     */
    public function relistFixedPriceItemAsync(RelistFixedPriceItemRequestType $request)
    {
        return $this->callOperationAsync(
            'RelistFixedPriceItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\RelistFixedPriceItemResponseType'
        );
    }

    /**
     * @param RelistItemRequestType $request
     * @return RelistItemResponseType
     */
    public function relistItem(RelistItemRequestType $request)
    {
        return $this->relistItemAsync($request)->wait();
    }

    /**
     * @param RelistItemRequestType $request
     * @return PromiseInterface
     */
    public function relistItemAsync(RelistItemRequestType $request)
    {
        return $this->callOperationAsync(
            'RelistItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\RelistItemResponseType'
        );
    }

    /**
     * @param RemoveFromWatchListRequestType $request
     * @return RemoveFromWatchListResponseType
     */
    public function removeFromWatchList(RemoveFromWatchListRequestType $request)
    {
        return $this->removeFromWatchListAsync($request)->wait();
    }

    /**
     * @param RemoveFromWatchListRequestType $request
     * @return PromiseInterface
     */
    public function removeFromWatchListAsync(RemoveFromWatchListRequestType $request)
    {
        return $this->callOperationAsync(
            'RemoveFromWatchList',
            $request,
            '\DTS\eBaySDK\Trading\Types\RemoveFromWatchListResponseType'
        );
    }

    /**
     * @param RespondToBestOfferRequestType $request
     * @return RespondToBestOfferResponseType
     */
    public function respondToBestOffer(RespondToBestOfferRequestType $request)
    {
        return $this->respondToBestOfferAsync($request)->wait();
    }

    /**
     * @param RespondToBestOfferRequestType $request
     * @return PromiseInterface
     */
    public function respondToBestOfferAsync(RespondToBestOfferRequestType $request)
    {
        return $this->callOperationAsync(
            'RespondToBestOffer',
            $request,
            '\DTS\eBaySDK\Trading\Types\RespondToBestOfferResponseType'
        );
    }

    /**
     * @param RespondToFeedbackRequestType $request
     * @return RespondToFeedbackResponseType
     */
    public function respondToFeedback(RespondToFeedbackRequestType $request)
    {
        return $this->respondToFeedbackAsync($request)->wait();
    }

    /**
     * @param RespondToFeedbackRequestType $request
     * @return PromiseInterface
     */
    public function respondToFeedbackAsync(RespondToFeedbackRequestType $request)
    {
        return $this->callOperationAsync(
            'RespondToFeedback',
            $request,
            '\DTS\eBaySDK\Trading\Types\RespondToFeedbackResponseType'
        );
    }

    /**
     * @param ReviseCheckoutStatusRequestType $request
     * @return ReviseCheckoutStatusResponseType
     */
    public function reviseCheckoutStatus(ReviseCheckoutStatusRequestType $request)
    {
        return $this->reviseCheckoutStatusAsync($request)->wait();
    }

    /**
     * @param ReviseCheckoutStatusRequestType $request
     * @return PromiseInterface
     */
    public function reviseCheckoutStatusAsync(ReviseCheckoutStatusRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseCheckoutStatus',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseCheckoutStatusResponseType'
        );
    }

    /**
     * @param ReviseFixedPriceItemRequestType $request
     * @return ReviseFixedPriceItemResponseType
     */
    public function reviseFixedPriceItem(ReviseFixedPriceItemRequestType $request)
    {
        return $this->reviseFixedPriceItemAsync($request)->wait();
    }

    /**
     * @param ReviseFixedPriceItemRequestType $request
     * @return PromiseInterface
     */
    public function reviseFixedPriceItemAsync(ReviseFixedPriceItemRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseFixedPriceItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseFixedPriceItemResponseType'
        );
    }

    /**
     * @param ReviseInventoryStatusRequestType $request
     * @return ReviseInventoryStatusResponseType
     */
    public function reviseInventoryStatus(ReviseInventoryStatusRequestType $request)
    {
        return $this->reviseInventoryStatusAsync($request)->wait();
    }

    /**
     * @param ReviseInventoryStatusRequestType $request
     * @return PromiseInterface
     */
    public function reviseInventoryStatusAsync(ReviseInventoryStatusRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseInventoryStatus',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseInventoryStatusResponseType'
        );
    }

    /**
     * @param ReviseItemRequestType $request
     * @return ReviseItemResponseType
     */
    public function reviseItem(ReviseItemRequestType $request)
    {
        return $this->reviseItemAsync($request)->wait();
    }

    /**
     * @param ReviseItemRequestType $request
     * @return PromiseInterface
     */
    public function reviseItemAsync(ReviseItemRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseItemResponseType'
        );
    }

    /**
     * @param ReviseMyMessagesRequestType $request
     * @return ReviseMyMessagesResponseType
     */
    public function reviseMyMessages(ReviseMyMessagesRequestType $request)
    {
        return $this->reviseMyMessagesAsync($request)->wait();
    }

    /**
     * @param ReviseMyMessagesRequestType $request
     * @return PromiseInterface
     */
    public function reviseMyMessagesAsync(ReviseMyMessagesRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseMyMessages',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseMyMessagesResponseType'
        );
    }

    /**
     * @param ReviseMyMessagesFoldersRequestType $request
     * @return ReviseMyMessagesFoldersResponseType
     */
    public function reviseMyMessagesFolders(ReviseMyMessagesFoldersRequestType $request)
    {
        return $this->reviseMyMessagesFoldersAsync($request)->wait();
    }

    /**
     * @param ReviseMyMessagesFoldersRequestType $request
     * @return PromiseInterface
     */
    public function reviseMyMessagesFoldersAsync(ReviseMyMessagesFoldersRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseMyMessagesFolders',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseMyMessagesFoldersResponseType'
        );
    }

    /**
     * @param ReviseSellingManagerInventoryFolderRequestType $request
     * @return ReviseSellingManagerInventoryFolderResponseType
     */
    public function reviseSellingManagerInventoryFolder(ReviseSellingManagerInventoryFolderRequestType $request)
    {
        return $this->reviseSellingManagerInventoryFolderAsync($request)->wait();
    }

    /**
     * @param ReviseSellingManagerInventoryFolderRequestType $request
     * @return PromiseInterface
     */
    public function reviseSellingManagerInventoryFolderAsync(ReviseSellingManagerInventoryFolderRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseSellingManagerInventoryFolder',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseSellingManagerInventoryFolderResponseType'
        );
    }

    /**
     * @param ReviseSellingManagerProductRequestType $request
     * @return ReviseSellingManagerProductResponseType
     */
    public function reviseSellingManagerProduct(ReviseSellingManagerProductRequestType $request)
    {
        return $this->reviseSellingManagerProductAsync($request)->wait();
    }

    /**
     * @param ReviseSellingManagerProductRequestType $request
     * @return PromiseInterface
     */
    public function reviseSellingManagerProductAsync(ReviseSellingManagerProductRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseSellingManagerProduct',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseSellingManagerProductResponseType'
        );
    }

    /**
     * @param ReviseSellingManagerSaleRecordRequestType $request
     * @return ReviseSellingManagerSaleRecordResponseType
     */
    public function reviseSellingManagerSaleRecord(ReviseSellingManagerSaleRecordRequestType $request)
    {
        return $this->reviseSellingManagerSaleRecordAsync($request)->wait();
    }

    /**
     * @param ReviseSellingManagerSaleRecordRequestType $request
     * @return PromiseInterface
     */
    public function reviseSellingManagerSaleRecordAsync(ReviseSellingManagerSaleRecordRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseSellingManagerSaleRecord',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseSellingManagerSaleRecordResponseType'
        );
    }

    /**
     * @param ReviseSellingManagerTemplateRequestType $request
     * @return ReviseSellingManagerTemplateResponseType
     */
    public function reviseSellingManagerTemplate(ReviseSellingManagerTemplateRequestType $request)
    {
        return $this->reviseSellingManagerTemplateAsync($request)->wait();
    }

    /**
     * @param ReviseSellingManagerTemplateRequestType $request
     * @return PromiseInterface
     */
    public function reviseSellingManagerTemplateAsync(ReviseSellingManagerTemplateRequestType $request)
    {
        return $this->callOperationAsync(
            'ReviseSellingManagerTemplate',
            $request,
            '\DTS\eBaySDK\Trading\Types\ReviseSellingManagerTemplateResponseType'
        );
    }

    /**
     * @param RevokeTokenRequestType $request
     * @return RevokeTokenResponseType
     */
    public function revokeToken(RevokeTokenRequestType $request)
    {
        return $this->revokeTokenAsync($request)->wait();
    }

    /**
     * @param RevokeTokenRequestType $request
     * @return PromiseInterface
     */
    public function revokeTokenAsync(RevokeTokenRequestType $request)
    {
        return $this->callOperationAsync(
            'RevokeToken',
            $request,
            '\DTS\eBaySDK\Trading\Types\RevokeTokenResponseType'
        );
    }

    /**
     * @param SaveItemToSellingManagerTemplateRequestType $request
     * @return SaveItemToSellingManagerTemplateResponseType
     */
    public function saveItemToSellingManagerTemplate(SaveItemToSellingManagerTemplateRequestType $request)
    {
        return $this->saveItemToSellingManagerTemplateAsync($request)->wait();
    }

    /**
     * @param SaveItemToSellingManagerTemplateRequestType $request
     * @return PromiseInterface
     */
    public function saveItemToSellingManagerTemplateAsync(SaveItemToSellingManagerTemplateRequestType $request)
    {
        return $this->callOperationAsync(
            'SaveItemToSellingManagerTemplate',
            $request,
            '\DTS\eBaySDK\Trading\Types\SaveItemToSellingManagerTemplateResponseType'
        );
    }

    /**
     * @param SellerReverseDisputeRequestType $request
     * @return SellerReverseDisputeResponseType
     */
    public function sellerReverseDispute(SellerReverseDisputeRequestType $request)
    {
        return $this->sellerReverseDisputeAsync($request)->wait();
    }

    /**
     * @param SellerReverseDisputeRequestType $request
     * @return PromiseInterface
     */
    public function sellerReverseDisputeAsync(SellerReverseDisputeRequestType $request)
    {
        return $this->callOperationAsync(
            'SellerReverseDispute',
            $request,
            '\DTS\eBaySDK\Trading\Types\SellerReverseDisputeResponseType'
        );
    }

    /**
     * @param SendInvoiceRequestType $request
     * @return SendInvoiceResponseType
     */
    public function sendInvoice(SendInvoiceRequestType $request)
    {
        return $this->sendInvoiceAsync($request)->wait();
    }

    /**
     * @param SendInvoiceRequestType $request
     * @return PromiseInterface
     */
    public function sendInvoiceAsync(SendInvoiceRequestType $request)
    {
        return $this->callOperationAsync(
            'SendInvoice',
            $request,
            '\DTS\eBaySDK\Trading\Types\SendInvoiceResponseType'
        );
    }

    /**
     * @param SetMessagePreferencesRequestType $request
     * @return SetMessagePreferencesResponseType
     */
    public function setMessagePreferences(SetMessagePreferencesRequestType $request)
    {
        return $this->setMessagePreferencesAsync($request)->wait();
    }

    /**
     * @param SetMessagePreferencesRequestType $request
     * @return PromiseInterface
     */
    public function setMessagePreferencesAsync(SetMessagePreferencesRequestType $request)
    {
        return $this->callOperationAsync(
            'SetMessagePreferences',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetMessagePreferencesResponseType'
        );
    }

    /**
     * @param SetNotificationPreferencesRequestType $request
     * @return SetNotificationPreferencesResponseType
     */
    public function setNotificationPreferences(SetNotificationPreferencesRequestType $request)
    {
        return $this->setNotificationPreferencesAsync($request)->wait();
    }

    /**
     * @param SetNotificationPreferencesRequestType $request
     * @return PromiseInterface
     */
    public function setNotificationPreferencesAsync(SetNotificationPreferencesRequestType $request)
    {
        return $this->callOperationAsync(
            'SetNotificationPreferences',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetNotificationPreferencesResponseType'
        );
    }

    /**
     * @param SetPromotionalSaleRequestType $request
     * @return SetPromotionalSaleResponseType
     */
    public function setPromotionalSale(SetPromotionalSaleRequestType $request)
    {
        return $this->setPromotionalSaleAsync($request)->wait();
    }

    /**
     * @param SetPromotionalSaleRequestType $request
     * @return PromiseInterface
     */
    public function setPromotionalSaleAsync(SetPromotionalSaleRequestType $request)
    {
        return $this->callOperationAsync(
            'SetPromotionalSale',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetPromotionalSaleResponseType'
        );
    }

    /**
     * @param SetPromotionalSaleListingsRequestType $request
     * @return SetPromotionalSaleListingsResponseType
     */
    public function setPromotionalSaleListings(SetPromotionalSaleListingsRequestType $request)
    {
        return $this->setPromotionalSaleListingsAsync($request)->wait();
    }

    /**
     * @param SetPromotionalSaleListingsRequestType $request
     * @return PromiseInterface
     */
    public function setPromotionalSaleListingsAsync(SetPromotionalSaleListingsRequestType $request)
    {
        return $this->callOperationAsync(
            'SetPromotionalSaleListings',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetPromotionalSaleListingsResponseType'
        );
    }

    /**
     * @param SetSellingManagerFeedbackOptionsRequestType $request
     * @return SetSellingManagerFeedbackOptionsResponseType
     */
    public function setSellingManagerFeedbackOptions(SetSellingManagerFeedbackOptionsRequestType $request)
    {
        return $this->setSellingManagerFeedbackOptionsAsync($request)->wait();
    }

    /**
     * @param SetSellingManagerFeedbackOptionsRequestType $request
     * @return PromiseInterface
     */
    public function setSellingManagerFeedbackOptionsAsync(SetSellingManagerFeedbackOptionsRequestType $request)
    {
        return $this->callOperationAsync(
            'SetSellingManagerFeedbackOptions',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetSellingManagerFeedbackOptionsResponseType'
        );
    }

    /**
     * @param SetSellingManagerItemAutomationRuleRequestType $request
     * @return SetSellingManagerItemAutomationRuleResponseType
     */
    public function setSellingManagerItemAutomationRule(SetSellingManagerItemAutomationRuleRequestType $request)
    {
        return $this->setSellingManagerItemAutomationRuleAsync($request)->wait();
    }

    /**
     * @param SetSellingManagerItemAutomationRuleRequestType $request
     * @return PromiseInterface
     */
    public function setSellingManagerItemAutomationRuleAsync(SetSellingManagerItemAutomationRuleRequestType $request)
    {
        return $this->callOperationAsync(
            'SetSellingManagerItemAutomationRule',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetSellingManagerItemAutomationRuleResponseType'
        );
    }

    /**
     * @param SetSellingManagerTemplateAutomationRuleRequestType $request
     * @return SetSellingManagerTemplateAutomationRuleResponseType
     */
    public function setSellingManagerTemplateAutomationRule(SetSellingManagerTemplateAutomationRuleRequestType $request)
    {
        return $this->setSellingManagerTemplateAutomationRuleAsync($request)->wait();
    }

    /**
     * @param SetSellingManagerTemplateAutomationRuleRequestType $request
     * @return PromiseInterface
     */
    public function setSellingManagerTemplateAutomationRuleAsync(SetSellingManagerTemplateAutomationRuleRequestType $request)
    {
        return $this->callOperationAsync(
            'SetSellingManagerTemplateAutomationRule',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetSellingManagerTemplateAutomationRuleResponseType'
        );
    }

    /**
     * @param SetShippingDiscountProfilesRequestType $request
     * @return SetShippingDiscountProfilesResponseType
     */
    public function setShippingDiscountProfiles(SetShippingDiscountProfilesRequestType $request)
    {
        return $this->setShippingDiscountProfilesAsync($request)->wait();
    }

    /**
     * @param SetShippingDiscountProfilesRequestType $request
     * @return PromiseInterface
     */
    public function setShippingDiscountProfilesAsync(SetShippingDiscountProfilesRequestType $request)
    {
        return $this->callOperationAsync(
            'SetShippingDiscountProfiles',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetShippingDiscountProfilesResponseType'
        );
    }

    /**
     * @param SetStoreRequestType $request
     * @return SetStoreResponseType
     */
    public function setStore(SetStoreRequestType $request)
    {
        return $this->setStoreAsync($request)->wait();
    }

    /**
     * @param SetStoreRequestType $request
     * @return PromiseInterface
     */
    public function setStoreAsync(SetStoreRequestType $request)
    {
        return $this->callOperationAsync(
            'SetStore',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetStoreResponseType'
        );
    }

    /**
     * @param SetStoreCategoriesRequestType $request
     * @return SetStoreCategoriesResponseType
     */
    public function setStoreCategories(SetStoreCategoriesRequestType $request)
    {
        return $this->setStoreCategoriesAsync($request)->wait();
    }

    /**
     * @param SetStoreCategoriesRequestType $request
     * @return PromiseInterface
     */
    public function setStoreCategoriesAsync(SetStoreCategoriesRequestType $request)
    {
        return $this->callOperationAsync(
            'SetStoreCategories',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetStoreCategoriesResponseType'
        );
    }

    /**
     * @param SetStoreCustomPageRequestType $request
     * @return SetStoreCustomPageResponseType
     */
    public function setStoreCustomPage(SetStoreCustomPageRequestType $request)
    {
        return $this->setStoreCustomPageAsync($request)->wait();
    }

    /**
     * @param SetStoreCustomPageRequestType $request
     * @return PromiseInterface
     */
    public function setStoreCustomPageAsync(SetStoreCustomPageRequestType $request)
    {
        return $this->callOperationAsync(
            'SetStoreCustomPage',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetStoreCustomPageResponseType'
        );
    }

    /**
     * @param SetStorePreferencesRequestType $request
     * @return SetStorePreferencesResponseType
     */
    public function setStorePreferences(SetStorePreferencesRequestType $request)
    {
        return $this->setStorePreferencesAsync($request)->wait();
    }

    /**
     * @param SetStorePreferencesRequestType $request
     * @return PromiseInterface
     */
    public function setStorePreferencesAsync(SetStorePreferencesRequestType $request)
    {
        return $this->callOperationAsync(
            'SetStorePreferences',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetStorePreferencesResponseType'
        );
    }

    /**
     * @param SetTaxTableRequestType $request
     * @return SetTaxTableResponseType
     */
    public function setTaxTable(SetTaxTableRequestType $request)
    {
        return $this->setTaxTableAsync($request)->wait();
    }

    /**
     * @param SetTaxTableRequestType $request
     * @return PromiseInterface
     */
    public function setTaxTableAsync(SetTaxTableRequestType $request)
    {
        return $this->callOperationAsync(
            'SetTaxTable',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetTaxTableResponseType'
        );
    }

    /**
     * @param SetUserNotesRequestType $request
     * @return SetUserNotesResponseType
     */
    public function setUserNotes(SetUserNotesRequestType $request)
    {
        return $this->setUserNotesAsync($request)->wait();
    }

    /**
     * @param SetUserNotesRequestType $request
     * @return PromiseInterface
     */
    public function setUserNotesAsync(SetUserNotesRequestType $request)
    {
        return $this->callOperationAsync(
            'SetUserNotes',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetUserNotesResponseType'
        );
    }

    /**
     * @param SetUserPreferencesRequestType $request
     * @return SetUserPreferencesResponseType
     */
    public function setUserPreferences(SetUserPreferencesRequestType $request)
    {
        return $this->setUserPreferencesAsync($request)->wait();
    }

    /**
     * @param SetUserPreferencesRequestType $request
     * @return PromiseInterface
     */
    public function setUserPreferencesAsync(SetUserPreferencesRequestType $request)
    {
        return $this->callOperationAsync(
            'SetUserPreferences',
            $request,
            '\DTS\eBaySDK\Trading\Types\SetUserPreferencesResponseType'
        );
    }

    /**
     * @param UploadSiteHostedPicturesRequestType $request
     * @return UploadSiteHostedPicturesResponseType
     */
    public function uploadSiteHostedPictures(UploadSiteHostedPicturesRequestType $request)
    {
        return $this->uploadSiteHostedPicturesAsync($request)->wait();
    }

    /**
     * @param UploadSiteHostedPicturesRequestType $request
     * @return PromiseInterface
     */
    public function uploadSiteHostedPicturesAsync(UploadSiteHostedPicturesRequestType $request)
    {
        return $this->callOperationAsync(
            'UploadSiteHostedPictures',
            $request,
            '\DTS\eBaySDK\Trading\Types\UploadSiteHostedPicturesResponseType'
        );
    }

    /**
     * @param ValidateChallengeInputRequestType $request
     * @return ValidateChallengeInputResponseType
     */
    public function validateChallengeInput(ValidateChallengeInputRequestType $request)
    {
        return $this->validateChallengeInputAsync($request)->wait();
    }

    /**
     * @param ValidateChallengeInputRequestType $request
     * @return PromiseInterface
     */
    public function validateChallengeInputAsync(ValidateChallengeInputRequestType $request)
    {
        return $this->callOperationAsync(
            'ValidateChallengeInput',
            $request,
            '\DTS\eBaySDK\Trading\Types\ValidateChallengeInputResponseType'
        );
    }

    /**
     * @param ValidateTestUserRegistrationRequestType $request
     * @return ValidateTestUserRegistrationResponseType
     */
    public function validateTestUserRegistration(ValidateTestUserRegistrationRequestType $request)
    {
        return $this->validateTestUserRegistrationAsync($request)->wait();
    }

    /**
     * @param ValidateTestUserRegistrationRequestType $request
     * @return PromiseInterface
     */
    public function validateTestUserRegistrationAsync(ValidateTestUserRegistrationRequestType $request)
    {
        return $this->callOperationAsync(
            'ValidateTestUserRegistration',
            $request,
            '\DTS\eBaySDK\Trading\Types\ValidateTestUserRegistrationResponseType'
        );
    }

    /**
     * @param VeROReportItemsRequestType $request
     * @return VeROReportItemsResponseType
     */
    public function veROReportItems(VeROReportItemsRequestType $request)
    {
        return $this->veROReportItemsAsync($request)->wait();
    }

    /**
     * @param VeROReportItemsRequestType $request
     * @return PromiseInterface
     */
    public function veROReportItemsAsync(VeROReportItemsRequestType $request)
    {
        return $this->callOperationAsync(
            'VeROReportItems',
            $request,
            '\DTS\eBaySDK\Trading\Types\VeROReportItemsResponseType'
        );
    }

    /**
     * @param VerifyAddFixedPriceItemRequestType $request
     * @return VerifyAddFixedPriceItemResponseType
     */
    public function verifyAddFixedPriceItem(VerifyAddFixedPriceItemRequestType $request)
    {
        return $this->verifyAddFixedPriceItemAsync($request)->wait();
    }

    /**
     * @param VerifyAddFixedPriceItemRequestType $request
     * @return PromiseInterface
     */
    public function verifyAddFixedPriceItemAsync(VerifyAddFixedPriceItemRequestType $request)
    {
        return $this->callOperationAsync(
            'VerifyAddFixedPriceItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\VerifyAddFixedPriceItemResponseType'
        );
    }

    /**
     * @param VerifyAddItemRequestType $request
     * @return VerifyAddItemResponseType
     */
    public function verifyAddItem(VerifyAddItemRequestType $request)
    {
        return $this->verifyAddItemAsync($request)->wait();
    }

    /**
     * @param VerifyAddItemRequestType $request
     * @return PromiseInterface
     */
    public function verifyAddItemAsync(VerifyAddItemRequestType $request)
    {
        return $this->callOperationAsync(
            'VerifyAddItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\VerifyAddItemResponseType'
        );
    }

    /**
     * @param VerifyAddSecondChanceItemRequestType $request
     * @return VerifyAddSecondChanceItemResponseType
     */
    public function verifyAddSecondChanceItem(VerifyAddSecondChanceItemRequestType $request)
    {
        return $this->verifyAddSecondChanceItemAsync($request)->wait();
    }

    /**
     * @param VerifyAddSecondChanceItemRequestType $request
     * @return PromiseInterface
     */
    public function verifyAddSecondChanceItemAsync(VerifyAddSecondChanceItemRequestType $request)
    {
        return $this->callOperationAsync(
            'VerifyAddSecondChanceItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\VerifyAddSecondChanceItemResponseType'
        );
    }

    /**
     * @param VerifyRelistItemRequestType $request
     * @return VerifyRelistItemResponseType
     */
    public function verifyRelistItem(VerifyRelistItemRequestType $request)
    {
        return $this->verifyRelistItemAsync($request)->wait();
    }

    /**
     * @param VerifyRelistItemRequestType $request
     * @return PromiseInterface
     */
    public function verifyRelistItemAsync(VerifyRelistItemRequestType $request)
    {
        return $this->callOperationAsync(
            'VerifyRelistItem',
            $request,
            '\DTS\eBaySDK\Trading\Types\VerifyRelistItemResponseType'
        );
    }
}
