<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\PostOrder\Services;

use DTS\eBaySDK\PostOrder\Types\ApproveCancellationRequestRestRequest;
use DTS\eBaySDK\PostOrder\Types\ApproveCancellationRequestRestResponse;
use GuzzleHttp\Promise\PromiseInterface;
use DTS\eBaySDK\PostOrder\Types\CheckCancellationEligibilityRestRequest;
use DTS\eBaySDK\PostOrder\Types\CheckCancellationEligibilityRestResponse;
use DTS\eBaySDK\PostOrder\Types\ConfirmCancellationRefundRestRequest;
use DTS\eBaySDK\PostOrder\Types\ConfirmCancellationRefundRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetCancellationRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetCancellationRestResponse;
use DTS\eBaySDK\PostOrder\Types\RejectCancellationRequestRestRequest;
use DTS\eBaySDK\PostOrder\Types\RejectCancellationRequestRestResponse;
use DTS\eBaySDK\PostOrder\Types\SearchCancellationsRestRequest;
use DTS\eBaySDK\PostOrder\Types\SearchCancellationsRestResponse;
use DTS\eBaySDK\PostOrder\Types\SubmitCancellationRequestRestRequest;
use DTS\eBaySDK\PostOrder\Types\SubmitCancellationRequestRestResponse;
use DTS\eBaySDK\PostOrder\Types\AppealCaseDecisionRestRequest;
use DTS\eBaySDK\PostOrder\Types\AppealCaseDecisionRestResponse;
use DTS\eBaySDK\PostOrder\Types\CloseCaseRestRequest;
use DTS\eBaySDK\PostOrder\Types\CloseCaseRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetCaseRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetCaseRestResponse;
use DTS\eBaySDK\PostOrder\Types\IssueCaseRefundRestRequest;
use DTS\eBaySDK\PostOrder\Types\IssueCaseRefundRestResponse;
use DTS\eBaySDK\PostOrder\Types\ProvideReturnShipmentInfoRestRequest;
use DTS\eBaySDK\PostOrder\Types\ProvideReturnShipmentInfoRestResponse;
use DTS\eBaySDK\PostOrder\Types\ProvidesReturnAddressRestRequest;
use DTS\eBaySDK\PostOrder\Types\ProvidesReturnAddressRestResponse;
use DTS\eBaySDK\PostOrder\Types\SearchCasesRestRequest;
use DTS\eBaySDK\PostOrder\Types\SearchCasesRestResponse;
use DTS\eBaySDK\PostOrder\Types\CheckInquiryEligibilityRestRequest;
use DTS\eBaySDK\PostOrder\Types\CheckInquiryEligibilityRestResponse;
use DTS\eBaySDK\PostOrder\Types\CloseInquiryRestRequest;
use DTS\eBaySDK\PostOrder\Types\CloseInquiryRestResponse;
use DTS\eBaySDK\PostOrder\Types\ConfirmInquiryRefundRestRequest;
use DTS\eBaySDK\PostOrder\Types\ConfirmInquiryRefundRestResponse;
use DTS\eBaySDK\PostOrder\Types\CreateInquiryRestRequest;
use DTS\eBaySDK\PostOrder\Types\CreateInquiryRestResponse;
use DTS\eBaySDK\PostOrder\Types\EscalateInquiryRestRequest;
use DTS\eBaySDK\PostOrder\Types\EscalateInquiryRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetInquiryRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetInquiryRestResponse;
use DTS\eBaySDK\PostOrder\Types\IssueInquiryRefundRestRequest;
use DTS\eBaySDK\PostOrder\Types\IssueInquiryRefundRestResponse;
use DTS\eBaySDK\PostOrder\Types\ProvideInquiryRefundInfoRestRequest;
use DTS\eBaySDK\PostOrder\Types\ProvideInquiryRefundInfoRestResponse;
use DTS\eBaySDK\PostOrder\Types\ProvideInquiryShipmentInfoRestRequest;
use DTS\eBaySDK\PostOrder\Types\ProvideInquiryShipmentInfoRestResponse;
use DTS\eBaySDK\PostOrder\Types\SearchInquiriesRestRequest;
use DTS\eBaySDK\PostOrder\Types\SearchInquiriesRestResponse;
use DTS\eBaySDK\PostOrder\Types\SendInquiryMessageRestRequest;
use DTS\eBaySDK\PostOrder\Types\SendInquiryMessageRestResponse;
use DTS\eBaySDK\PostOrder\Types\AddShippingLabelInfoRestRequest;
use DTS\eBaySDK\PostOrder\Types\AddShippingLabelInfoRestResponse;
use DTS\eBaySDK\PostOrder\Types\CancelReturnRequestRestRequest;
use DTS\eBaySDK\PostOrder\Types\CancelReturnRequestRestResponse;
use DTS\eBaySDK\PostOrder\Types\CheckReturnEligibilityRestRequest;
use DTS\eBaySDK\PostOrder\Types\CheckReturnEligibilityRestResponse;
use DTS\eBaySDK\PostOrder\Types\CheckShippingLabelEligibilityRestRequest;
use DTS\eBaySDK\PostOrder\Types\CheckShippingLabelEligibilityRestResponse;
use DTS\eBaySDK\PostOrder\Types\CreateReturnDraftRestRequest;
use DTS\eBaySDK\PostOrder\Types\CreateReturnDraftRestResponse;
use DTS\eBaySDK\PostOrder\Types\CreateReturnRequestRestRequest;
use DTS\eBaySDK\PostOrder\Types\CreateReturnRequestRestResponse;
use DTS\eBaySDK\PostOrder\Types\CreateReturnShippingLabelRestRequest;
use DTS\eBaySDK\PostOrder\Types\CreateReturnShippingLabelRestResponse;
use DTS\eBaySDK\PostOrder\Types\DeleteReturnDraftFileRestRequest;
use DTS\eBaySDK\PostOrder\Types\DeleteReturnDraftFileRestResponse;
use DTS\eBaySDK\PostOrder\Types\DeleteReturnFileRestRequest;
use DTS\eBaySDK\PostOrder\Types\DeleteReturnFileRestResponse;
use DTS\eBaySDK\PostOrder\Types\EscalateReturnRestRequest;
use DTS\eBaySDK\PostOrder\Types\EscalateReturnRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnDraftRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnDraftRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnDraftFilesRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnDraftFilesRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnEstimateRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnEstimateRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnFilesRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnFilesRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnMetadataRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnMetadataRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnPreferencesRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnShippingLabelRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnShippingLabelRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetShipmentTrackingRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetShipmentTrackingRestResponse;
use DTS\eBaySDK\PostOrder\Types\IssueReturnRefundRestRequest;
use DTS\eBaySDK\PostOrder\Types\IssueReturnRefundRestResponse;
use DTS\eBaySDK\PostOrder\Types\MarkReturnReceivedRestRequest;
use DTS\eBaySDK\PostOrder\Types\MarkReturnReceivedRestResponse;
use DTS\eBaySDK\PostOrder\Types\MarkReturnRefundReceivedRestRequest;
use DTS\eBaySDK\PostOrder\Types\MarkReturnRefundReceivedRestResponse;
use DTS\eBaySDK\PostOrder\Types\MarkReturnRefundSentRestRequest;
use DTS\eBaySDK\PostOrder\Types\MarkReturnRefundSentRestResponse;
use DTS\eBaySDK\PostOrder\Types\MarkReturnShippedRestRequest;
use DTS\eBaySDK\PostOrder\Types\MarkReturnShippedRestResponse;
use DTS\eBaySDK\PostOrder\Types\ProcessReturnRequestRestRequest;
use DTS\eBaySDK\PostOrder\Types\ProcessReturnRequestRestResponse;
use DTS\eBaySDK\PostOrder\Types\SearchReturnsRestRequest;
use DTS\eBaySDK\PostOrder\Types\SearchReturnsRestResponse;
use DTS\eBaySDK\PostOrder\Types\SendReturnMessageRestRequest;
use DTS\eBaySDK\PostOrder\Types\SendReturnMessageRestResponse;
use DTS\eBaySDK\PostOrder\Types\SendReturnShippingLabelRestRequest;
use DTS\eBaySDK\PostOrder\Types\SendReturnShippingLabelRestResponse;
use DTS\eBaySDK\PostOrder\Types\SetReturnPreferencesRestRequest;
use DTS\eBaySDK\PostOrder\Types\SetReturnPreferencesRestResponse;
use DTS\eBaySDK\PostOrder\Types\SubmitReturnFileRestRequest;
use DTS\eBaySDK\PostOrder\Types\SubmitReturnFileRestResponse;
use DTS\eBaySDK\PostOrder\Types\UpdateReturnDraftRestRequest;
use DTS\eBaySDK\PostOrder\Types\UpdateReturnDraftRestResponse;
use DTS\eBaySDK\PostOrder\Types\UpdateShipmentTrackingRestRequest;
use DTS\eBaySDK\PostOrder\Types\UpdateShipmentTrackingRestResponse;
use DTS\eBaySDK\PostOrder\Types\UploadReturnDraftFileRestRequest;
use DTS\eBaySDK\PostOrder\Types\UploadReturnDraftFileRestResponse;
use DTS\eBaySDK\PostOrder\Types\UploadReturnFileRestRequest;
use DTS\eBaySDK\PostOrder\Types\UploadReturnFileRestResponse;
use DTS\eBaySDK\PostOrder\Types\VoidShippingLabelRestRequest;
use DTS\eBaySDK\PostOrder\Types\VoidShippingLabelRestResponse;
use DTS\eBaySDK\PostOrder\Types\CreateCustomListRestRequest;
use DTS\eBaySDK\PostOrder\Types\CreateCustomListRestResponse;
use DTS\eBaySDK\PostOrder\Types\CreateReturnRulesRestRequest;
use DTS\eBaySDK\PostOrder\Types\CreateReturnRulesRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetCustomListRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetCustomListsRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnRuleTemplatesRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetStoreCategoriesRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnRuleRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnRuleRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnRuleHistoryRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnRuleHistoryRestResponse;
use DTS\eBaySDK\PostOrder\Types\GetReturnRulesRestRequest;
use DTS\eBaySDK\PostOrder\Types\GetReturnRulesRestResponse;
use DTS\eBaySDK\PostOrder\Types\UpdateCustomListRestRequest;
use DTS\eBaySDK\PostOrder\Types\UpdateCustomListRestResponse;
use DTS\eBaySDK\PostOrder\Types\UpdateReturnRulesRestRequest;
use DTS\eBaySDK\PostOrder\Types\UpdateReturnRulesRestResponse;
class PostOrderService extends PostOrderBaseService
{
    const API_VERSION = 'v2';

    /**
     * @property array $operations Associative array of operations provided by the service.
     */
    protected static $operations = [
        'ApproveCancellationRequest' => [
            'method' => 'POST',
            'resource' => 'cancellation/{cancelId}/approve',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\ApproveCancellationRequestRestResponse',
            'params' => [
                'cancelId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CheckCancellationEligibility' => [
            'method' => 'POST',
            'resource' => 'cancellation/check_eligibility',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CheckCancellationEligibilityRestResponse',
            'params' => [
            ]
        ],
        'ConfirmCancellationRefund' => [
            'method' => 'POST',
            'resource' => 'cancellation/{cancelId}/confirm',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\ConfirmCancellationRefundRestResponse',
            'params' => [
                'cancelId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetCancellation' => [
            'method' => 'GET',
            'resource' => 'cancellation/{cancelId}?',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetCancellationRestResponse',
            'params' => [
                'cancelId' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'fieldgroups' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'RejectCancellationRequest' => [
            'method' => 'POST',
            'resource' => 'cancellation/{cancelId}/reject',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\RejectCancellationRequestRestResponse',
            'params' => [
                'cancelId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'SearchCancellations' => [
            'method' => 'GET',
            'resource' => 'cancellation/search',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SearchCancellationsRestResponse',
            'params' => [
                'buyer_login_name' => [
                    'valid' => ['string']
                ],
                'cancel_id' => [
                    'valid' => ['string']
                ],
                'creation_date_range_from' => [
                    'valid' => ['string']
                ],
                'creation_date_range_to' => [
                    'valid' => ['string']
                ],
                'item_id' => [
                    'valid' => ['string']
                ],
                'legacy_order_id' => [
                    'valid' => ['string']
                ],
                'limit' => [
                    'valid' => ['string']
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'seller_login_name' => [
                    'valid' => ['string']
                ],
                'sort' => [
                    'valid' => ['string']
                ],
                'transaction_id' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'SubmitCancellationRequest' => [
            'method' => 'POST',
            'resource' => 'cancellation',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SubmitCancellationRequestRestResponse',
            'params' => [
            ]
        ],
        'AppealCaseDecision' => [
            'method' => 'POST',
            'resource' => 'casemanagement/{caseId}/appeal',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\AppealCaseDecisionRestResponse',
            'params' => [
                'caseId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CloseCase' => [
            'method' => 'POST',
            'resource' => 'casemanagement/{caseId}/close',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CloseCaseRestResponse',
            'params' => [
                'caseId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetCase' => [
            'method' => 'GET',
            'resource' => 'casemanagement/{caseId}',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetCaseRestResponse',
            'params' => [
                'caseId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'IssueCaseRefund' => [
            'method' => 'POST',
            'resource' => 'casemanagement/{caseId}/issue_refund',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\IssueCaseRefundRestResponse',
            'params' => [
                'caseId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'ProvideReturnShipmentInfo' => [
            'method' => 'POST',
            'resource' => 'casemanagement/{caseId}/provide_shipment_info',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\ProvideReturnShipmentInfoRestResponse',
            'params' => [
                'caseId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'ProvidesReturnAddress' => [
            'method' => 'POST',
            'resource' => 'casemanagement/{caseId}/provide_return_address',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\ProvidesReturnAddressRestResponse',
            'params' => [
                'caseId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'SearchCases' => [
            'method' => 'GET',
            'resource' => 'casemanagement/search',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SearchCasesRestResponse',
            'params' => [
                'case_creation_date_range_from' => [
                    'valid' => ['string']
                ],
                'case_creation_date_range_to' => [
                    'valid' => ['string']
                ],
                'case_status_filter' => [
                    'valid' => ['string']
                ],
                'fieldgroups' => [
                    'valid' => ['string']
                ],
                'item_id' => [
                    'valid' => ['string']
                ],
                'limit' => [
                    'valid' => ['string']
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'order_id' => [
                    'valid' => ['string']
                ],
                'return_id' => [
                    'valid' => ['string']
                ],
                'sort' => [
                    'valid' => ['string']
                ],
                'transaction_id' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'CheckInquiryEligibility' => [
            'method' => 'POST',
            'resource' => 'inquiry/check_eligibility',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CheckInquiryEligibilityRestResponse',
            'params' => [
            ]
        ],
        'CloseInquiry' => [
            'method' => 'POST',
            'resource' => 'inquiry/{inquiryId}/close',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CloseInquiryRestResponse',
            'params' => [
                'inquiryId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'ConfirmInquiryRefund' => [
            'method' => 'POST',
            'resource' => 'inquiry/{inquiryId}/confirm_refund',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\ConfirmInquiryRefundRestResponse',
            'params' => [
                'inquiryId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateInquiry' => [
            'method' => 'POST',
            'resource' => 'inquiry',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CreateInquiryRestResponse',
            'params' => [
            ]
        ],
        'EscalateInquiry' => [
            'method' => 'POST',
            'resource' => 'inquiry/{inquiryId}/escalate',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\EscalateInquiryRestResponse',
            'params' => [
                'inquiryId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetInquiry' => [
            'method' => 'GET',
            'resource' => 'inquiry/{inquiryId}',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetInquiryRestResponse',
            'params' => [
                'inquiryId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'IssueInquiryRefund' => [
            'method' => 'POST',
            'resource' => 'inquiry/{inquiryId}/issue_refund',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\IssueInquiryRefundRestResponse',
            'params' => [
                'inquiryId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'ProvideInquiryRefundInfo' => [
            'method' => 'POST',
            'resource' => 'inquiry/{inquiryId}/provide_refund_info',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\ProvideInquiryRefundInfoRestResponse',
            'params' => [
                'inquiryId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'ProvideInquiryShipmentInfo' => [
            'method' => 'POST',
            'resource' => 'inquiry/{inquiryId}/provide_shipment_info',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\ProvideInquiryShipmentInfoRestResponse',
            'params' => [
                'inquiryId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'SearchInquiries' => [
            'method' => 'GET',
            'resource' => 'inquiry/search',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SearchInquiriesRestResponse',
            'params' => [
                'fieldgroups' => [
                    'valid' => ['string']
                ],
                'inquiry_creation_date_range_from' => [
                    'valid' => ['string']
                ],
                'inquiry_creation_date_range_to' => [
                    'valid' => ['string']
                ],
                'inquiry_status' => [
                    'valid' => ['string']
                ],
                'item_id' => [
                    'valid' => ['string']
                ],
                'limit' => [
                    'valid' => ['string']
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'order_id' => [
                    'valid' => ['string']
                ],
                'sort' => [
                    'valid' => ['string']
                ],
                'transaction_id' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'SendInquiryMessage' => [
            'method' => 'POST',
            'resource' => 'inquiry/{inquiryId}/send_message',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SendInquiryMessageRestResponse',
            'params' => [
                'inquiryId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'AddShippingLabelInfo' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/add_shipping_label',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\AddShippingLabelInfoRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CancelReturnRequest' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/cancel',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CancelReturnRequestRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CheckReturnEligibility' => [
            'method' => 'POST',
            'resource' => 'return/check_eligibility',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CheckReturnEligibilityRestResponse',
            'params' => [
            ]
        ],
        'CheckShippingLabelEligibility' => [
            'method' => 'GET',
            'resource' => 'return/{returnId}/check_label_print_eligibility',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CheckShippingLabelEligibilityRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateReturnDraft' => [
            'method' => 'POST',
            'resource' => 'return/draft',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CreateReturnDraftRestResponse',
            'params' => [
            ]
        ],
        'CreateReturnRequest' => [
            'method' => 'POST',
            'resource' => 'return',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CreateReturnRequestRestResponse',
            'params' => [
                'fieldgroups' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'CreateReturnShippingLabel' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/initiate_shipping_label',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CreateReturnShippingLabelRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'DeleteReturnDraftFile' => [
            'method' => 'DELETE',
            'resource' => 'return/draft/{draftId}/file/{fileId}',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\DeleteReturnDraftFileRestResponse',
            'params' => [
                'draftId' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'fileId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'DeleteReturnFile' => [
            'method' => 'DELETE',
            'resource' => 'return/{returnId}/file/{fileId}',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\DeleteReturnFileRestResponse',
            'params' => [
                'fileId' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'EscalateReturn' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/escalate',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\EscalateReturnRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetReturn' => [
            'method' => 'GET',
            'resource' => 'return/{returnId}',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnRestResponse',
            'params' => [
                'fieldgroups' => [
                    'valid' => ['string']
                ],
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetReturnDraft' => [
            'method' => 'GET',
            'resource' => 'return/draft/{draftId}',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnDraftRestResponse',
            'params' => [
                'draftId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetReturnDraftFiles' => [
            'method' => 'GET',
            'resource' => 'return/draft/{draftId}/files',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnDraftFilesRestResponse',
            'params' => [
                'draftId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetReturnEstimate' => [
            'method' => 'POST',
            'resource' => 'return/estimate',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnEstimateRestResponse',
            'params' => [
            ]
        ],
        'GetReturnFiles' => [
            'method' => 'GET',
            'resource' => 'return/{returnId}/files',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnFilesRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetReturnMetadata' => [
            'method' => 'GET',
            'resource' => 'return/metadata/{metadataKey}',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnMetadataRestResponse',
            'params' => [
                'metadataKey' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetReturnPreferences' => [
            'method' => 'GET',
            'resource' => 'return/preference',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnPreferencesRestResponse',
            'params' => [
            ]
        ],
        'GetReturnShippingLabel' => [
            'method' => 'GET',
            'resource' => 'return/{returnId}/get_shipping_label',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnShippingLabelRestResponse',
            'params' => [
                'return_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetShipmentTracking' => [
            'method' => 'GET',
            'resource' => 'return/{returnId}/tracking',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetShipmentTrackingRestResponse',
            'params' => [
                'carrier_used' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'tracking_number' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'IssueReturnRefund' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/issue_refund',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\IssueReturnRefundRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'MarkReturnReceived' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/mark_as_received',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\MarkReturnReceivedRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'MarkReturnRefundReceived' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/mark_refund_received',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\MarkReturnRefundReceivedRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'MarkReturnRefundSent' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/mark_refund_sent',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\MarkReturnRefundSentRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'MarkReturnShipped' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/mark_as_shipped',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\MarkReturnShippedRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'ProcessReturnRequest' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/decide',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\ProcessReturnRequestRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'SearchReturns' => [
            'method' => 'GET',
            'resource' => 'return/search',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SearchReturnsRestResponse',
            'params' => [
                'creation_date_range_from' => [
                    'valid' => ['string']
                ],
                'creation_date_range_to' => [
                    'valid' => ['string']
                ],
                'item_id' => [
                    'valid' => ['string']
                ],
                'limit' => [
                    'valid' => ['string']
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'return_state' => [
                    'valid' => ['string']
                ],
                'sort' => [
                    'valid' => ['string']
                ],
                'states' => [
                    'valid' => ['string']
                ],
                'transaction_id' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'SendReturnMessage' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/send_message',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SendReturnMessageRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'SendReturnShippingLabel' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/send_shipping_label',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SendReturnShippingLabelRestResponse',
            'params' => [
                'return_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'to_email_address' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'SetReturnPreferences' => [
            'method' => 'POST',
            'resource' => 'return/preference',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SetReturnPreferencesRestResponse',
            'params' => [
            ]
        ],
        'SubmitReturnFile' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/file/submit',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\SubmitReturnFileRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UpdateReturnDraft' => [
            'method' => 'PUT',
            'resource' => 'return/draft/{draftId}',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\UpdateReturnDraftRestResponse',
            'params' => [
                'draftId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UpdateShipmentTracking' => [
            'method' => 'PUT',
            'resource' => 'return/{returnId}/update_tracking',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\UpdateShipmentTrackingRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UploadReturnDraftFile' => [
            'method' => 'POST',
            'resource' => 'return/draft/{draftId}/file/upload',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\UploadReturnDraftFileRestResponse',
            'params' => [
                'draftId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UploadReturnFile' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/file/upload',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\UploadReturnFileRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'VoidShippingLabel' => [
            'method' => 'POST',
            'resource' => 'return/{returnId}/void_shipping_label',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\VoidShippingLabelRestResponse',
            'params' => [
                'returnId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateCustomList' => [
            'method' => 'POST',
            'resource' => 'rules/custom_list',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CreateCustomListRestResponse',
            'params' => [
            ]
        ],
        'CreateReturnRules' => [
            'method' => 'POST',
            'resource' => 'rules',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\CreateReturnRulesRestResponse',
            'params' => [
            ]
        ],
        'GetCustomList' => [
            'method' => 'GET',
            'resource' => 'rules/custom_list_detail',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetCustomListRestResponse',
            'params' => [
            ]
        ],
        'GetCustomLists' => [
            'method' => 'GET',
            'resource' => 'rules/custom_list',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetCustomListsRestResponse',
            'params' => [
            ]
        ],
        'GetReturnRuleTemplates' => [
            'method' => 'GET',
            'resource' => 'rules/get_templates',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnRuleTemplatesRestResponse',
            'params' => [
            ]
        ],
        'GetStoreCategories' => [
            'method' => 'GET',
            'resource' => 'rules/get_store_category',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetStoreCategoriesRestResponse',
            'params' => [
            ]
        ],
        'GetReturnRule' => [
            'method' => 'GET',
            'resource' => 'rules/{ruleId}',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnRuleRestResponse',
            'params' => [
                'ruleId' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetReturnRuleHistory' => [
            'method' => 'GET',
            'resource' => 'rules/{ruleId}/get_trigger_history',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnRuleHistoryRestResponse',
            'params' => [
                'limit' => [
                    'valid' => ['string']
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'ruleId' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'trigger_date_range_from' => [
                    'valid' => ['string']
                ],
                'trigger_date_range_to' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'GetReturnRules' => [
            'method' => 'GET',
            'resource' => 'rules/disposition_rules_list',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\GetReturnRulesRestResponse',
            'params' => [
                'fieldgroups' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'UpdateCustomList' => [
            'method' => 'PUT',
            'resource' => 'rules/custom_list',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\UpdateCustomListRestResponse',
            'params' => [
            ]
        ],
        'UpdateReturnRules' => [
            'method' => 'PUT',
            'resource' => 'rules',
            'responseClass' => '\DTS\eBaySDK\PostOrder\Types\UpdateReturnRulesRestResponse',
            'params' => [
            ]
        ]
    ];

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param ApproveCancellationRequestRestRequest $request
     * @return ApproveCancellationRequestRestResponse
     */
    public function approveCancellationRequest(ApproveCancellationRequestRestRequest $request)
    {
        return $this->approveCancellationRequestAsync($request)->wait();
    }

    /**
     * @param ApproveCancellationRequestRestRequest $request
     * @return PromiseInterface
     */
    public function approveCancellationRequestAsync(ApproveCancellationRequestRestRequest $request)
    {
        return $this->callOperationAsync('ApproveCancellationRequest', $request);
    }

    /**
     * @param CheckCancellationEligibilityRestRequest $request
     * @return CheckCancellationEligibilityRestResponse
     */
    public function checkCancellationEligibility(CheckCancellationEligibilityRestRequest $request)
    {
        return $this->checkCancellationEligibilityAsync($request)->wait();
    }

    /**
     * @param CheckCancellationEligibilityRestRequest $request
     * @return PromiseInterface
     */
    public function checkCancellationEligibilityAsync(CheckCancellationEligibilityRestRequest $request)
    {
        return $this->callOperationAsync('CheckCancellationEligibility', $request);
    }

    /**
     * @param ConfirmCancellationRefundRestRequest $request
     * @return ConfirmCancellationRefundRestResponse
     */
    public function confirmCancellationRefund(ConfirmCancellationRefundRestRequest $request)
    {
        return $this->confirmCancellationRefundAsync($request)->wait();
    }

    /**
     * @param ConfirmCancellationRefundRestRequest $request
     * @return PromiseInterface
     */
    public function confirmCancellationRefundAsync(ConfirmCancellationRefundRestRequest $request)
    {
        return $this->callOperationAsync('ConfirmCancellationRefund', $request);
    }

    /**
     * @param GetCancellationRestRequest $request
     * @return GetCancellationRestResponse
     */
    public function getCancellation(GetCancellationRestRequest $request)
    {
        return $this->getCancellationAsync($request)->wait();
    }

    /**
     * @param GetCancellationRestRequest $request
     * @return PromiseInterface
     */
    public function getCancellationAsync(GetCancellationRestRequest $request)
    {
        return $this->callOperationAsync('GetCancellation', $request);
    }

    /**
     * @param RejectCancellationRequestRestRequest $request
     * @return RejectCancellationRequestRestResponse
     */
    public function rejectCancellationRequest(RejectCancellationRequestRestRequest $request)
    {
        return $this->rejectCancellationRequestAsync($request)->wait();
    }

    /**
     * @param RejectCancellationRequestRestRequest $request
     * @return PromiseInterface
     */
    public function rejectCancellationRequestAsync(RejectCancellationRequestRestRequest $request)
    {
        return $this->callOperationAsync('RejectCancellationRequest', $request);
    }

    /**
     * @param SearchCancellationsRestRequest $request
     * @return SearchCancellationsRestResponse
     */
    public function searchCancellations(SearchCancellationsRestRequest $request)
    {
        return $this->searchCancellationsAsync($request)->wait();
    }

    /**
     * @param SearchCancellationsRestRequest $request
     * @return PromiseInterface
     */
    public function searchCancellationsAsync(SearchCancellationsRestRequest $request)
    {
        return $this->callOperationAsync('SearchCancellations', $request);
    }

    /**
     * @param SubmitCancellationRequestRestRequest $request
     * @return SubmitCancellationRequestRestResponse
     */
    public function submitCancellationRequest(SubmitCancellationRequestRestRequest $request)
    {
        return $this->submitCancellationRequestAsync($request)->wait();
    }

    /**
     * @param SubmitCancellationRequestRestRequest $request
     * @return PromiseInterface
     */
    public function submitCancellationRequestAsync(SubmitCancellationRequestRestRequest $request)
    {
        return $this->callOperationAsync('SubmitCancellationRequest', $request);
    }

    /**
     * @param AppealCaseDecisionRestRequest $request
     * @return AppealCaseDecisionRestResponse
     */
    public function appealCaseDecision(AppealCaseDecisionRestRequest $request)
    {
        return $this->appealCaseDecisionAsync($request)->wait();
    }

    /**
     * @param AppealCaseDecisionRestRequest $request
     * @return PromiseInterface
     */
    public function appealCaseDecisionAsync(AppealCaseDecisionRestRequest $request)
    {
        return $this->callOperationAsync('AppealCaseDecision', $request);
    }

    /**
     * @param CloseCaseRestRequest $request
     * @return CloseCaseRestResponse
     */
    public function closeCase(CloseCaseRestRequest $request)
    {
        return $this->closeCaseAsync($request)->wait();
    }

    /**
     * @param CloseCaseRestRequest $request
     * @return PromiseInterface
     */
    public function closeCaseAsync(CloseCaseRestRequest $request)
    {
        return $this->callOperationAsync('CloseCase', $request);
    }

    /**
     * @param GetCaseRestRequest $request
     * @return GetCaseRestResponse
     */
    public function getCase(GetCaseRestRequest $request)
    {
        return $this->getCaseAsync($request)->wait();
    }

    /**
     * @param GetCaseRestRequest $request
     * @return PromiseInterface
     */
    public function getCaseAsync(GetCaseRestRequest $request)
    {
        return $this->callOperationAsync('GetCase', $request);
    }

    /**
     * @param IssueCaseRefundRestRequest $request
     * @return IssueCaseRefundRestResponse
     */
    public function issueCaseRefund(IssueCaseRefundRestRequest $request)
    {
        return $this->issueCaseRefundAsync($request)->wait();
    }

    /**
     * @param IssueCaseRefundRestRequest $request
     * @return PromiseInterface
     */
    public function issueCaseRefundAsync(IssueCaseRefundRestRequest $request)
    {
        return $this->callOperationAsync('IssueCaseRefund', $request);
    }

    /**
     * @param ProvideReturnShipmentInfoRestRequest $request
     * @return ProvideReturnShipmentInfoRestResponse
     */
    public function provideReturnShipmentInfo(ProvideReturnShipmentInfoRestRequest $request)
    {
        return $this->provideReturnShipmentInfoAsync($request)->wait();
    }

    /**
     * @param ProvideReturnShipmentInfoRestRequest $request
     * @return PromiseInterface
     */
    public function provideReturnShipmentInfoAsync(ProvideReturnShipmentInfoRestRequest $request)
    {
        return $this->callOperationAsync('ProvideReturnShipmentInfo', $request);
    }

    /**
     * @param ProvidesReturnAddressRestRequest $request
     * @return ProvidesReturnAddressRestResponse
     */
    public function providesReturnAddress(ProvidesReturnAddressRestRequest $request)
    {
        return $this->providesReturnAddressAsync($request)->wait();
    }

    /**
     * @param ProvidesReturnAddressRestRequest $request
     * @return PromiseInterface
     */
    public function providesReturnAddressAsync(ProvidesReturnAddressRestRequest $request)
    {
        return $this->callOperationAsync('ProvidesReturnAddress', $request);
    }

    /**
     * @param SearchCasesRestRequest $request
     * @return SearchCasesRestResponse
     */
    public function searchCases(SearchCasesRestRequest $request)
    {
        return $this->searchCasesAsync($request)->wait();
    }

    /**
     * @param SearchCasesRestRequest $request
     * @return PromiseInterface
     */
    public function searchCasesAsync(SearchCasesRestRequest $request)
    {
        return $this->callOperationAsync('SearchCases', $request);
    }

    /**
     * @param CheckInquiryEligibilityRestRequest $request
     * @return CheckInquiryEligibilityRestResponse
     */
    public function checkInquiryEligibility(CheckInquiryEligibilityRestRequest $request)
    {
        return $this->checkInquiryEligibilityAsync($request)->wait();
    }

    /**
     * @param CheckInquiryEligibilityRestRequest $request
     * @return PromiseInterface
     */
    public function checkInquiryEligibilityAsync(CheckInquiryEligibilityRestRequest $request)
    {
        return $this->callOperationAsync('CheckInquiryEligibility', $request);
    }

    /**
     * @param CloseInquiryRestRequest $request
     * @return CloseInquiryRestResponse
     */
    public function closeInquiry(CloseInquiryRestRequest $request)
    {
        return $this->closeInquiryAsync($request)->wait();
    }

    /**
     * @param CloseInquiryRestRequest $request
     * @return PromiseInterface
     */
    public function closeInquiryAsync(CloseInquiryRestRequest $request)
    {
        return $this->callOperationAsync('CloseInquiry', $request);
    }

    /**
     * @param ConfirmInquiryRefundRestRequest $request
     * @return ConfirmInquiryRefundRestResponse
     */
    public function confirmInquiryRefund(ConfirmInquiryRefundRestRequest $request)
    {
        return $this->confirmInquiryRefundAsync($request)->wait();
    }

    /**
     * @param ConfirmInquiryRefundRestRequest $request
     * @return PromiseInterface
     */
    public function confirmInquiryRefundAsync(ConfirmInquiryRefundRestRequest $request)
    {
        return $this->callOperationAsync('ConfirmInquiryRefund', $request);
    }

    /**
     * @param CreateInquiryRestRequest $request
     * @return CreateInquiryRestResponse
     */
    public function createInquiry(CreateInquiryRestRequest $request)
    {
        return $this->createInquiryAsync($request)->wait();
    }

    /**
     * @param CreateInquiryRestRequest $request
     * @return PromiseInterface
     */
    public function createInquiryAsync(CreateInquiryRestRequest $request)
    {
        return $this->callOperationAsync('CreateInquiry', $request);
    }

    /**
     * @param EscalateInquiryRestRequest $request
     * @return EscalateInquiryRestResponse
     */
    public function escalateInquiry(EscalateInquiryRestRequest $request)
    {
        return $this->escalateInquiryAsync($request)->wait();
    }

    /**
     * @param EscalateInquiryRestRequest $request
     * @return PromiseInterface
     */
    public function escalateInquiryAsync(EscalateInquiryRestRequest $request)
    {
        return $this->callOperationAsync('EscalateInquiry', $request);
    }

    /**
     * @param GetInquiryRestRequest $request
     * @return GetInquiryRestResponse
     */
    public function getInquiry(GetInquiryRestRequest $request)
    {
        return $this->getInquiryAsync($request)->wait();
    }

    /**
     * @param GetInquiryRestRequest $request
     * @return PromiseInterface
     */
    public function getInquiryAsync(GetInquiryRestRequest $request)
    {
        return $this->callOperationAsync('GetInquiry', $request);
    }

    /**
     * @param IssueInquiryRefundRestRequest $request
     * @return IssueInquiryRefundRestResponse
     */
    public function issueInquiryRefund(IssueInquiryRefundRestRequest $request)
    {
        return $this->issueInquiryRefundAsync($request)->wait();
    }

    /**
     * @param IssueInquiryRefundRestRequest $request
     * @return PromiseInterface
     */
    public function issueInquiryRefundAsync(IssueInquiryRefundRestRequest $request)
    {
        return $this->callOperationAsync('IssueInquiryRefund', $request);
    }

    /**
     * @param ProvideInquiryRefundInfoRestRequest $request
     * @return ProvideInquiryRefundInfoRestResponse
     */
    public function provideInquiryRefundInfo(ProvideInquiryRefundInfoRestRequest $request)
    {
        return $this->provideInquiryRefundInfoAsync($request)->wait();
    }

    /**
     * @param ProvideInquiryRefundInfoRestRequest $request
     * @return PromiseInterface
     */
    public function provideInquiryRefundInfoAsync(ProvideInquiryRefundInfoRestRequest $request)
    {
        return $this->callOperationAsync('ProvideInquiryRefundInfo', $request);
    }

    /**
     * @param ProvideInquiryShipmentInfoRestRequest $request
     * @return ProvideInquiryShipmentInfoRestResponse
     */
    public function provideInquiryShipmentInfo(ProvideInquiryShipmentInfoRestRequest $request)
    {
        return $this->provideInquiryShipmentInfoAsync($request)->wait();
    }

    /**
     * @param ProvideInquiryShipmentInfoRestRequest $request
     * @return PromiseInterface
     */
    public function provideInquiryShipmentInfoAsync(ProvideInquiryShipmentInfoRestRequest $request)
    {
        return $this->callOperationAsync('ProvideInquiryShipmentInfo', $request);
    }

    /**
     * @param SearchInquiriesRestRequest $request
     * @return SearchInquiriesRestResponse
     */
    public function searchInquiries(SearchInquiriesRestRequest $request)
    {
        return $this->searchInquiriesAsync($request)->wait();
    }

    /**
     * @param SearchInquiriesRestRequest $request
     * @return PromiseInterface
     */
    public function searchInquiriesAsync(SearchInquiriesRestRequest $request)
    {
        return $this->callOperationAsync('SearchInquiries', $request);
    }

    /**
     * @param SendInquiryMessageRestRequest $request
     * @return SendInquiryMessageRestResponse
     */
    public function sendInquiryMessage(SendInquiryMessageRestRequest $request)
    {
        return $this->sendInquiryMessageAsync($request)->wait();
    }

    /**
     * @param SendInquiryMessageRestRequest $request
     * @return PromiseInterface
     */
    public function sendInquiryMessageAsync(SendInquiryMessageRestRequest $request)
    {
        return $this->callOperationAsync('SendInquiryMessage', $request);
    }

    /**
     * @param AddShippingLabelInfoRestRequest $request
     * @return AddShippingLabelInfoRestResponse
     */
    public function addShippingLabelInfo(AddShippingLabelInfoRestRequest $request)
    {
        return $this->addShippingLabelInfoAsync($request)->wait();
    }

    /**
     * @param AddShippingLabelInfoRestRequest $request
     * @return PromiseInterface
     */
    public function addShippingLabelInfoAsync(AddShippingLabelInfoRestRequest $request)
    {
        return $this->callOperationAsync('AddShippingLabelInfo', $request);
    }

    /**
     * @param CancelReturnRequestRestRequest $request
     * @return CancelReturnRequestRestResponse
     */
    public function cancelReturnRequest(CancelReturnRequestRestRequest $request)
    {
        return $this->cancelReturnRequestAsync($request)->wait();
    }

    /**
     * @param CancelReturnRequestRestRequest $request
     * @return PromiseInterface
     */
    public function cancelReturnRequestAsync(CancelReturnRequestRestRequest $request)
    {
        return $this->callOperationAsync('CancelReturnRequest', $request);
    }

    /**
     * @param CheckReturnEligibilityRestRequest $request
     * @return CheckReturnEligibilityRestResponse
     */
    public function checkReturnEligibility(CheckReturnEligibilityRestRequest $request)
    {
        return $this->checkReturnEligibilityAsync($request)->wait();
    }

    /**
     * @param CheckReturnEligibilityRestRequest $request
     * @return PromiseInterface
     */
    public function checkReturnEligibilityAsync(CheckReturnEligibilityRestRequest $request)
    {
        return $this->callOperationAsync('CheckReturnEligibility', $request);
    }

    /**
     * @param CheckShippingLabelEligibilityRestRequest $request
     * @return CheckShippingLabelEligibilityRestResponse
     */
    public function checkShippingLabelEligibility(CheckShippingLabelEligibilityRestRequest $request)
    {
        return $this->checkShippingLabelEligibilityAsync($request)->wait();
    }

    /**
     * @param CheckShippingLabelEligibilityRestRequest $request
     * @return PromiseInterface
     */
    public function checkShippingLabelEligibilityAsync(CheckShippingLabelEligibilityRestRequest $request)
    {
        return $this->callOperationAsync('CheckShippingLabelEligibility', $request);
    }

    /**
     * @param CreateReturnDraftRestRequest $request
     * @return CreateReturnDraftRestResponse
     */
    public function createReturnDraft(CreateReturnDraftRestRequest $request)
    {
        return $this->createReturnDraftAsync($request)->wait();
    }

    /**
     * @param CreateReturnDraftRestRequest $request
     * @return PromiseInterface
     */
    public function createReturnDraftAsync(CreateReturnDraftRestRequest $request)
    {
        return $this->callOperationAsync('CreateReturnDraft', $request);
    }

    /**
     * @param CreateReturnRequestRestRequest $request
     * @return CreateReturnRequestRestResponse
     */
    public function createReturnRequest(CreateReturnRequestRestRequest $request)
    {
        return $this->createReturnRequestAsync($request)->wait();
    }

    /**
     * @param CreateReturnRequestRestRequest $request
     * @return PromiseInterface
     */
    public function createReturnRequestAsync(CreateReturnRequestRestRequest $request)
    {
        return $this->callOperationAsync('CreateReturnRequest', $request);
    }

    /**
     * @param CreateReturnShippingLabelRestRequest $request
     * @return CreateReturnShippingLabelRestResponse
     */
    public function createReturnShippingLabel(CreateReturnShippingLabelRestRequest $request)
    {
        return $this->createReturnShippingLabelAsync($request)->wait();
    }

    /**
     * @param CreateReturnShippingLabelRestRequest $request
     * @return PromiseInterface
     */
    public function createReturnShippingLabelAsync(CreateReturnShippingLabelRestRequest $request)
    {
        return $this->callOperationAsync('CreateReturnShippingLabel', $request);
    }

    /**
     * @param DeleteReturnDraftFileRestRequest $request
     * @return DeleteReturnDraftFileRestResponse
     */
    public function deleteReturnDraftFile(DeleteReturnDraftFileRestRequest $request)
    {
        return $this->deleteReturnDraftFileAsync($request)->wait();
    }

    /**
     * @param DeleteReturnDraftFileRestRequest $request
     * @return PromiseInterface
     */
    public function deleteReturnDraftFileAsync(DeleteReturnDraftFileRestRequest $request)
    {
        return $this->callOperationAsync('DeleteReturnDraftFile', $request);
    }

    /**
     * @param DeleteReturnFileRestRequest $request
     * @return DeleteReturnFileRestResponse
     */
    public function deleteReturnFile(DeleteReturnFileRestRequest $request)
    {
        return $this->deleteReturnFileAsync($request)->wait();
    }

    /**
     * @param DeleteReturnFileRestRequest $request
     * @return PromiseInterface
     */
    public function deleteReturnFileAsync(DeleteReturnFileRestRequest $request)
    {
        return $this->callOperationAsync('DeleteReturnFile', $request);
    }

    /**
     * @param EscalateReturnRestRequest $request
     * @return EscalateReturnRestResponse
     */
    public function escalateReturn(EscalateReturnRestRequest $request)
    {
        return $this->escalateReturnAsync($request)->wait();
    }

    /**
     * @param EscalateReturnRestRequest $request
     * @return PromiseInterface
     */
    public function escalateReturnAsync(EscalateReturnRestRequest $request)
    {
        return $this->callOperationAsync('EscalateReturn', $request);
    }

    /**
     * @param GetReturnRestRequest $request
     * @return GetReturnRestResponse
     */
    public function getReturn(GetReturnRestRequest $request)
    {
        return $this->getReturnAsync($request)->wait();
    }

    /**
     * @param GetReturnRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnAsync(GetReturnRestRequest $request)
    {
        return $this->callOperationAsync('GetReturn', $request);
    }

    /**
     * @param GetReturnDraftRestRequest $request
     * @return GetReturnDraftRestResponse
     */
    public function getReturnDraft(GetReturnDraftRestRequest $request)
    {
        return $this->getReturnDraftAsync($request)->wait();
    }

    /**
     * @param GetReturnDraftRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnDraftAsync(GetReturnDraftRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnDraft', $request);
    }

    /**
     * @param GetReturnDraftFilesRestRequest $request
     * @return GetReturnDraftFilesRestResponse
     */
    public function getReturnDraftFiles(GetReturnDraftFilesRestRequest $request)
    {
        return $this->getReturnDraftFilesAsync($request)->wait();
    }

    /**
     * @param GetReturnDraftFilesRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnDraftFilesAsync(GetReturnDraftFilesRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnDraftFiles', $request);
    }

    /**
     * @param GetReturnEstimateRestRequest $request
     * @return GetReturnEstimateRestResponse
     */
    public function getReturnEstimate(GetReturnEstimateRestRequest $request)
    {
        return $this->getReturnEstimateAsync($request)->wait();
    }

    /**
     * @param GetReturnEstimateRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnEstimateAsync(GetReturnEstimateRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnEstimate', $request);
    }

    /**
     * @param GetReturnFilesRestRequest $request
     * @return GetReturnFilesRestResponse
     */
    public function getReturnFiles(GetReturnFilesRestRequest $request)
    {
        return $this->getReturnFilesAsync($request)->wait();
    }

    /**
     * @param GetReturnFilesRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnFilesAsync(GetReturnFilesRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnFiles', $request);
    }

    /**
     * @param GetReturnMetadataRestRequest $request
     * @return GetReturnMetadataRestResponse
     */
    public function getReturnMetadata(GetReturnMetadataRestRequest $request)
    {
        return $this->getReturnMetadataAsync($request)->wait();
    }

    /**
     * @param GetReturnMetadataRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnMetadataAsync(GetReturnMetadataRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnMetadata', $request);
    }

    /**
     * @return GetReturnPreferencesRestResponse
     */
    public function getReturnPreferences()
    {
        return $this->getReturnPreferencesAsync()->wait();
    }

    /**
     * @return PromiseInterface
     */
    public function getReturnPreferencesAsync()
    {
        return $this->callOperationAsync('GetReturnPreferences');
    }

    /**
     * @param GetReturnShippingLabelRestRequest $request
     * @return GetReturnShippingLabelRestResponse
     */
    public function getReturnShippingLabel(GetReturnShippingLabelRestRequest $request)
    {
        return $this->getReturnShippingLabelAsync($request)->wait();
    }

    /**
     * @param GetReturnShippingLabelRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnShippingLabelAsync(GetReturnShippingLabelRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnShippingLabel', $request);
    }

    /**
     * @param GetShipmentTrackingRestRequest $request
     * @return GetShipmentTrackingRestResponse
     */
    public function getShipmentTracking(GetShipmentTrackingRestRequest $request)
    {
        return $this->getShipmentTrackingAsync($request)->wait();
    }

    /**
     * @param GetShipmentTrackingRestRequest $request
     * @return PromiseInterface
     */
    public function getShipmentTrackingAsync(GetShipmentTrackingRestRequest $request)
    {
        return $this->callOperationAsync('GetShipmentTracking', $request);
    }

    /**
     * @param IssueReturnRefundRestRequest $request
     * @return IssueReturnRefundRestResponse
     */
    public function issueReturnRefund(IssueReturnRefundRestRequest $request)
    {
        return $this->issueReturnRefundAsync($request)->wait();
    }

    /**
     * @param IssueReturnRefundRestRequest $request
     * @return PromiseInterface
     */
    public function issueReturnRefundAsync(IssueReturnRefundRestRequest $request)
    {
        return $this->callOperationAsync('IssueReturnRefund', $request);
    }

    /**
     * @param MarkReturnReceivedRestRequest $request
     * @return MarkReturnReceivedRestResponse
     */
    public function markReturnReceived(MarkReturnReceivedRestRequest $request)
    {
        return $this->markReturnReceivedAsync($request)->wait();
    }

    /**
     * @param MarkReturnReceivedRestRequest $request
     * @return PromiseInterface
     */
    public function markReturnReceivedAsync(MarkReturnReceivedRestRequest $request)
    {
        return $this->callOperationAsync('MarkReturnReceived', $request);
    }

    /**
     * @param MarkReturnRefundReceivedRestRequest $request
     * @return MarkReturnRefundReceivedRestResponse
     */
    public function markReturnRefundReceived(MarkReturnRefundReceivedRestRequest $request)
    {
        return $this->markReturnRefundReceivedAsync($request)->wait();
    }

    /**
     * @param MarkReturnRefundReceivedRestRequest $request
     * @return PromiseInterface
     */
    public function markReturnRefundReceivedAsync(MarkReturnRefundReceivedRestRequest $request)
    {
        return $this->callOperationAsync('MarkReturnRefundReceived', $request);
    }

    /**
     * @param MarkReturnRefundSentRestRequest $request
     * @return MarkReturnRefundSentRestResponse
     */
    public function markReturnRefundSent(MarkReturnRefundSentRestRequest $request)
    {
        return $this->markReturnRefundSentAsync($request)->wait();
    }

    /**
     * @param MarkReturnRefundSentRestRequest $request
     * @return PromiseInterface
     */
    public function markReturnRefundSentAsync(MarkReturnRefundSentRestRequest $request)
    {
        return $this->callOperationAsync('MarkReturnRefundSent', $request);
    }

    /**
     * @param MarkReturnShippedRestRequest $request
     * @return MarkReturnShippedRestResponse
     */
    public function markReturnShipped(MarkReturnShippedRestRequest $request)
    {
        return $this->markReturnShippedAsync($request)->wait();
    }

    /**
     * @param MarkReturnShippedRestRequest $request
     * @return PromiseInterface
     */
    public function markReturnShippedAsync(MarkReturnShippedRestRequest $request)
    {
        return $this->callOperationAsync('MarkReturnShipped', $request);
    }

    /**
     * @param ProcessReturnRequestRestRequest $request
     * @return ProcessReturnRequestRestResponse
     */
    public function processReturnRequest(ProcessReturnRequestRestRequest $request)
    {
        return $this->processReturnRequestAsync($request)->wait();
    }

    /**
     * @param ProcessReturnRequestRestRequest $request
     * @return PromiseInterface
     */
    public function processReturnRequestAsync(ProcessReturnRequestRestRequest $request)
    {
        return $this->callOperationAsync('ProcessReturnRequest', $request);
    }

    /**
     * @param SearchReturnsRestRequest $request
     * @return SearchReturnsRestResponse
     */
    public function searchReturns(SearchReturnsRestRequest $request)
    {
        return $this->searchReturnsAsync($request)->wait();
    }

    /**
     * @param SearchReturnsRestRequest $request
     * @return PromiseInterface
     */
    public function searchReturnsAsync(SearchReturnsRestRequest $request)
    {
        return $this->callOperationAsync('SearchReturns', $request);
    }

    /**
     * @param SendReturnMessageRestRequest $request
     * @return SendReturnMessageRestResponse
     */
    public function sendReturnMessage(SendReturnMessageRestRequest $request)
    {
        return $this->sendReturnMessageAsync($request)->wait();
    }

    /**
     * @param SendReturnMessageRestRequest $request
     * @return PromiseInterface
     */
    public function sendReturnMessageAsync(SendReturnMessageRestRequest $request)
    {
        return $this->callOperationAsync('SendReturnMessage', $request);
    }

    /**
     * @param SendReturnShippingLabelRestRequest $request
     * @return SendReturnShippingLabelRestResponse
     */
    public function sendReturnShippingLabel(SendReturnShippingLabelRestRequest $request)
    {
        return $this->sendReturnShippingLabelAsync($request)->wait();
    }

    /**
     * @param SendReturnShippingLabelRestRequest $request
     * @return PromiseInterface
     */
    public function sendReturnShippingLabelAsync(SendReturnShippingLabelRestRequest $request)
    {
        return $this->callOperationAsync('SendReturnShippingLabel', $request);
    }

    /**
     * @param SetReturnPreferencesRestRequest $request
     * @return SetReturnPreferencesRestResponse
     */
    public function setReturnPreferences(SetReturnPreferencesRestRequest $request)
    {
        return $this->setReturnPreferencesAsync($request)->wait();
    }

    /**
     * @param SetReturnPreferencesRestRequest $request
     * @return PromiseInterface
     */
    public function setReturnPreferencesAsync(SetReturnPreferencesRestRequest $request)
    {
        return $this->callOperationAsync('SetReturnPreferences', $request);
    }

    /**
     * @param SubmitReturnFileRestRequest $request
     * @return SubmitReturnFileRestResponse
     */
    public function submitReturnFile(SubmitReturnFileRestRequest $request)
    {
        return $this->submitReturnFileAsync($request)->wait();
    }

    /**
     * @param SubmitReturnFileRestRequest $request
     * @return PromiseInterface
     */
    public function submitReturnFileAsync(SubmitReturnFileRestRequest $request)
    {
        return $this->callOperationAsync('SubmitReturnFile', $request);
    }

    /**
     * @param UpdateReturnDraftRestRequest $request
     * @return UpdateReturnDraftRestResponse
     */
    public function updateReturnDraft(UpdateReturnDraftRestRequest $request)
    {
        return $this->updateReturnDraftAsync($request)->wait();
    }

    /**
     * @param UpdateReturnDraftRestRequest $request
     * @return PromiseInterface
     */
    public function updateReturnDraftAsync(UpdateReturnDraftRestRequest $request)
    {
        return $this->callOperationAsync('UpdateReturnDraft', $request);
    }

    /**
     * @param UpdateShipmentTrackingRestRequest $request
     * @return UpdateShipmentTrackingRestResponse
     */
    public function updateShipmentTracking(UpdateShipmentTrackingRestRequest $request)
    {
        return $this->updateShipmentTrackingAsync($request)->wait();
    }

    /**
     * @param UpdateShipmentTrackingRestRequest $request
     * @return PromiseInterface
     */
    public function updateShipmentTrackingAsync(UpdateShipmentTrackingRestRequest $request)
    {
        return $this->callOperationAsync('UpdateShipmentTracking', $request);
    }

    /**
     * @param UploadReturnDraftFileRestRequest $request
     * @return UploadReturnDraftFileRestResponse
     */
    public function uploadReturnDraftFile(UploadReturnDraftFileRestRequest $request)
    {
        return $this->uploadReturnDraftFileAsync($request)->wait();
    }

    /**
     * @param UploadReturnDraftFileRestRequest $request
     * @return PromiseInterface
     */
    public function uploadReturnDraftFileAsync(UploadReturnDraftFileRestRequest $request)
    {
        return $this->callOperationAsync('UploadReturnDraftFile', $request);
    }

    /**
     * @param UploadReturnFileRestRequest $request
     * @return UploadReturnFileRestResponse
     */
    public function uploadReturnFile(UploadReturnFileRestRequest $request)
    {
        return $this->uploadReturnFileAsync($request)->wait();
    }

    /**
     * @param UploadReturnFileRestRequest $request
     * @return PromiseInterface
     */
    public function uploadReturnFileAsync(UploadReturnFileRestRequest $request)
    {
        return $this->callOperationAsync('UploadReturnFile', $request);
    }

    /**
     * @param VoidShippingLabelRestRequest $request
     * @return VoidShippingLabelRestResponse
     */
    public function voidShippingLabel(VoidShippingLabelRestRequest $request)
    {
        return $this->voidShippingLabelAsync($request)->wait();
    }

    /**
     * @param VoidShippingLabelRestRequest $request
     * @return PromiseInterface
     */
    public function voidShippingLabelAsync(VoidShippingLabelRestRequest $request)
    {
        return $this->callOperationAsync('VoidShippingLabel', $request);
    }

    /**
     * @param CreateCustomListRestRequest $request
     * @return CreateCustomListRestResponse
     */
    public function createCustomList(CreateCustomListRestRequest $request)
    {
        return $this->createCustomListAsync($request)->wait();
    }

    /**
     * @param CreateCustomListRestRequest $request
     * @return PromiseInterface
     */
    public function createCustomListAsync(CreateCustomListRestRequest $request)
    {
        return $this->callOperationAsync('CreateCustomList', $request);
    }

    /**
     * @param CreateReturnRulesRestRequest $request
     * @return CreateReturnRulesRestResponse
     */
    public function createReturnRules(CreateReturnRulesRestRequest $request)
    {
        return $this->createReturnRulesAsync($request)->wait();
    }

    /**
     * @param CreateReturnRulesRestRequest $request
     * @return PromiseInterface
     */
    public function createReturnRulesAsync(CreateReturnRulesRestRequest $request)
    {
        return $this->callOperationAsync('CreateReturnRules', $request);
    }

    /**
     * @return GetCustomListRestResponse
     */
    public function getCustomList()
    {
        return $this->getCustomListAsync()->wait();
    }

    /**
     * @return PromiseInterface
     */
    public function getCustomListAsync()
    {
        return $this->callOperationAsync('GetCustomList');
    }

    /**
     * @return GetCustomListsRestResponse
     */
    public function getCustomLists()
    {
        return $this->getCustomListsAsync()->wait();
    }

    /**
     * @return PromiseInterface
     */
    public function getCustomListsAsync()
    {
        return $this->callOperationAsync('GetCustomLists');
    }

    /**
     * @return GetReturnRuleTemplatesRestResponse
     */
    public function getReturnRuleTemplates()
    {
        return $this->getReturnRuleTemplatesAsync()->wait();
    }

    /**
     * @return PromiseInterface
     */
    public function getReturnRuleTemplatesAsync()
    {
        return $this->callOperationAsync('GetReturnRuleTemplates');
    }

    /**
     * @return GetStoreCategoriesRestResponse
     */
    public function getStoreCategories()
    {
        return $this->getStoreCategoriesAsync()->wait();
    }

    /**
     * @return PromiseInterface
     */
    public function getStoreCategoriesAsync()
    {
        return $this->callOperationAsync('GetStoreCategories');
    }

    /**
     * @param GetReturnRuleRestRequest $request
     * @return GetReturnRuleRestResponse
     */
    public function getReturnRule(GetReturnRuleRestRequest $request)
    {
        return $this->getReturnRuleAsync($request)->wait();
    }

    /**
     * @param GetReturnRuleRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnRuleAsync(GetReturnRuleRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnRule', $request);
    }

    /**
     * @param GetReturnRuleHistoryRestRequest $request
     * @return GetReturnRuleHistoryRestResponse
     */
    public function getReturnRuleHistory(GetReturnRuleHistoryRestRequest $request)
    {
        return $this->getReturnRuleHistoryAsync($request)->wait();
    }

    /**
     * @param GetReturnRuleHistoryRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnRuleHistoryAsync(GetReturnRuleHistoryRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnRuleHistory', $request);
    }

    /**
     * @param GetReturnRulesRestRequest $request
     * @return GetReturnRulesRestResponse
     */
    public function getReturnRules(GetReturnRulesRestRequest $request)
    {
        return $this->getReturnRulesAsync($request)->wait();
    }

    /**
     * @param GetReturnRulesRestRequest $request
     * @return PromiseInterface
     */
    public function getReturnRulesAsync(GetReturnRulesRestRequest $request)
    {
        return $this->callOperationAsync('GetReturnRules', $request);
    }

    /**
     * @param UpdateCustomListRestRequest $request
     * @return UpdateCustomListRestResponse
     */
    public function updateCustomList(UpdateCustomListRestRequest $request)
    {
        return $this->updateCustomListAsync($request)->wait();
    }

    /**
     * @param UpdateCustomListRestRequest $request
     * @return PromiseInterface
     */
    public function updateCustomListAsync(UpdateCustomListRestRequest $request)
    {
        return $this->callOperationAsync('UpdateCustomList', $request);
    }

    /**
     * @param UpdateReturnRulesRestRequest $request
     * @return UpdateReturnRulesRestResponse
     */
    public function updateReturnRules(UpdateReturnRulesRestRequest $request)
    {
        return $this->updateReturnRulesAsync($request)->wait();
    }

    /**
     * @param UpdateReturnRulesRestRequest $request
     * @return PromiseInterface
     */
    public function updateReturnRulesAsync(UpdateReturnRulesRestRequest $request)
    {
        return $this->callOperationAsync('UpdateReturnRules', $request);
    }
}
