<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\ProductMetadata\Services;

use DTS\eBaySDK\ProductMetadata\Types\GetProductSearchNamesRequest;
use DTS\eBaySDK\ProductMetadata\Types\GetProductSearchNamesResponse;
use GuzzleHttp\Promise\PromiseInterface;
use DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchNamesRequest;
use DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchNamesResponse;
use DTS\eBaySDK\ProductMetadata\Types\GetProductSearchValuesRequest;
use DTS\eBaySDK\ProductMetadata\Types\GetProductSearchValuesResponse;
use DTS\eBaySDK\ProductMetadata\Types\GetProductSearchValuesBulkRequest;
use DTS\eBaySDK\ProductMetadata\Types\GetProductSearchValuesBulkResponse;
use DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchValuesRequest;
use DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchValuesResponse;
use DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchValuesBulkRequest;
use DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchValuesBulkResponse;
use DTS\eBaySDK\ProductMetadata\Types\GetProductSearchDataVersionRequest;
use DTS\eBaySDK\ProductMetadata\Types\GetProductSearchDataVersionResponse;
use DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchDataVersionRequest;
use DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchDataVersionResponse;
use DTS\eBaySDK\ProductMetadata\Types\ProductMetadataBulkRequest;
use DTS\eBaySDK\ProductMetadata\Types\ProductMetadataBulkResponse;
class ProductMetadataService extends ProductMetadataBaseService
{
    const API_VERSION = '1.3.0';

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param GetProductSearchNamesRequest $request
     * @return GetProductSearchNamesResponse
     */
    public function getProductSearchNames(GetProductSearchNamesRequest $request)
    {
        return $this->getProductSearchNamesAsync($request)->wait();
    }

    /**
     * @param GetProductSearchNamesRequest $request
     * @return PromiseInterface
     */
    public function getProductSearchNamesAsync(GetProductSearchNamesRequest $request)
    {
        return $this->callOperationAsync(
            'getProductSearchNames',
            $request,
            '\DTS\eBaySDK\ProductMetadata\Types\GetProductSearchNamesResponse'
        );
    }

    /**
     * @param GetCompatibilitySearchNamesRequest $request
     * @return GetCompatibilitySearchNamesResponse
     */
    public function getCompatibilitySearchNames(GetCompatibilitySearchNamesRequest $request)
    {
        return $this->getCompatibilitySearchNamesAsync($request)->wait();
    }

    /**
     * @param GetCompatibilitySearchNamesRequest $request
     * @return PromiseInterface
     */
    public function getCompatibilitySearchNamesAsync(GetCompatibilitySearchNamesRequest $request)
    {
        return $this->callOperationAsync(
            'getCompatibilitySearchNames',
            $request,
            '\DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchNamesResponse'
        );
    }

    /**
     * @param GetProductSearchValuesRequest $request
     * @return GetProductSearchValuesResponse
     */
    public function getProductSearchValues(GetProductSearchValuesRequest $request)
    {
        return $this->getProductSearchValuesAsync($request)->wait();
    }

    /**
     * @param GetProductSearchValuesRequest $request
     * @return PromiseInterface
     */
    public function getProductSearchValuesAsync(GetProductSearchValuesRequest $request)
    {
        return $this->callOperationAsync(
            'getProductSearchValues',
            $request,
            '\DTS\eBaySDK\ProductMetadata\Types\GetProductSearchValuesResponse'
        );
    }

    /**
     * @param GetProductSearchValuesBulkRequest $request
     * @return GetProductSearchValuesBulkResponse
     */
    public function getProductSearchValuesBulk(GetProductSearchValuesBulkRequest $request)
    {
        return $this->getProductSearchValuesBulkAsync($request)->wait();
    }

    /**
     * @param GetProductSearchValuesBulkRequest $request
     * @return PromiseInterface
     */
    public function getProductSearchValuesBulkAsync(GetProductSearchValuesBulkRequest $request)
    {
        return $this->callOperationAsync(
            'getProductSearchValuesBulk',
            $request,
            '\DTS\eBaySDK\ProductMetadata\Types\GetProductSearchValuesBulkResponse'
        );
    }

    /**
     * @param GetCompatibilitySearchValuesRequest $request
     * @return GetCompatibilitySearchValuesResponse
     */
    public function getCompatibilitySearchValues(GetCompatibilitySearchValuesRequest $request)
    {
        return $this->getCompatibilitySearchValuesAsync($request)->wait();
    }

    /**
     * @param GetCompatibilitySearchValuesRequest $request
     * @return PromiseInterface
     */
    public function getCompatibilitySearchValuesAsync(GetCompatibilitySearchValuesRequest $request)
    {
        return $this->callOperationAsync(
            'getCompatibilitySearchValues',
            $request,
            '\DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchValuesResponse'
        );
    }

    /**
     * @param GetCompatibilitySearchValuesBulkRequest $request
     * @return GetCompatibilitySearchValuesBulkResponse
     */
    public function getCompatibilitySearchValuesBulk(GetCompatibilitySearchValuesBulkRequest $request)
    {
        return $this->getCompatibilitySearchValuesBulkAsync($request)->wait();
    }

    /**
     * @param GetCompatibilitySearchValuesBulkRequest $request
     * @return PromiseInterface
     */
    public function getCompatibilitySearchValuesBulkAsync(GetCompatibilitySearchValuesBulkRequest $request)
    {
        return $this->callOperationAsync(
            'getCompatibilitySearchValuesBulk',
            $request,
            '\DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchValuesBulkResponse'
        );
    }

    /**
     * @param GetProductSearchDataVersionRequest $request
     * @return GetProductSearchDataVersionResponse
     */
    public function getProductSearchDataVersion(GetProductSearchDataVersionRequest $request)
    {
        return $this->getProductSearchDataVersionAsync($request)->wait();
    }

    /**
     * @param GetProductSearchDataVersionRequest $request
     * @return PromiseInterface
     */
    public function getProductSearchDataVersionAsync(GetProductSearchDataVersionRequest $request)
    {
        return $this->callOperationAsync(
            'getProductSearchDataVersion',
            $request,
            '\DTS\eBaySDK\ProductMetadata\Types\GetProductSearchDataVersionResponse'
        );
    }

    /**
     * @param GetCompatibilitySearchDataVersionRequest $request
     * @return GetCompatibilitySearchDataVersionResponse
     */
    public function getCompatibilitySearchDataVersion(GetCompatibilitySearchDataVersionRequest $request)
    {
        return $this->getCompatibilitySearchDataVersionAsync($request)->wait();
    }

    /**
     * @param GetCompatibilitySearchDataVersionRequest $request
     * @return PromiseInterface
     */
    public function getCompatibilitySearchDataVersionAsync(GetCompatibilitySearchDataVersionRequest $request)
    {
        return $this->callOperationAsync(
            'getCompatibilitySearchDataVersion',
            $request,
            '\DTS\eBaySDK\ProductMetadata\Types\GetCompatibilitySearchDataVersionResponse'
        );
    }

    /**
     * @param ProductMetadataBulkRequest $request
     * @return ProductMetadataBulkResponse
     */
    public function getProductMetadataBulk(ProductMetadataBulkRequest $request)
    {
        return $this->getProductMetadataBulkAsync($request)->wait();
    }

    /**
     * @param ProductMetadataBulkRequest $request
     * @return PromiseInterface
     */
    public function getProductMetadataBulkAsync(ProductMetadataBulkRequest $request)
    {
        return $this->callOperationAsync(
            'getProductMetadataBulk',
            $request,
            '\DTS\eBaySDK\ProductMetadata\Types\ProductMetadataBulkResponse'
        );
    }
}
